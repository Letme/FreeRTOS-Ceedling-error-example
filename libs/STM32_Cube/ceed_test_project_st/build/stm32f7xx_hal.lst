ARM GAS  /tmp/ccZ6Gboo.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	uwTick,4,4
  17              		.global	uwTickPrio
  18              		.section	.data.uwTickPrio,"aw"
  19              		.align	2
  22              	uwTickPrio:
  23 0000 10000000 		.word	16
  24              		.global	uwTickFreq
  25              		.section	.data.uwTickFreq,"aw"
  28              	uwTickFreq:
  29 0000 01       		.byte	1
  30              		.section	.text.HAL_Init,"ax",%progbits
  31              		.align	1
  32              		.global	HAL_Init
  33              		.arch armv7e-m
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  37              		.fpu fpv5-d16
  39              	HAL_Init:
  40              	.LFB141:
  41              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccZ6Gboo.s 			page 2


  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.9
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x09) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
ARM GAS  /tmp/ccZ6Gboo.s 			page 3


  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
ARM GAS  /tmp/ccZ6Gboo.s 			page 4


 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  42              		.loc 1 139 1
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 00AF     		add	r7, sp, #0
  52              	.LCFI1:
  53              		.cfi_def_cfa_register 7
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  54              		.loc 1 151 3
  55 0004 0320     		movs	r0, #3
  56 0006 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  57              		.loc 1 154 3
  58 000a 0020     		movs	r0, #0
  59 000c FFF7FEFF 		bl	HAL_InitTick
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
  60              		.loc 1 157 3
  61 0010 FFF7FEFF 		bl	HAL_MspInit
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
  62              		.loc 1 160 10
  63 0014 0023     		movs	r3, #0
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  64              		.loc 1 161 1
  65 0016 1846     		mov	r0, r3
  66 0018 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE141:
  70              		.section	.text.HAL_DeInit,"ax",%progbits
  71              		.align	1
  72              		.global	HAL_DeInit
  73              		.syntax unified
ARM GAS  /tmp/ccZ6Gboo.s 			page 5


  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv5-d16
  78              	HAL_DeInit:
  79              	.LFB142:
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  80              		.loc 1 169 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 00AF     		add	r7, sp, #0
  90              	.LCFI3:
  91              		.cfi_def_cfa_register 7
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
  92              		.loc 1 171 3
  93 0004 134B     		ldr	r3, .L5
  94 0006 4FF0FF32 		mov	r2, #-1
  95 000a 1A62     		str	r2, [r3, #32]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  96              		.loc 1 172 3
  97 000c 114B     		ldr	r3, .L5
  98 000e 0022     		movs	r2, #0
  99 0010 1A62     		str	r2, [r3, #32]
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 100              		.loc 1 174 3
 101 0012 104B     		ldr	r3, .L5
 102 0014 4FF0FF32 		mov	r2, #-1
 103 0018 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 104              		.loc 1 175 3
 105 001a 0E4B     		ldr	r3, .L5
 106 001c 0022     		movs	r2, #0
 107 001e 5A62     		str	r2, [r3, #36]
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 108              		.loc 1 177 3
 109 0020 0C4B     		ldr	r3, .L5
 110 0022 4FF0FF32 		mov	r2, #-1
 111 0026 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 112              		.loc 1 178 3
 113 0028 0A4B     		ldr	r3, .L5
 114 002a 0022     		movs	r2, #0
ARM GAS  /tmp/ccZ6Gboo.s 			page 6


 115 002c 1A61     		str	r2, [r3, #16]
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 116              		.loc 1 180 3
 117 002e 094B     		ldr	r3, .L5
 118 0030 4FF0FF32 		mov	r2, #-1
 119 0034 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 120              		.loc 1 181 3
 121 0036 074B     		ldr	r3, .L5
 122 0038 0022     		movs	r2, #0
 123 003a 5A61     		str	r2, [r3, #20]
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 124              		.loc 1 183 3
 125 003c 054B     		ldr	r3, .L5
 126 003e 4FF0FF32 		mov	r2, #-1
 127 0042 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 128              		.loc 1 184 3
 129 0044 034B     		ldr	r3, .L5
 130 0046 0022     		movs	r2, #0
 131 0048 9A61     		str	r2, [r3, #24]
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 132              		.loc 1 187 3
 133 004a FFF7FEFF 		bl	HAL_MspDeInit
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 134              		.loc 1 190 10
 135 004e 0023     		movs	r3, #0
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 136              		.loc 1 191 1
 137 0050 1846     		mov	r0, r3
 138 0052 80BD     		pop	{r7, pc}
 139              	.L6:
 140              		.align	2
 141              	.L5:
 142 0054 00380240 		.word	1073887232
 143              		.cfi_endproc
 144              	.LFE142:
 146              		.section	.text.HAL_MspInit,"ax",%progbits
 147              		.align	1
 148              		.weak	HAL_MspInit
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv5-d16
 154              	HAL_MspInit:
 155              	.LFB143:
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
ARM GAS  /tmp/ccZ6Gboo.s 			page 7


 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 156              		.loc 1 198 1
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 4
 164              		.cfi_offset 7, -4
 165 0002 00AF     		add	r7, sp, #0
 166              	.LCFI5:
 167              		.cfi_def_cfa_register 7
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 168              		.loc 1 202 1
 169 0004 00BF     		nop
 170 0006 BD46     		mov	sp, r7
 171              	.LCFI6:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 0008 5DF8047B 		ldr	r7, [sp], #4
 175              	.LCFI7:
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 000c 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE143:
 182              		.section	.text.HAL_MspDeInit,"ax",%progbits
 183              		.align	1
 184              		.weak	HAL_MspDeInit
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv5-d16
 190              	HAL_MspDeInit:
 191              	.LFB144:
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 192              		.loc 1 209 1
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              	.LCFI8:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccZ6Gboo.s 			page 8


 202              	.LCFI9:
 203              		.cfi_def_cfa_register 7
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 204              		.loc 1 213 1
 205 0004 00BF     		nop
 206 0006 BD46     		mov	sp, r7
 207              	.LCFI10:
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 0008 5DF8047B 		ldr	r7, [sp], #4
 211              	.LCFI11:
 212              		.cfi_restore 7
 213              		.cfi_def_cfa_offset 0
 214 000c 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE144:
 218              		.section	.text.HAL_InitTick,"ax",%progbits
 219              		.align	1
 220              		.weak	HAL_InitTick
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv5-d16
 226              	HAL_InitTick:
 227              	.LFB145:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 228              		.loc 1 232 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              	.LCFI12:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccZ6Gboo.s 			page 9


 238              	.LCFI13:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI14:
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 244              		.loc 1 234 7
 245 0008 124B     		ldr	r3, .L14
 246 000a 1A68     		ldr	r2, [r3]
 247              		.loc 1 234 51
 248 000c 124B     		ldr	r3, .L14+4
 249 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250 0010 1946     		mov	r1, r3
 251 0012 4FF47A73 		mov	r3, #1000
 252 0016 B3FBF1F3 		udiv	r3, r3, r1
 253              		.loc 1 234 7
 254 001a B2FBF3F3 		udiv	r3, r2, r3
 255 001e 1846     		mov	r0, r3
 256 0020 FFF7FEFF 		bl	HAL_SYSTICK_Config
 257 0024 0346     		mov	r3, r0
 258              		.loc 1 234 6
 259 0026 002B     		cmp	r3, #0
 260 0028 01D0     		beq	.L10
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 261              		.loc 1 236 12
 262 002a 0123     		movs	r3, #1
 263 002c 0EE0     		b	.L11
 264              	.L10:
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 265              		.loc 1 240 6
 266 002e 7B68     		ldr	r3, [r7, #4]
 267 0030 0F2B     		cmp	r3, #15
 268 0032 0AD8     		bhi	.L12
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 269              		.loc 1 242 5
 270 0034 0022     		movs	r2, #0
 271 0036 7968     		ldr	r1, [r7, #4]
 272 0038 4FF0FF30 		mov	r0, #-1
 273 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 274              		.loc 1 243 16
 275 0040 064A     		ldr	r2, .L14+8
 276 0042 7B68     		ldr	r3, [r7, #4]
 277 0044 1360     		str	r3, [r2]
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/ccZ6Gboo.s 			page 10


 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 278              		.loc 1 251 10
 279 0046 0023     		movs	r3, #0
 280 0048 00E0     		b	.L11
 281              	.L12:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 282              		.loc 1 247 12
 283 004a 0123     		movs	r3, #1
 284              	.L11:
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 285              		.loc 1 252 1
 286 004c 1846     		mov	r0, r3
 287 004e 0837     		adds	r7, r7, #8
 288              	.LCFI15:
 289              		.cfi_def_cfa_offset 8
 290 0050 BD46     		mov	sp, r7
 291              	.LCFI16:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0052 80BD     		pop	{r7, pc}
 295              	.L15:
 296              		.align	2
 297              	.L14:
 298 0054 00000000 		.word	SystemCoreClock
 299 0058 00000000 		.word	uwTickFreq
 300 005c 00000000 		.word	uwTickPrio
 301              		.cfi_endproc
 302              	.LFE145:
 304              		.section	.text.HAL_IncTick,"ax",%progbits
 305              		.align	1
 306              		.weak	HAL_IncTick
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	HAL_IncTick:
 313              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
ARM GAS  /tmp/ccZ6Gboo.s 			page 11


 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 314              		.loc 1 291 1
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              	.LCFI17:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 00AF     		add	r7, sp, #0
 324              	.LCFI18:
 325              		.cfi_def_cfa_register 7
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 326              		.loc 1 292 10
 327 0004 064B     		ldr	r3, .L17
 328 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0008 1A46     		mov	r2, r3
 330 000a 064B     		ldr	r3, .L17+4
 331 000c 1B68     		ldr	r3, [r3]
 332 000e 1344     		add	r3, r3, r2
 333 0010 044A     		ldr	r2, .L17+4
 334 0012 1360     		str	r3, [r2]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 335              		.loc 1 293 1
 336 0014 00BF     		nop
 337 0016 BD46     		mov	sp, r7
 338              	.LCFI19:
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 0018 5DF8047B 		ldr	r7, [sp], #4
 342              	.LCFI20:
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 001c 7047     		bx	lr
 346              	.L18:
 347 001e 00BF     		.align	2
 348              	.L17:
ARM GAS  /tmp/ccZ6Gboo.s 			page 12


 349 0020 00000000 		.word	uwTickFreq
 350 0024 00000000 		.word	uwTick
 351              		.cfi_endproc
 352              	.LFE146:
 354              		.section	.text.HAL_GetTick,"ax",%progbits
 355              		.align	1
 356              		.weak	HAL_GetTick
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-d16
 362              	HAL_GetTick:
 363              	.LFB147:
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 364              		.loc 1 302 1
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI21:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 00AF     		add	r7, sp, #0
 374              	.LCFI22:
 375              		.cfi_def_cfa_register 7
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 376              		.loc 1 303 10
 377 0004 034B     		ldr	r3, .L21
 378 0006 1B68     		ldr	r3, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 379              		.loc 1 304 1
 380 0008 1846     		mov	r0, r3
 381 000a BD46     		mov	sp, r7
 382              	.LCFI23:
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 000c 5DF8047B 		ldr	r7, [sp], #4
 386              	.LCFI24:
 387              		.cfi_restore 7
 388              		.cfi_def_cfa_offset 0
 389 0010 7047     		bx	lr
 390              	.L22:
 391 0012 00BF     		.align	2
 392              	.L21:
 393 0014 00000000 		.word	uwTick
 394              		.cfi_endproc
 395              	.LFE147:
 397              		.section	.text.HAL_GetTickPrio,"ax",%progbits
ARM GAS  /tmp/ccZ6Gboo.s 			page 13


 398              		.align	1
 399              		.global	HAL_GetTickPrio
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-d16
 405              	HAL_GetTickPrio:
 406              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 407              		.loc 1 311 1
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              	.LCFI25:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              	.LCFI26:
 418              		.cfi_def_cfa_register 7
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 419              		.loc 1 312 10
 420 0004 034B     		ldr	r3, .L25
 421 0006 1B68     		ldr	r3, [r3]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 422              		.loc 1 313 1
 423 0008 1846     		mov	r0, r3
 424 000a BD46     		mov	sp, r7
 425              	.LCFI27:
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 000c 5DF8047B 		ldr	r7, [sp], #4
 429              	.LCFI28:
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 0010 7047     		bx	lr
 433              	.L26:
 434 0012 00BF     		.align	2
 435              	.L25:
 436 0014 00000000 		.word	uwTickPrio
 437              		.cfi_endproc
 438              	.LFE148:
 440              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 441              		.align	1
 442              		.global	HAL_SetTickFreq
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv5-d16
 448              	HAL_SetTickFreq:
ARM GAS  /tmp/ccZ6Gboo.s 			page 14


 449              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 450              		.loc 1 320 1
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 16
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
 455              	.LCFI29:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 0002 84B0     		sub	sp, sp, #16
 460              	.LCFI30:
 461              		.cfi_def_cfa_offset 24
 462 0004 00AF     		add	r7, sp, #0
 463              	.LCFI31:
 464              		.cfi_def_cfa_register 7
 465 0006 0346     		mov	r3, r0
 466 0008 FB71     		strb	r3, [r7, #7]
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 467              		.loc 1 321 21
 468 000a 0023     		movs	r3, #0
 469 000c FB73     		strb	r3, [r7, #15]
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 470              		.loc 1 326 18
 471 000e 0E4B     		ldr	r3, .L30
 472 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473              		.loc 1 326 6
 474 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 475 0014 9A42     		cmp	r2, r3
 476 0016 12D0     		beq	.L28
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Back up uwTickFreq frequency */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     prevTickFreq = uwTickFreq;
 477              		.loc 1 329 18
 478 0018 0B4B     		ldr	r3, .L30
 479 001a 1B78     		ldrb	r3, [r3]
 480 001c BB73     		strb	r3, [r7, #14]
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 481              		.loc 1 332 16
 482 001e 0A4A     		ldr	r2, .L30
 483 0020 FB79     		ldrb	r3, [r7, #7]
 484 0022 1370     		strb	r3, [r2]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
ARM GAS  /tmp/ccZ6Gboo.s 			page 15


 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 485              		.loc 1 335 14
 486 0024 094B     		ldr	r3, .L30+4
 487 0026 1B68     		ldr	r3, [r3]
 488 0028 1846     		mov	r0, r3
 489 002a FFF7FEFF 		bl	HAL_InitTick
 490 002e 0346     		mov	r3, r0
 491 0030 FB73     		strb	r3, [r7, #15]
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     if (status != HAL_OK)
 492              		.loc 1 337 8
 493 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 494 0034 002B     		cmp	r3, #0
 495 0036 02D0     		beq	.L28
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       /* Restore previous tick frequency */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       uwTickFreq = prevTickFreq;
 496              		.loc 1 340 18
 497 0038 034A     		ldr	r2, .L30
 498 003a BB7B     		ldrb	r3, [r7, #14]
 499 003c 1370     		strb	r3, [r2]
 500              	.L28:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 501              		.loc 1 344 10
 502 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 503              		.loc 1 345 1
 504 0040 1846     		mov	r0, r3
 505 0042 1037     		adds	r7, r7, #16
 506              	.LCFI32:
 507              		.cfi_def_cfa_offset 8
 508 0044 BD46     		mov	sp, r7
 509              	.LCFI33:
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 0046 80BD     		pop	{r7, pc}
 513              	.L31:
 514              		.align	2
 515              	.L30:
 516 0048 00000000 		.word	uwTickFreq
 517 004c 00000000 		.word	uwTickPrio
 518              		.cfi_endproc
 519              	.LFE149:
 521              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 522              		.align	1
 523              		.global	HAL_GetTickFreq
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv5-d16
 529              	HAL_GetTickFreq:
 530              	.LFB150:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/ccZ6Gboo.s 			page 16


 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 531              		.loc 1 352 1
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              	.LCFI34:
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 00AF     		add	r7, sp, #0
 541              	.LCFI35:
 542              		.cfi_def_cfa_register 7
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 543              		.loc 1 353 10
 544 0004 034B     		ldr	r3, .L34
 545 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 546              		.loc 1 354 1
 547 0008 1846     		mov	r0, r3
 548 000a BD46     		mov	sp, r7
 549              	.LCFI36:
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 000c 5DF8047B 		ldr	r7, [sp], #4
 553              	.LCFI37:
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0010 7047     		bx	lr
 557              	.L35:
 558 0012 00BF     		.align	2
 559              	.L34:
 560 0014 00000000 		.word	uwTickFreq
 561              		.cfi_endproc
 562              	.LFE150:
 564              		.section	.text.HAL_Delay,"ax",%progbits
 565              		.align	1
 566              		.weak	HAL_Delay
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv5-d16
 572              	HAL_Delay:
 573              	.LFB151:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
ARM GAS  /tmp/ccZ6Gboo.s 			page 17


 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 574              		.loc 1 368 1
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 16
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              	.LCFI38:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 84B0     		sub	sp, sp, #16
 584              	.LCFI39:
 585              		.cfi_def_cfa_offset 24
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI40:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 590              		.loc 1 369 24
 591 0008 FFF7FEFF 		bl	HAL_GetTick
 592 000c B860     		str	r0, [r7, #8]
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 593              		.loc 1 370 12
 594 000e 7B68     		ldr	r3, [r7, #4]
 595 0010 FB60     		str	r3, [r7, #12]
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 596              		.loc 1 373 6
 597 0012 FB68     		ldr	r3, [r7, #12]
 598 0014 B3F1FF3F 		cmp	r3, #-1
 599 0018 05D0     		beq	.L39
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 600              		.loc 1 375 13
 601 001a 0A4B     		ldr	r3, .L40
 602 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603 001e 1A46     		mov	r2, r3
 604              		.loc 1 375 10
 605 0020 FB68     		ldr	r3, [r7, #12]
 606 0022 1344     		add	r3, r3, r2
 607 0024 FB60     		str	r3, [r7, #12]
 608              	.L39:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 609              		.loc 1 378 9
 610 0026 00BF     		nop
 611              	.L38:
 612              		.loc 1 378 11 discriminator 1
 613 0028 FFF7FEFF 		bl	HAL_GetTick
 614 002c 0246     		mov	r2, r0
 615              		.loc 1 378 25 discriminator 1
ARM GAS  /tmp/ccZ6Gboo.s 			page 18


 616 002e BB68     		ldr	r3, [r7, #8]
 617 0030 D31A     		subs	r3, r2, r3
 618              		.loc 1 378 9 discriminator 1
 619 0032 FA68     		ldr	r2, [r7, #12]
 620 0034 9A42     		cmp	r2, r3
 621 0036 F7D8     		bhi	.L38
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 622              		.loc 1 381 1
 623 0038 00BF     		nop
 624 003a 00BF     		nop
 625 003c 1037     		adds	r7, r7, #16
 626              	.LCFI41:
 627              		.cfi_def_cfa_offset 8
 628 003e BD46     		mov	sp, r7
 629              	.LCFI42:
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0040 80BD     		pop	{r7, pc}
 633              	.L41:
 634 0042 00BF     		.align	2
 635              	.L40:
 636 0044 00000000 		.word	uwTickFreq
 637              		.cfi_endproc
 638              	.LFE151:
 640              		.section	.text.HAL_SuspendTick,"ax",%progbits
 641              		.align	1
 642              		.weak	HAL_SuspendTick
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu fpv5-d16
 648              	HAL_SuspendTick:
 649              	.LFB152:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 650              		.loc 1 394 1
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 80B4     		push	{r7}
 656              	.LCFI43:
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
ARM GAS  /tmp/ccZ6Gboo.s 			page 19


 659 0002 00AF     		add	r7, sp, #0
 660              	.LCFI44:
 661              		.cfi_def_cfa_register 7
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 662              		.loc 1 396 17
 663 0004 054B     		ldr	r3, .L43
 664 0006 1B68     		ldr	r3, [r3]
 665 0008 044A     		ldr	r2, .L43
 666 000a 23F00203 		bic	r3, r3, #2
 667 000e 1360     		str	r3, [r2]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 668              		.loc 1 397 1
 669 0010 00BF     		nop
 670 0012 BD46     		mov	sp, r7
 671              	.LCFI45:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0014 5DF8047B 		ldr	r7, [sp], #4
 675              	.LCFI46:
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 0018 7047     		bx	lr
 679              	.L44:
 680 001a 00BF     		.align	2
 681              	.L43:
 682 001c 10E000E0 		.word	-536813552
 683              		.cfi_endproc
 684              	.LFE152:
 686              		.section	.text.HAL_ResumeTick,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_ResumeTick
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv5-d16
 694              	HAL_ResumeTick:
 695              	.LFB153:
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 696              		.loc 1 410 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccZ6Gboo.s 			page 20


 702              	.LCFI47:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 00AF     		add	r7, sp, #0
 706              	.LCFI48:
 707              		.cfi_def_cfa_register 7
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 708              		.loc 1 412 18
 709 0004 054B     		ldr	r3, .L46
 710 0006 1B68     		ldr	r3, [r3]
 711 0008 044A     		ldr	r2, .L46
 712 000a 43F00203 		orr	r3, r3, #2
 713 000e 1360     		str	r3, [r2]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 714              		.loc 1 413 1
 715 0010 00BF     		nop
 716 0012 BD46     		mov	sp, r7
 717              	.LCFI49:
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 0014 5DF8047B 		ldr	r7, [sp], #4
 721              	.LCFI50:
 722              		.cfi_restore 7
 723              		.cfi_def_cfa_offset 0
 724 0018 7047     		bx	lr
 725              	.L47:
 726 001a 00BF     		.align	2
 727              	.L46:
 728 001c 10E000E0 		.word	-536813552
 729              		.cfi_endproc
 730              	.LFE153:
 732              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_GetHalVersion
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv5-d16
 740              	HAL_GetHalVersion:
 741              	.LFB154:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 742              		.loc 1 420 1
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747 0000 80B4     		push	{r7}
 748              	.LCFI51:
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
ARM GAS  /tmp/ccZ6Gboo.s 			page 21


 751 0002 00AF     		add	r7, sp, #0
 752              	.LCFI52:
 753              		.cfi_def_cfa_register 7
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 754              		.loc 1 421 9
 755 0004 024B     		ldr	r3, .L50
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 756              		.loc 1 422 1
 757 0006 1846     		mov	r0, r3
 758 0008 BD46     		mov	sp, r7
 759              	.LCFI53:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 000a 5DF8047B 		ldr	r7, [sp], #4
 763              	.LCFI54:
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 000e 7047     		bx	lr
 767              	.L51:
 768              		.align	2
 769              	.L50:
 770 0010 00090201 		.word	16910592
 771              		.cfi_endproc
 772              	.LFE154:
 774              		.section	.text.HAL_GetREVID,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_GetREVID
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu fpv5-d16
 782              	HAL_GetREVID:
 783              	.LFB155:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 784              		.loc 1 429 1
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              	.LCFI55:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 0002 00AF     		add	r7, sp, #0
 794              	.LCFI56:
 795              		.cfi_def_cfa_register 7
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 796              		.loc 1 430 18
 797 0004 034B     		ldr	r3, .L54
 798 0006 1B68     		ldr	r3, [r3]
 799              		.loc 1 430 28
ARM GAS  /tmp/ccZ6Gboo.s 			page 22


 800 0008 1B0C     		lsrs	r3, r3, #16
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 801              		.loc 1 431 1
 802 000a 1846     		mov	r0, r3
 803 000c BD46     		mov	sp, r7
 804              	.LCFI57:
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 000e 5DF8047B 		ldr	r7, [sp], #4
 808              	.LCFI58:
 809              		.cfi_restore 7
 810              		.cfi_def_cfa_offset 0
 811 0012 7047     		bx	lr
 812              	.L55:
 813              		.align	2
 814              	.L54:
 815 0014 002004E0 		.word	-536600576
 816              		.cfi_endproc
 817              	.LFE155:
 819              		.section	.text.HAL_GetDEVID,"ax",%progbits
 820              		.align	1
 821              		.global	HAL_GetDEVID
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu fpv5-d16
 827              	HAL_GetDEVID:
 828              	.LFB156:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 829              		.loc 1 438 1
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              	.LCFI59:
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 00AF     		add	r7, sp, #0
 839              	.LCFI60:
 840              		.cfi_def_cfa_register 7
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 841              		.loc 1 439 18
 842 0004 044B     		ldr	r3, .L58
 843 0006 1B68     		ldr	r3, [r3]
 844              		.loc 1 439 28
 845 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 846              		.loc 1 440 1
 847 000c 1846     		mov	r0, r3
 848 000e BD46     		mov	sp, r7
ARM GAS  /tmp/ccZ6Gboo.s 			page 23


 849              	.LCFI61:
 850              		.cfi_def_cfa_register 13
 851              		@ sp needed
 852 0010 5DF8047B 		ldr	r7, [sp], #4
 853              	.LCFI62:
 854              		.cfi_restore 7
 855              		.cfi_def_cfa_offset 0
 856 0014 7047     		bx	lr
 857              	.L59:
 858 0016 00BF     		.align	2
 859              	.L58:
 860 0018 002004E0 		.word	-536600576
 861              		.cfi_endproc
 862              	.LFE156:
 864              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 865              		.align	1
 866              		.global	HAL_GetUIDw0
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv5-d16
 872              	HAL_GetUIDw0:
 873              	.LFB157:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 874              		.loc 1 447 1
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879 0000 80B4     		push	{r7}
 880              	.LCFI63:
 881              		.cfi_def_cfa_offset 4
 882              		.cfi_offset 7, -4
 883 0002 00AF     		add	r7, sp, #0
 884              	.LCFI64:
 885              		.cfi_def_cfa_register 7
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 886              		.loc 1 448 11
 887 0004 034B     		ldr	r3, .L62
 888 0006 1B68     		ldr	r3, [r3]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 889              		.loc 1 449 1
 890 0008 1846     		mov	r0, r3
 891 000a BD46     		mov	sp, r7
 892              	.LCFI65:
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 000c 5DF8047B 		ldr	r7, [sp], #4
 896              	.LCFI66:
 897              		.cfi_restore 7
 898              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccZ6Gboo.s 			page 24


 899 0010 7047     		bx	lr
 900              	.L63:
 901 0012 00BF     		.align	2
 902              	.L62:
 903 0014 20F4F01F 		.word	535884832
 904              		.cfi_endproc
 905              	.LFE157:
 907              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 908              		.align	1
 909              		.global	HAL_GetUIDw1
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 913              		.fpu fpv5-d16
 915              	HAL_GetUIDw1:
 916              	.LFB158:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 917              		.loc 1 456 1
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922 0000 80B4     		push	{r7}
 923              	.LCFI67:
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 7, -4
 926 0002 00AF     		add	r7, sp, #0
 927              	.LCFI68:
 928              		.cfi_def_cfa_register 7
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 929              		.loc 1 457 11
 930 0004 034B     		ldr	r3, .L66
 931 0006 1B68     		ldr	r3, [r3]
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 932              		.loc 1 458 1
 933 0008 1846     		mov	r0, r3
 934 000a BD46     		mov	sp, r7
 935              	.LCFI69:
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 000c 5DF8047B 		ldr	r7, [sp], #4
 939              	.LCFI70:
 940              		.cfi_restore 7
 941              		.cfi_def_cfa_offset 0
 942 0010 7047     		bx	lr
 943              	.L67:
 944 0012 00BF     		.align	2
 945              	.L66:
 946 0014 24F4F01F 		.word	535884836
 947              		.cfi_endproc
 948              	.LFE158:
ARM GAS  /tmp/ccZ6Gboo.s 			page 25


 950              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 951              		.align	1
 952              		.global	HAL_GetUIDw2
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu fpv5-d16
 958              	HAL_GetUIDw2:
 959              	.LFB159:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 960              		.loc 1 465 1
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964              		@ link register save eliminated.
 965 0000 80B4     		push	{r7}
 966              	.LCFI71:
 967              		.cfi_def_cfa_offset 4
 968              		.cfi_offset 7, -4
 969 0002 00AF     		add	r7, sp, #0
 970              	.LCFI72:
 971              		.cfi_def_cfa_register 7
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 972              		.loc 1 466 11
 973 0004 034B     		ldr	r3, .L70
 974 0006 1B68     		ldr	r3, [r3]
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 975              		.loc 1 467 1
 976 0008 1846     		mov	r0, r3
 977 000a BD46     		mov	sp, r7
 978              	.LCFI73:
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 000c 5DF8047B 		ldr	r7, [sp], #4
 982              	.LCFI74:
 983              		.cfi_restore 7
 984              		.cfi_def_cfa_offset 0
 985 0010 7047     		bx	lr
 986              	.L71:
 987 0012 00BF     		.align	2
 988              	.L70:
 989 0014 28F4F01F 		.word	535884840
 990              		.cfi_endproc
 991              	.LFE159:
 993              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 994              		.align	1
 995              		.global	HAL_DBGMCU_EnableDBGSleepMode
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu fpv5-d16
ARM GAS  /tmp/ccZ6Gboo.s 			page 26


 1001              	HAL_DBGMCU_EnableDBGSleepMode:
 1002              	.LFB160:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1003              		.loc 1 474 1
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008 0000 80B4     		push	{r7}
 1009              	.LCFI75:
 1010              		.cfi_def_cfa_offset 4
 1011              		.cfi_offset 7, -4
 1012 0002 00AF     		add	r7, sp, #0
 1013              	.LCFI76:
 1014              		.cfi_def_cfa_register 7
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 1015              		.loc 1 475 3
 1016 0004 054B     		ldr	r3, .L73
 1017 0006 5B68     		ldr	r3, [r3, #4]
 1018 0008 044A     		ldr	r2, .L73
 1019 000a 43F00103 		orr	r3, r3, #1
 1020 000e 5360     		str	r3, [r2, #4]
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1021              		.loc 1 476 1
 1022 0010 00BF     		nop
 1023 0012 BD46     		mov	sp, r7
 1024              	.LCFI77:
 1025              		.cfi_def_cfa_register 13
 1026              		@ sp needed
 1027 0014 5DF8047B 		ldr	r7, [sp], #4
 1028              	.LCFI78:
 1029              		.cfi_restore 7
 1030              		.cfi_def_cfa_offset 0
 1031 0018 7047     		bx	lr
 1032              	.L74:
 1033 001a 00BF     		.align	2
 1034              	.L73:
 1035 001c 002004E0 		.word	-536600576
 1036              		.cfi_endproc
 1037              	.LFE160:
 1039              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	HAL_DBGMCU_DisableDBGSleepMode:
 1048              	.LFB161:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/ccZ6Gboo.s 			page 27


 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1049              		.loc 1 483 1
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 80B4     		push	{r7}
 1055              	.LCFI79:
 1056              		.cfi_def_cfa_offset 4
 1057              		.cfi_offset 7, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              	.LCFI80:
 1060              		.cfi_def_cfa_register 7
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 1061              		.loc 1 484 3
 1062 0004 054B     		ldr	r3, .L76
 1063 0006 5B68     		ldr	r3, [r3, #4]
 1064 0008 044A     		ldr	r2, .L76
 1065 000a 23F00103 		bic	r3, r3, #1
 1066 000e 5360     		str	r3, [r2, #4]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1067              		.loc 1 485 1
 1068 0010 00BF     		nop
 1069 0012 BD46     		mov	sp, r7
 1070              	.LCFI81:
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 0014 5DF8047B 		ldr	r7, [sp], #4
 1074              	.LCFI82:
 1075              		.cfi_restore 7
 1076              		.cfi_def_cfa_offset 0
 1077 0018 7047     		bx	lr
 1078              	.L77:
 1079 001a 00BF     		.align	2
 1080              	.L76:
 1081 001c 002004E0 		.word	-536600576
 1082              		.cfi_endproc
 1083              	.LFE161:
 1085              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1086              		.align	1
 1087              		.global	HAL_DBGMCU_EnableDBGStopMode
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv5-d16
 1093              	HAL_DBGMCU_EnableDBGStopMode:
 1094              	.LFB162:
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
ARM GAS  /tmp/ccZ6Gboo.s 			page 28


 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1095              		.loc 1 492 1
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099              		@ link register save eliminated.
 1100 0000 80B4     		push	{r7}
 1101              	.LCFI83:
 1102              		.cfi_def_cfa_offset 4
 1103              		.cfi_offset 7, -4
 1104 0002 00AF     		add	r7, sp, #0
 1105              	.LCFI84:
 1106              		.cfi_def_cfa_register 7
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1107              		.loc 1 493 3
 1108 0004 054B     		ldr	r3, .L79
 1109 0006 5B68     		ldr	r3, [r3, #4]
 1110 0008 044A     		ldr	r2, .L79
 1111 000a 43F00203 		orr	r3, r3, #2
 1112 000e 5360     		str	r3, [r2, #4]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1113              		.loc 1 494 1
 1114 0010 00BF     		nop
 1115 0012 BD46     		mov	sp, r7
 1116              	.LCFI85:
 1117              		.cfi_def_cfa_register 13
 1118              		@ sp needed
 1119 0014 5DF8047B 		ldr	r7, [sp], #4
 1120              	.LCFI86:
 1121              		.cfi_restore 7
 1122              		.cfi_def_cfa_offset 0
 1123 0018 7047     		bx	lr
 1124              	.L80:
 1125 001a 00BF     		.align	2
 1126              	.L79:
 1127 001c 002004E0 		.word	-536600576
 1128              		.cfi_endproc
 1129              	.LFE162:
 1131              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1132              		.align	1
 1133              		.global	HAL_DBGMCU_DisableDBGStopMode
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv5-d16
 1139              	HAL_DBGMCU_DisableDBGStopMode:
 1140              	.LFB163:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1141              		.loc 1 501 1
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccZ6Gboo.s 			page 29


 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              	.LCFI87:
 1148              		.cfi_def_cfa_offset 4
 1149              		.cfi_offset 7, -4
 1150 0002 00AF     		add	r7, sp, #0
 1151              	.LCFI88:
 1152              		.cfi_def_cfa_register 7
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1153              		.loc 1 502 3
 1154 0004 054B     		ldr	r3, .L82
 1155 0006 5B68     		ldr	r3, [r3, #4]
 1156 0008 044A     		ldr	r2, .L82
 1157 000a 23F00203 		bic	r3, r3, #2
 1158 000e 5360     		str	r3, [r2, #4]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1159              		.loc 1 503 1
 1160 0010 00BF     		nop
 1161 0012 BD46     		mov	sp, r7
 1162              	.LCFI89:
 1163              		.cfi_def_cfa_register 13
 1164              		@ sp needed
 1165 0014 5DF8047B 		ldr	r7, [sp], #4
 1166              	.LCFI90:
 1167              		.cfi_restore 7
 1168              		.cfi_def_cfa_offset 0
 1169 0018 7047     		bx	lr
 1170              	.L83:
 1171 001a 00BF     		.align	2
 1172              	.L82:
 1173 001c 002004E0 		.word	-536600576
 1174              		.cfi_endproc
 1175              	.LFE163:
 1177              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1178              		.align	1
 1179              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv5-d16
 1185              	HAL_DBGMCU_EnableDBGStandbyMode:
 1186              	.LFB164:
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1187              		.loc 1 510 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 80B4     		push	{r7}
 1193              	.LCFI91:
ARM GAS  /tmp/ccZ6Gboo.s 			page 30


 1194              		.cfi_def_cfa_offset 4
 1195              		.cfi_offset 7, -4
 1196 0002 00AF     		add	r7, sp, #0
 1197              	.LCFI92:
 1198              		.cfi_def_cfa_register 7
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1199              		.loc 1 511 3
 1200 0004 054B     		ldr	r3, .L85
 1201 0006 5B68     		ldr	r3, [r3, #4]
 1202 0008 044A     		ldr	r2, .L85
 1203 000a 43F00403 		orr	r3, r3, #4
 1204 000e 5360     		str	r3, [r2, #4]
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1205              		.loc 1 512 1
 1206 0010 00BF     		nop
 1207 0012 BD46     		mov	sp, r7
 1208              	.LCFI93:
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 0014 5DF8047B 		ldr	r7, [sp], #4
 1212              	.LCFI94:
 1213              		.cfi_restore 7
 1214              		.cfi_def_cfa_offset 0
 1215 0018 7047     		bx	lr
 1216              	.L86:
 1217 001a 00BF     		.align	2
 1218              	.L85:
 1219 001c 002004E0 		.word	-536600576
 1220              		.cfi_endproc
 1221              	.LFE164:
 1223              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1224              		.align	1
 1225              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1226              		.syntax unified
 1227              		.thumb
 1228              		.thumb_func
 1229              		.fpu fpv5-d16
 1231              	HAL_DBGMCU_DisableDBGStandbyMode:
 1232              	.LFB165:
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1233              		.loc 1 519 1
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237              		@ link register save eliminated.
 1238 0000 80B4     		push	{r7}
 1239              	.LCFI95:
 1240              		.cfi_def_cfa_offset 4
 1241              		.cfi_offset 7, -4
 1242 0002 00AF     		add	r7, sp, #0
 1243              	.LCFI96:
ARM GAS  /tmp/ccZ6Gboo.s 			page 31


 1244              		.cfi_def_cfa_register 7
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1245              		.loc 1 520 3
 1246 0004 054B     		ldr	r3, .L88
 1247 0006 5B68     		ldr	r3, [r3, #4]
 1248 0008 044A     		ldr	r2, .L88
 1249 000a 23F00403 		bic	r3, r3, #4
 1250 000e 5360     		str	r3, [r2, #4]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1251              		.loc 1 521 1
 1252 0010 00BF     		nop
 1253 0012 BD46     		mov	sp, r7
 1254              	.LCFI97:
 1255              		.cfi_def_cfa_register 13
 1256              		@ sp needed
 1257 0014 5DF8047B 		ldr	r7, [sp], #4
 1258              	.LCFI98:
 1259              		.cfi_restore 7
 1260              		.cfi_def_cfa_offset 0
 1261 0018 7047     		bx	lr
 1262              	.L89:
 1263 001a 00BF     		.align	2
 1264              	.L88:
 1265 001c 002004E0 		.word	-536600576
 1266              		.cfi_endproc
 1267              	.LFE165:
 1269              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1270              		.align	1
 1271              		.global	HAL_EnableCompensationCell
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1275              		.fpu fpv5-d16
 1277              	HAL_EnableCompensationCell:
 1278              	.LFB166:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1279              		.loc 1 530 1
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
 1284 0000 80B4     		push	{r7}
 1285              	.LCFI99:
 1286              		.cfi_def_cfa_offset 4
 1287              		.cfi_offset 7, -4
 1288 0002 00AF     		add	r7, sp, #0
 1289              	.LCFI100:
 1290              		.cfi_def_cfa_register 7
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
ARM GAS  /tmp/ccZ6Gboo.s 			page 32


 1291              		.loc 1 531 17
 1292 0004 054B     		ldr	r3, .L91
 1293 0006 1B6A     		ldr	r3, [r3, #32]
 1294 0008 044A     		ldr	r2, .L91
 1295 000a 43F00103 		orr	r3, r3, #1
 1296 000e 1362     		str	r3, [r2, #32]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1297              		.loc 1 532 1
 1298 0010 00BF     		nop
 1299 0012 BD46     		mov	sp, r7
 1300              	.LCFI101:
 1301              		.cfi_def_cfa_register 13
 1302              		@ sp needed
 1303 0014 5DF8047B 		ldr	r7, [sp], #4
 1304              	.LCFI102:
 1305              		.cfi_restore 7
 1306              		.cfi_def_cfa_offset 0
 1307 0018 7047     		bx	lr
 1308              	.L92:
 1309 001a 00BF     		.align	2
 1310              	.L91:
 1311 001c 00380140 		.word	1073821696
 1312              		.cfi_endproc
 1313              	.LFE166:
 1315              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1316              		.align	1
 1317              		.global	HAL_DisableCompensationCell
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1321              		.fpu fpv5-d16
 1323              	HAL_DisableCompensationCell:
 1324              	.LFB167:
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1325              		.loc 1 541 1
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI103:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 00AF     		add	r7, sp, #0
 1335              	.LCFI104:
 1336              		.cfi_def_cfa_register 7
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 1337              		.loc 1 542 17
 1338 0004 054B     		ldr	r3, .L94
ARM GAS  /tmp/ccZ6Gboo.s 			page 33


 1339 0006 1B6A     		ldr	r3, [r3, #32]
 1340 0008 044A     		ldr	r2, .L94
 1341 000a 23F00103 		bic	r3, r3, #1
 1342 000e 1362     		str	r3, [r2, #32]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1343              		.loc 1 543 1
 1344 0010 00BF     		nop
 1345 0012 BD46     		mov	sp, r7
 1346              	.LCFI105:
 1347              		.cfi_def_cfa_register 13
 1348              		@ sp needed
 1349 0014 5DF8047B 		ldr	r7, [sp], #4
 1350              	.LCFI106:
 1351              		.cfi_restore 7
 1352              		.cfi_def_cfa_offset 0
 1353 0018 7047     		bx	lr
 1354              	.L95:
 1355 001a 00BF     		.align	2
 1356              	.L94:
 1357 001c 00380140 		.word	1073821696
 1358              		.cfi_endproc
 1359              	.LFE167:
 1361              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 1362              		.align	1
 1363              		.global	HAL_EnableFMCMemorySwapping
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv5-d16
 1369              	HAL_EnableFMCMemorySwapping:
 1370              	.LFB168:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1371              		.loc 1 554 1
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376 0000 80B4     		push	{r7}
 1377              	.LCFI107:
 1378              		.cfi_def_cfa_offset 4
 1379              		.cfi_offset 7, -4
 1380 0002 00AF     		add	r7, sp, #0
 1381              	.LCFI108:
 1382              		.cfi_def_cfa_register 7
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 1383              		.loc 1 555 18
 1384 0004 054B     		ldr	r3, .L97
ARM GAS  /tmp/ccZ6Gboo.s 			page 34


 1385 0006 1B68     		ldr	r3, [r3]
 1386 0008 044A     		ldr	r2, .L97
 1387 000a 43F48063 		orr	r3, r3, #1024
 1388 000e 1360     		str	r3, [r2]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1389              		.loc 1 556 1
 1390 0010 00BF     		nop
 1391 0012 BD46     		mov	sp, r7
 1392              	.LCFI109:
 1393              		.cfi_def_cfa_register 13
 1394              		@ sp needed
 1395 0014 5DF8047B 		ldr	r7, [sp], #4
 1396              	.LCFI110:
 1397              		.cfi_restore 7
 1398              		.cfi_def_cfa_offset 0
 1399 0018 7047     		bx	lr
 1400              	.L98:
 1401 001a 00BF     		.align	2
 1402              	.L97:
 1403 001c 00380140 		.word	1073821696
 1404              		.cfi_endproc
 1405              	.LFE168:
 1407              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 1408              		.align	1
 1409              		.global	HAL_DisableFMCMemorySwapping
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv5-d16
 1415              	HAL_DisableFMCMemorySwapping:
 1416              	.LFB169:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1417              		.loc 1 567 1
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 1, uses_anonymous_args = 0
 1421              		@ link register save eliminated.
 1422 0000 80B4     		push	{r7}
 1423              	.LCFI111:
 1424              		.cfi_def_cfa_offset 4
 1425              		.cfi_offset 7, -4
 1426 0002 00AF     		add	r7, sp, #0
 1427              	.LCFI112:
 1428              		.cfi_def_cfa_register 7
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 1429              		.loc 1 569 18
ARM GAS  /tmp/ccZ6Gboo.s 			page 35


 1430 0004 054B     		ldr	r3, .L100
 1431 0006 1B68     		ldr	r3, [r3]
 1432 0008 044A     		ldr	r2, .L100
 1433 000a 23F44063 		bic	r3, r3, #3072
 1434 000e 1360     		str	r3, [r2]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1435              		.loc 1 570 1
 1436 0010 00BF     		nop
 1437 0012 BD46     		mov	sp, r7
 1438              	.LCFI113:
 1439              		.cfi_def_cfa_register 13
 1440              		@ sp needed
 1441 0014 5DF8047B 		ldr	r7, [sp], #4
 1442              	.LCFI114:
 1443              		.cfi_restore 7
 1444              		.cfi_def_cfa_offset 0
 1445 0018 7047     		bx	lr
 1446              	.L101:
 1447 001a 00BF     		.align	2
 1448              	.L100:
 1449 001c 00380140 		.word	1073821696
 1450              		.cfi_endproc
 1451              	.LFE169:
 1453              		.section	.text.HAL_EnableMemorySwappingBank,"ax",%progbits
 1454              		.align	1
 1455              		.global	HAL_EnableMemorySwappingBank
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1459              		.fpu fpv5-d16
 1461              	HAL_EnableMemorySwappingBank:
 1462              	.LFB170:
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Enable the Internal FLASH Bank Swapping.
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   Flash Bank2 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank1 mapped at 0x08100000 (AXI) (aliased at 0x00300000 (TCM))   
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableMemorySwappingBank(void)
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1463              		.loc 1 584 1
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 1468 0000 80B4     		push	{r7}
 1469              	.LCFI115:
 1470              		.cfi_def_cfa_offset 4
 1471              		.cfi_offset 7, -4
 1472 0002 00AF     		add	r7, sp, #0
 1473              	.LCFI116:
ARM GAS  /tmp/ccZ6Gboo.s 			page 36


 1474              		.cfi_def_cfa_register 7
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 1475              		.loc 1 585 3
 1476 0004 054B     		ldr	r3, .L103
 1477 0006 1B68     		ldr	r3, [r3]
 1478 0008 044A     		ldr	r2, .L103
 1479 000a 43F48073 		orr	r3, r3, #256
 1480 000e 1360     		str	r3, [r2]
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1481              		.loc 1 586 1
 1482 0010 00BF     		nop
 1483 0012 BD46     		mov	sp, r7
 1484              	.LCFI117:
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 0014 5DF8047B 		ldr	r7, [sp], #4
 1488              	.LCFI118:
 1489              		.cfi_restore 7
 1490              		.cfi_def_cfa_offset 0
 1491 0018 7047     		bx	lr
 1492              	.L104:
 1493 001a 00BF     		.align	2
 1494              	.L103:
 1495 001c 00380140 		.word	1073821696
 1496              		.cfi_endproc
 1497              	.LFE170:
 1499              		.section	.text.HAL_DisableMemorySwappingBank,"ax",%progbits
 1500              		.align	1
 1501              		.global	HAL_DisableMemorySwappingBank
 1502              		.syntax unified
 1503              		.thumb
 1504              		.thumb_func
 1505              		.fpu fpv5-d16
 1507              	HAL_DisableMemorySwappingBank:
 1508              	.LFB171:
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Disable the Internal FLASH Bank Swapping.
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   The default state : Flash Bank1 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank2 mapped at 0x08100000 (AXI)( aliased at 0x00300000 (TCM)) 
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *           
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableMemorySwappingBank(void)
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 1509              		.loc 1 599 1
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 1, uses_anonymous_args = 0
 1513              		@ link register save eliminated.
 1514 0000 80B4     		push	{r7}
 1515              	.LCFI119:
 1516              		.cfi_def_cfa_offset 4
 1517              		.cfi_offset 7, -4
ARM GAS  /tmp/ccZ6Gboo.s 			page 37


 1518 0002 00AF     		add	r7, sp, #0
 1519              	.LCFI120:
 1520              		.cfi_def_cfa_register 7
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 1521              		.loc 1 600 3
 1522 0004 054B     		ldr	r3, .L106
 1523 0006 1B68     		ldr	r3, [r3]
 1524 0008 044A     		ldr	r2, .L106
 1525 000a 23F48073 		bic	r3, r3, #256
 1526 000e 1360     		str	r3, [r2]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1527              		.loc 1 601 1
 1528 0010 00BF     		nop
 1529 0012 BD46     		mov	sp, r7
 1530              	.LCFI121:
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 0014 5DF8047B 		ldr	r7, [sp], #4
 1534              	.LCFI122:
 1535              		.cfi_restore 7
 1536              		.cfi_def_cfa_offset 0
 1537 0018 7047     		bx	lr
 1538              	.L107:
 1539 001a 00BF     		.align	2
 1540              	.L106:
 1541 001c 00380140 		.word	1073821696
 1542              		.cfi_endproc
 1543              	.LFE171:
 1545              		.text
 1546              	.Letext0:
 1547              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1548              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 1549              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1550              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 1551              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1552              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccZ6Gboo.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccZ6Gboo.s:22     .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccZ6Gboo.s:19     .data.uwTickPrio:0000000000000000 $d
     /tmp/ccZ6Gboo.s:28     .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccZ6Gboo.s:31     .text.HAL_Init:0000000000000000 $t
     /tmp/ccZ6Gboo.s:39     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccZ6Gboo.s:226    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccZ6Gboo.s:154    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccZ6Gboo.s:71     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccZ6Gboo.s:78     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccZ6Gboo.s:190    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccZ6Gboo.s:142    .text.HAL_DeInit:0000000000000054 $d
     /tmp/ccZ6Gboo.s:147    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccZ6Gboo.s:183    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccZ6Gboo.s:219    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccZ6Gboo.s:298    .text.HAL_InitTick:0000000000000054 $d
     /tmp/ccZ6Gboo.s:305    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccZ6Gboo.s:312    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccZ6Gboo.s:349    .text.HAL_IncTick:0000000000000020 $d
     /tmp/ccZ6Gboo.s:355    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccZ6Gboo.s:362    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccZ6Gboo.s:393    .text.HAL_GetTick:0000000000000014 $d
     /tmp/ccZ6Gboo.s:398    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccZ6Gboo.s:405    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccZ6Gboo.s:436    .text.HAL_GetTickPrio:0000000000000014 $d
     /tmp/ccZ6Gboo.s:441    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccZ6Gboo.s:448    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccZ6Gboo.s:516    .text.HAL_SetTickFreq:0000000000000048 $d
     /tmp/ccZ6Gboo.s:522    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccZ6Gboo.s:529    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccZ6Gboo.s:560    .text.HAL_GetTickFreq:0000000000000014 $d
     /tmp/ccZ6Gboo.s:565    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccZ6Gboo.s:572    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccZ6Gboo.s:636    .text.HAL_Delay:0000000000000044 $d
     /tmp/ccZ6Gboo.s:641    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccZ6Gboo.s:648    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccZ6Gboo.s:682    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccZ6Gboo.s:687    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccZ6Gboo.s:694    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccZ6Gboo.s:728    .text.HAL_ResumeTick:000000000000001c $d
     /tmp/ccZ6Gboo.s:733    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccZ6Gboo.s:740    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccZ6Gboo.s:770    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/ccZ6Gboo.s:775    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccZ6Gboo.s:782    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccZ6Gboo.s:815    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/ccZ6Gboo.s:820    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccZ6Gboo.s:827    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccZ6Gboo.s:860    .text.HAL_GetDEVID:0000000000000018 $d
     /tmp/ccZ6Gboo.s:865    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccZ6Gboo.s:872    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccZ6Gboo.s:903    .text.HAL_GetUIDw0:0000000000000014 $d
     /tmp/ccZ6Gboo.s:908    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccZ6Gboo.s:915    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccZ6Gboo.s:946    .text.HAL_GetUIDw1:0000000000000014 $d
ARM GAS  /tmp/ccZ6Gboo.s 			page 39


     /tmp/ccZ6Gboo.s:951    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccZ6Gboo.s:958    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccZ6Gboo.s:989    .text.HAL_GetUIDw2:0000000000000014 $d
     /tmp/ccZ6Gboo.s:994    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1001   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccZ6Gboo.s:1035   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1040   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1047   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccZ6Gboo.s:1081   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1086   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1093   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccZ6Gboo.s:1127   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1132   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1139   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccZ6Gboo.s:1173   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1178   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1185   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccZ6Gboo.s:1219   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1224   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1231   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccZ6Gboo.s:1265   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000001c $d
     /tmp/ccZ6Gboo.s:1270   .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1277   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccZ6Gboo.s:1311   .text.HAL_EnableCompensationCell:000000000000001c $d
     /tmp/ccZ6Gboo.s:1316   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1323   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccZ6Gboo.s:1357   .text.HAL_DisableCompensationCell:000000000000001c $d
     /tmp/ccZ6Gboo.s:1362   .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1369   .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/ccZ6Gboo.s:1403   .text.HAL_EnableFMCMemorySwapping:000000000000001c $d
     /tmp/ccZ6Gboo.s:1408   .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1415   .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/ccZ6Gboo.s:1449   .text.HAL_DisableFMCMemorySwapping:000000000000001c $d
     /tmp/ccZ6Gboo.s:1454   .text.HAL_EnableMemorySwappingBank:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1461   .text.HAL_EnableMemorySwappingBank:0000000000000000 HAL_EnableMemorySwappingBank
     /tmp/ccZ6Gboo.s:1495   .text.HAL_EnableMemorySwappingBank:000000000000001c $d
     /tmp/ccZ6Gboo.s:1500   .text.HAL_DisableMemorySwappingBank:0000000000000000 $t
     /tmp/ccZ6Gboo.s:1507   .text.HAL_DisableMemorySwappingBank:0000000000000000 HAL_DisableMemorySwappingBank
     /tmp/ccZ6Gboo.s:1541   .text.HAL_DisableMemorySwappingBank:000000000000001c $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
