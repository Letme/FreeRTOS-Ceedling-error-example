/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MODULE_USING_FREERTOS_H
#define _MOCK_MODULE_USING_FREERTOS_H

#include "unity.h"
#include "module_using_freertos.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_module_using_freertos_Init(void);
void mock_module_using_freertos_Destroy(void);
void mock_module_using_freertos_Verify(void);




#define module_init_Ignore() module_init_CMockIgnore()
void module_init_CMockIgnore(void);
#define module_init_StopIgnore() module_init_CMockStopIgnore()
void module_init_CMockStopIgnore(void);
#define module_init_Expect(queue_data, handle) module_init_CMockExpect(__LINE__, queue_data, handle)
void module_init_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t* queue_data, module_handle_t* handle);
typedef void (* CMOCK_module_init_CALLBACK)(uint32_t* queue_data, module_handle_t* handle, int cmock_num_calls);
void module_init_AddCallback(CMOCK_module_init_CALLBACK Callback);
void module_init_Stub(CMOCK_module_init_CALLBACK Callback);
#define module_init_StubWithCallback module_init_Stub
#define module_push_Ignore() module_push_CMockIgnore()
void module_push_CMockIgnore(void);
#define module_push_StopIgnore() module_push_CMockStopIgnore()
void module_push_CMockStopIgnore(void);
#define module_push_Expect(value, handle) module_push_CMockExpect(__LINE__, value, handle)
void module_push_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t value, module_handle_t* handle);
typedef void (* CMOCK_module_push_CALLBACK)(uint32_t value, module_handle_t* handle, int cmock_num_calls);
void module_push_AddCallback(CMOCK_module_push_CALLBACK Callback);
void module_push_Stub(CMOCK_module_push_CALLBACK Callback);
#define module_push_StubWithCallback module_push_Stub
#define module_pop_IgnoreAndReturn(cmock_retval) module_pop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void module_pop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define module_pop_StopIgnore() module_pop_CMockStopIgnore()
void module_pop_CMockStopIgnore(void);
#define module_pop_ExpectAndReturn(handle, cmock_retval) module_pop_CMockExpectAndReturn(__LINE__, handle, cmock_retval)
void module_pop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, module_handle_t* handle, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_module_pop_CALLBACK)(module_handle_t* handle, int cmock_num_calls);
void module_pop_AddCallback(CMOCK_module_pop_CALLBACK Callback);
void module_pop_Stub(CMOCK_module_pop_CALLBACK Callback);
#define module_pop_StubWithCallback module_pop_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
