ARM GAS  /tmp/cciszpx2.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_timebase_tim.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	htim7,76,4
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	HAL_InitTick:
  27              	.LFB141:
  28              		.file 1 "Core/Src/stm32f7xx_hal_timebase_tim.c"
   1:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @file    stm32f7xx_hal_timebase_TIM.c
   5:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  17:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  19:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  21:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal.h"
  23:Core/Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal_tim.h"
  24:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  25:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Core/Src/stm32f7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim7;
  30:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/cciszpx2.s 			page 2


  31:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  33:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
  34:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM7 as a time base source.
  35:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  42:Core/Src/stm32f7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
  29              		.loc 1 43 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 8CB0     		sub	sp, sp, #48
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  44:Core/Src/stm32f7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  45              		.loc 1 45 25
  46 0008 0023     		movs	r3, #0
  47 000a FB62     		str	r3, [r7, #44]
  46:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  48              		.loc 1 46 25
  49 000c 0023     		movs	r3, #0
  50 000e BB62     		str	r3, [r7, #40]
  47:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /*Configure the TIM7 IRQ priority */
  49:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM7_IRQn, TickPriority ,0);
  51              		.loc 1 49 3
  52 0010 0022     		movs	r2, #0
  53 0012 7968     		ldr	r1, [r7, #4]
  54 0014 3720     		movs	r0, #55
  55 0016 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  50:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  51:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable the TIM7 global Interrupt */
  52:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM7_IRQn);
  56              		.loc 1 52 3
  57 001a 3720     		movs	r0, #55
  58 001c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  59              	.LBB2:
  53:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM7 clock */
  54:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM7_CLK_ENABLE();
  60              		.loc 1 54 3
  61 0020 1F4B     		ldr	r3, .L5
ARM GAS  /tmp/cciszpx2.s 			page 3


  62 0022 1B6C     		ldr	r3, [r3, #64]
  63 0024 1E4A     		ldr	r2, .L5
  64 0026 43F02003 		orr	r3, r3, #32
  65 002a 1364     		str	r3, [r2, #64]
  66 002c 1C4B     		ldr	r3, .L5
  67 002e 1B6C     		ldr	r3, [r3, #64]
  68 0030 03F02003 		and	r3, r3, #32
  69 0034 FB60     		str	r3, [r7, #12]
  70 0036 FB68     		ldr	r3, [r7, #12]
  71              	.LBE2:
  55:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  57:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  72              		.loc 1 57 3
  73 0038 07F11002 		add	r2, r7, #16
  74 003c 07F11403 		add	r3, r7, #20
  75 0040 1146     		mov	r1, r2
  76 0042 1846     		mov	r0, r3
  77 0044 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  58:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  59:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute TIM7 clock */
  60:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  78              		.loc 1 60 18
  79 0048 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  80 004c 0346     		mov	r3, r0
  81              		.loc 1 60 14
  82 004e 5B00     		lsls	r3, r3, #1
  83 0050 FB62     		str	r3, [r7, #44]
  61:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM7 counter clock equal to 1MHz */
  62:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  84              		.loc 1 62 46
  85 0052 FB6A     		ldr	r3, [r7, #44]
  86 0054 134A     		ldr	r2, .L5+4
  87 0056 A2FB0323 		umull	r2, r3, r2, r3
  88 005a 9B0C     		lsrs	r3, r3, #18
  89              		.loc 1 62 20
  90 005c 013B     		subs	r3, r3, #1
  91 005e BB62     		str	r3, [r7, #40]
  63:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  64:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIM7 */
  65:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim7.Instance = TIM7;
  92              		.loc 1 65 18
  93 0060 114B     		ldr	r3, .L5+8
  94 0062 124A     		ldr	r2, .L5+12
  95 0064 1A60     		str	r2, [r3]
  66:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  67:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  68:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Period = [(TIM7CLK/1000) - 1]. to have a (1/1000) s time base.
  69:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  70:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  71:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Counter direction = Up
  72:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  73:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim7.Init.Period = (1000000U / 1000U) - 1U;
  96              		.loc 1 73 21
  97 0066 104B     		ldr	r3, .L5+8
  98 0068 40F2E732 		movw	r2, #999
  99 006c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cciszpx2.s 			page 4


  74:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim7.Init.Prescaler = uwPrescalerValue;
 100              		.loc 1 74 24
 101 006e 0E4A     		ldr	r2, .L5+8
 102 0070 BB6A     		ldr	r3, [r7, #40]
 103 0072 5360     		str	r3, [r2, #4]
  75:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim7.Init.ClockDivision = 0;
 104              		.loc 1 75 28
 105 0074 0C4B     		ldr	r3, .L5+8
 106 0076 0022     		movs	r2, #0
 107 0078 1A61     		str	r2, [r3, #16]
  76:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 108              		.loc 1 76 26
 109 007a 0B4B     		ldr	r3, .L5+8
 110 007c 0022     		movs	r2, #0
 111 007e 9A60     		str	r2, [r3, #8]
  77:Core/Src/stm32f7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim7) == HAL_OK)
 112              		.loc 1 77 6
 113 0080 0948     		ldr	r0, .L5+8
 114 0082 FFF7FEFF 		bl	HAL_TIM_Base_Init
 115 0086 0346     		mov	r3, r0
 116              		.loc 1 77 5
 117 0088 002B     		cmp	r3, #0
 118 008a 04D1     		bne	.L2
  78:Core/Src/stm32f7xx_hal_timebase_tim.c ****   {
  79:Core/Src/stm32f7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  80:Core/Src/stm32f7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim7);
 119              		.loc 1 80 12
 120 008c 0648     		ldr	r0, .L5+8
 121 008e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 122 0092 0346     		mov	r3, r0
 123 0094 00E0     		b	.L4
 124              	.L2:
  81:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
  82:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Return function status */
  84:Core/Src/stm32f7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 125              		.loc 1 84 10
 126 0096 0123     		movs	r3, #1
 127              	.L4:
  85:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 128              		.loc 1 85 1 discriminator 1
 129 0098 1846     		mov	r0, r3
 130 009a 3037     		adds	r7, r7, #48
 131              	.LCFI3:
 132              		.cfi_def_cfa_offset 8
 133 009c BD46     		mov	sp, r7
 134              	.LCFI4:
 135              		.cfi_def_cfa_register 13
 136              		@ sp needed
 137 009e 80BD     		pop	{r7, pc}
 138              	.L6:
 139              		.align	2
 140              	.L5:
 141 00a0 00380240 		.word	1073887232
 142 00a4 83DE1B43 		.word	1125899907
 143 00a8 00000000 		.word	htim7
 144 00ac 00140040 		.word	1073746944
ARM GAS  /tmp/cciszpx2.s 			page 5


 145              		.cfi_endproc
 146              	.LFE141:
 148              		.section	.text.HAL_SuspendTick,"ax",%progbits
 149              		.align	1
 150              		.global	HAL_SuspendTick
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv5-d16
 156              	HAL_SuspendTick:
 157              	.LFB142:
  86:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  87:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
  88:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  89:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM7 update interrupt.
  90:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
  91:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
  92:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  93:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  94:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 158              		.loc 1 94 1
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 0000 80B4     		push	{r7}
 164              	.LCFI5:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 7, -4
 167 0002 00AF     		add	r7, sp, #0
 168              	.LCFI6:
 169              		.cfi_def_cfa_register 7
  95:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Disable TIM7 update Interrupt */
  96:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim7, TIM_IT_UPDATE);
 170              		.loc 1 96 3
 171 0004 064B     		ldr	r3, .L8
 172 0006 1B68     		ldr	r3, [r3]
 173 0008 DA68     		ldr	r2, [r3, #12]
 174 000a 054B     		ldr	r3, .L8
 175 000c 1B68     		ldr	r3, [r3]
 176 000e 22F00102 		bic	r2, r2, #1
 177 0012 DA60     		str	r2, [r3, #12]
  97:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 178              		.loc 1 97 1
 179 0014 00BF     		nop
 180 0016 BD46     		mov	sp, r7
 181              	.LCFI7:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0018 5DF8047B 		ldr	r7, [sp], #4
 185              	.LCFI8:
 186              		.cfi_restore 7
 187              		.cfi_def_cfa_offset 0
 188 001c 7047     		bx	lr
 189              	.L9:
 190 001e 00BF     		.align	2
 191              	.L8:
ARM GAS  /tmp/cciszpx2.s 			page 6


 192 0020 00000000 		.word	htim7
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.HAL_ResumeTick,"ax",%progbits
 197              		.align	1
 198              		.global	HAL_ResumeTick
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-d16
 204              	HAL_ResumeTick:
 205              	.LFB143:
  98:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  99:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 100:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 101:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM7 update interrupt.
 102:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 103:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 104:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
 105:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 106:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 206              		.loc 1 106 1
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 0000 80B4     		push	{r7}
 212              	.LCFI9:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 7, -4
 215 0002 00AF     		add	r7, sp, #0
 216              	.LCFI10:
 217              		.cfi_def_cfa_register 7
 107:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM7 Update interrupt */
 108:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim7, TIM_IT_UPDATE);
 218              		.loc 1 108 3
 219 0004 064B     		ldr	r3, .L11
 220 0006 1B68     		ldr	r3, [r3]
 221 0008 DA68     		ldr	r2, [r3, #12]
 222 000a 054B     		ldr	r3, .L11
 223 000c 1B68     		ldr	r3, [r3]
 224 000e 42F00102 		orr	r2, r2, #1
 225 0012 DA60     		str	r2, [r3, #12]
 109:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 226              		.loc 1 109 1
 227 0014 00BF     		nop
 228 0016 BD46     		mov	sp, r7
 229              	.LCFI11:
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 0018 5DF8047B 		ldr	r7, [sp], #4
 233              	.LCFI12:
 234              		.cfi_restore 7
 235              		.cfi_def_cfa_offset 0
 236 001c 7047     		bx	lr
 237              	.L12:
 238 001e 00BF     		.align	2
ARM GAS  /tmp/cciszpx2.s 			page 7


 239              	.L11:
 240 0020 00000000 		.word	htim7
 241              		.cfi_endproc
 242              	.LFE143:
 244              		.text
 245              	.Letext0:
 246              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 247              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 248              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 249              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 250              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 251              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 252              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 253              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 254              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cciszpx2.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_timebase_tim.c
                            *COM*:000000000000004c htim7
     /tmp/cciszpx2.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cciszpx2.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cciszpx2.s:141    .text.HAL_InitTick:00000000000000a0 $d
     /tmp/cciszpx2.s:149    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cciszpx2.s:156    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cciszpx2.s:192    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/cciszpx2.s:197    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cciszpx2.s:204    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cciszpx2.s:240    .text.HAL_ResumeTick:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
