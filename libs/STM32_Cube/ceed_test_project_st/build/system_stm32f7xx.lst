ARM GAS  /tmp/cc2KnGR9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32f7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	SystemCoreClock
  17              		.section	.data.SystemCoreClock,"aw"
  18              		.align	2
  21              	SystemCoreClock:
  22 0000 0024F400 		.word	16000000
  23              		.global	AHBPrescTable
  24              		.section	.rodata.AHBPrescTable,"a"
  25              		.align	2
  28              	AHBPrescTable:
  29 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  29      00000000 
  29      01020304 
  29      06
  30 000d 070809   		.ascii	"\007\010\011"
  31              		.global	APBPrescTable
  32              		.section	.rodata.APBPrescTable,"a"
  33              		.align	2
  36              	APBPrescTable:
  37 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  37      01020304 
  38              		.section	.text.SystemInit,"ax",%progbits
  39              		.align	1
  40              		.global	SystemInit
  41              		.arch armv7e-m
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-d16
  47              	SystemInit:
  48              	.LFB141:
  49              		.file 1 "Core/Src/system_stm32f7xx.c"
   1:Core/Src/system_stm32f7xx.c **** /**
   2:Core/Src/system_stm32f7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f7xx.c ****   * @file    system_stm32f7xx.c
   4:Core/Src/system_stm32f7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f7xx.c ****   * @brief   CMSIS Cortex-M7 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f7xx.c ****   *
   7:Core/Src/system_stm32f7xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Core/Src/system_stm32f7xx.c ****   *   user application:
   9:Core/Src/system_stm32f7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Core/Src/system_stm32f7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32f7xx.c ****   *                      the "startup_stm32f7xx.s" file.
ARM GAS  /tmp/cc2KnGR9.s 			page 2


  12:Core/Src/system_stm32f7xx.c ****   *
  13:Core/Src/system_stm32f7xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32f7xx.c ****   *                                  by the user application to setup the SysTick 
  15:Core/Src/system_stm32f7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32f7xx.c ****   *                                     
  17:Core/Src/system_stm32f7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32f7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32f7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32f7xx.c ****   *
  21:Core/Src/system_stm32f7xx.c ****   *
  22:Core/Src/system_stm32f7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32f7xx.c ****   * @attention
  24:Core/Src/system_stm32f7xx.c ****   *
  25:Core/Src/system_stm32f7xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32f7xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32f7xx.c ****   *
  28:Core/Src/system_stm32f7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32f7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32f7xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32f7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32f7xx.c ****   *
  33:Core/Src/system_stm32f7xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f7xx.c ****   */
  35:Core/Src/system_stm32f7xx.c **** 
  36:Core/Src/system_stm32f7xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32f7xx.c ****   * @{
  38:Core/Src/system_stm32f7xx.c ****   */
  39:Core/Src/system_stm32f7xx.c **** 
  40:Core/Src/system_stm32f7xx.c **** /** @addtogroup stm32f7xx_system
  41:Core/Src/system_stm32f7xx.c ****   * @{
  42:Core/Src/system_stm32f7xx.c ****   */  
  43:Core/Src/system_stm32f7xx.c ****   
  44:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Includes
  45:Core/Src/system_stm32f7xx.c ****   * @{
  46:Core/Src/system_stm32f7xx.c ****   */
  47:Core/Src/system_stm32f7xx.c **** 
  48:Core/Src/system_stm32f7xx.c **** #include "stm32f7xx.h"
  49:Core/Src/system_stm32f7xx.c **** 
  50:Core/Src/system_stm32f7xx.c **** #if !defined  (HSE_VALUE) 
  51:Core/Src/system_stm32f7xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  52:Core/Src/system_stm32f7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32f7xx.c **** 
  54:Core/Src/system_stm32f7xx.c **** #if !defined  (HSI_VALUE)
  55:Core/Src/system_stm32f7xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32f7xx.c **** #endif /* HSI_VALUE */
  57:Core/Src/system_stm32f7xx.c **** 
  58:Core/Src/system_stm32f7xx.c **** /**
  59:Core/Src/system_stm32f7xx.c ****   * @}
  60:Core/Src/system_stm32f7xx.c ****   */
  61:Core/Src/system_stm32f7xx.c **** 
  62:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_TypesDefinitions
  63:Core/Src/system_stm32f7xx.c ****   * @{
  64:Core/Src/system_stm32f7xx.c ****   */
  65:Core/Src/system_stm32f7xx.c **** 
  66:Core/Src/system_stm32f7xx.c **** /**
  67:Core/Src/system_stm32f7xx.c ****   * @}
  68:Core/Src/system_stm32f7xx.c ****   */
ARM GAS  /tmp/cc2KnGR9.s 			page 3


  69:Core/Src/system_stm32f7xx.c **** 
  70:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Defines
  71:Core/Src/system_stm32f7xx.c ****   * @{
  72:Core/Src/system_stm32f7xx.c ****   */
  73:Core/Src/system_stm32f7xx.c **** 
  74:Core/Src/system_stm32f7xx.c **** /************************* Miscellaneous Configuration ************************/
  75:Core/Src/system_stm32f7xx.c **** 
  76:Core/Src/system_stm32f7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  77:Core/Src/system_stm32f7xx.c ****          configuration. */
  78:Core/Src/system_stm32f7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  79:Core/Src/system_stm32f7xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  80:Core/Src/system_stm32f7xx.c ****      remap of boot address selected */
  81:Core/Src/system_stm32f7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  82:Core/Src/system_stm32f7xx.c **** 
  83:Core/Src/system_stm32f7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  84:Core/Src/system_stm32f7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  85:Core/Src/system_stm32f7xx.c ****      in Sram else user remap will be done in Flash. */
  86:Core/Src/system_stm32f7xx.c **** /* #define VECT_TAB_SRAM */
  87:Core/Src/system_stm32f7xx.c **** #if defined(VECT_TAB_SRAM)
  88:Core/Src/system_stm32f7xx.c **** #define VECT_TAB_BASE_ADDRESS   RAMDTCM_BASE    /*!< Vector Table base address field.
  89:Core/Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  90:Core/Src/system_stm32f7xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  91:Core/Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  92:Core/Src/system_stm32f7xx.c **** #else
  93:Core/Src/system_stm32f7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
  94:Core/Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  95:Core/Src/system_stm32f7xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  96:Core/Src/system_stm32f7xx.c ****                                                      This value must be a multiple of 0x200. */
  97:Core/Src/system_stm32f7xx.c **** #endif /* VECT_TAB_SRAM */
  98:Core/Src/system_stm32f7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
  99:Core/Src/system_stm32f7xx.c **** /******************************************************************************/
 100:Core/Src/system_stm32f7xx.c **** 
 101:Core/Src/system_stm32f7xx.c **** /**
 102:Core/Src/system_stm32f7xx.c ****   * @}
 103:Core/Src/system_stm32f7xx.c ****   */
 104:Core/Src/system_stm32f7xx.c **** 
 105:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Macros
 106:Core/Src/system_stm32f7xx.c ****   * @{
 107:Core/Src/system_stm32f7xx.c ****   */
 108:Core/Src/system_stm32f7xx.c **** 
 109:Core/Src/system_stm32f7xx.c **** /**
 110:Core/Src/system_stm32f7xx.c ****   * @}
 111:Core/Src/system_stm32f7xx.c ****   */
 112:Core/Src/system_stm32f7xx.c **** 
 113:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Variables
 114:Core/Src/system_stm32f7xx.c ****   * @{
 115:Core/Src/system_stm32f7xx.c ****   */
 116:Core/Src/system_stm32f7xx.c **** 
 117:Core/Src/system_stm32f7xx.c ****   /* This variable is updated in three ways:
 118:Core/Src/system_stm32f7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 119:Core/Src/system_stm32f7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 120:Core/Src/system_stm32f7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 121:Core/Src/system_stm32f7xx.c ****          Note: If you use this function to configure the system clock; then there
 122:Core/Src/system_stm32f7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 123:Core/Src/system_stm32f7xx.c ****                variable is updated automatically.
 124:Core/Src/system_stm32f7xx.c ****   */
 125:Core/Src/system_stm32f7xx.c ****   uint32_t SystemCoreClock = 16000000;
ARM GAS  /tmp/cc2KnGR9.s 			page 4


 126:Core/Src/system_stm32f7xx.c ****   const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 127:Core/Src/system_stm32f7xx.c ****   const uint8_t APBPrescTable[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 128:Core/Src/system_stm32f7xx.c **** 
 129:Core/Src/system_stm32f7xx.c **** /**
 130:Core/Src/system_stm32f7xx.c ****   * @}
 131:Core/Src/system_stm32f7xx.c ****   */
 132:Core/Src/system_stm32f7xx.c **** 
 133:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_FunctionPrototypes
 134:Core/Src/system_stm32f7xx.c ****   * @{
 135:Core/Src/system_stm32f7xx.c ****   */
 136:Core/Src/system_stm32f7xx.c **** 
 137:Core/Src/system_stm32f7xx.c **** /**
 138:Core/Src/system_stm32f7xx.c ****   * @}
 139:Core/Src/system_stm32f7xx.c ****   */
 140:Core/Src/system_stm32f7xx.c **** 
 141:Core/Src/system_stm32f7xx.c **** /** @addtogroup STM32F7xx_System_Private_Functions
 142:Core/Src/system_stm32f7xx.c ****   * @{
 143:Core/Src/system_stm32f7xx.c ****   */
 144:Core/Src/system_stm32f7xx.c **** 
 145:Core/Src/system_stm32f7xx.c **** /**
 146:Core/Src/system_stm32f7xx.c ****   * @brief  Setup the microcontroller system
 147:Core/Src/system_stm32f7xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 148:Core/Src/system_stm32f7xx.c ****   *         SystemFrequency variable.
 149:Core/Src/system_stm32f7xx.c ****   * @param  None
 150:Core/Src/system_stm32f7xx.c ****   * @retval None
 151:Core/Src/system_stm32f7xx.c ****   */
 152:Core/Src/system_stm32f7xx.c **** void SystemInit(void)
 153:Core/Src/system_stm32f7xx.c **** {
  50              		.loc 1 153 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 80B4     		push	{r7}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 7, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
 154:Core/Src/system_stm32f7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 155:Core/Src/system_stm32f7xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 156:Core/Src/system_stm32f7xx.c ****   SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  62              		.loc 1 156 14
  63 0004 064B     		ldr	r3, .L2
  64 0006 D3F88830 		ldr	r3, [r3, #136]
  65 000a 054A     		ldr	r2, .L2
  66 000c 43F47003 		orr	r3, r3, #15728640
  67 0010 C2F88830 		str	r3, [r2, #136]
 157:Core/Src/system_stm32f7xx.c **** #endif
 158:Core/Src/system_stm32f7xx.c **** 
 159:Core/Src/system_stm32f7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 160:Core/Src/system_stm32f7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 161:Core/Src/system_stm32f7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 162:Core/Src/system_stm32f7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 163:Core/Src/system_stm32f7xx.c **** }
  68              		.loc 1 163 1
ARM GAS  /tmp/cc2KnGR9.s 			page 5


  69 0014 00BF     		nop
  70 0016 BD46     		mov	sp, r7
  71              	.LCFI2:
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 0018 5DF8047B 		ldr	r7, [sp], #4
  75              	.LCFI3:
  76              		.cfi_restore 7
  77              		.cfi_def_cfa_offset 0
  78 001c 7047     		bx	lr
  79              	.L3:
  80 001e 00BF     		.align	2
  81              	.L2:
  82 0020 00ED00E0 		.word	-536810240
  83              		.cfi_endproc
  84              	.LFE141:
  86              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  87              		.align	1
  88              		.global	SystemCoreClockUpdate
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv5-d16
  94              	SystemCoreClockUpdate:
  95              	.LFB142:
 164:Core/Src/system_stm32f7xx.c **** 
 165:Core/Src/system_stm32f7xx.c **** /**
 166:Core/Src/system_stm32f7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 167:Core/Src/system_stm32f7xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 168:Core/Src/system_stm32f7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 169:Core/Src/system_stm32f7xx.c ****   *         other parameters.
 170:Core/Src/system_stm32f7xx.c ****   *           
 171:Core/Src/system_stm32f7xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 172:Core/Src/system_stm32f7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 173:Core/Src/system_stm32f7xx.c ****   *         based on this variable will be incorrect.         
 174:Core/Src/system_stm32f7xx.c ****   *     
 175:Core/Src/system_stm32f7xx.c ****   * @note   - The system frequency computed by this function is not the real 
 176:Core/Src/system_stm32f7xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 177:Core/Src/system_stm32f7xx.c ****   *           constant and the selected clock source:
 178:Core/Src/system_stm32f7xx.c ****   *             
 179:Core/Src/system_stm32f7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 180:Core/Src/system_stm32f7xx.c ****   *                                              
 181:Core/Src/system_stm32f7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 182:Core/Src/system_stm32f7xx.c ****   *                          
 183:Core/Src/system_stm32f7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 184:Core/Src/system_stm32f7xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 185:Core/Src/system_stm32f7xx.c ****   *         
 186:Core/Src/system_stm32f7xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 187:Core/Src/system_stm32f7xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 188:Core/Src/system_stm32f7xx.c ****   *             in voltage and temperature.   
 189:Core/Src/system_stm32f7xx.c ****   *    
 190:Core/Src/system_stm32f7xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 191:Core/Src/system_stm32f7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 192:Core/Src/system_stm32f7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 193:Core/Src/system_stm32f7xx.c ****   *              have wrong result.
 194:Core/Src/system_stm32f7xx.c ****   *                
 195:Core/Src/system_stm32f7xx.c ****   *         - The result of this function could be not correct when using fractional
ARM GAS  /tmp/cc2KnGR9.s 			page 6


 196:Core/Src/system_stm32f7xx.c ****   *           value for HSE crystal.
 197:Core/Src/system_stm32f7xx.c ****   *     
 198:Core/Src/system_stm32f7xx.c ****   * @param  None
 199:Core/Src/system_stm32f7xx.c ****   * @retval None
 200:Core/Src/system_stm32f7xx.c ****   */
 201:Core/Src/system_stm32f7xx.c **** void SystemCoreClockUpdate(void)
 202:Core/Src/system_stm32f7xx.c **** {
  96              		.loc 1 202 1
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 24
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              	.LCFI4:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 87B0     		sub	sp, sp, #28
 106              	.LCFI5:
 107              		.cfi_def_cfa_offset 32
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI6:
 110              		.cfi_def_cfa_register 7
 203:Core/Src/system_stm32f7xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 111              		.loc 1 203 12
 112 0006 0023     		movs	r3, #0
 113 0008 3B61     		str	r3, [r7, #16]
 114              		.loc 1 203 21
 115 000a 0023     		movs	r3, #0
 116 000c 7B61     		str	r3, [r7, #20]
 117              		.loc 1 203 33
 118 000e 0223     		movs	r3, #2
 119 0010 FB60     		str	r3, [r7, #12]
 120              		.loc 1 203 43
 121 0012 0023     		movs	r3, #0
 122 0014 BB60     		str	r3, [r7, #8]
 123              		.loc 1 203 58
 124 0016 0223     		movs	r3, #2
 125 0018 7B60     		str	r3, [r7, #4]
 204:Core/Src/system_stm32f7xx.c ****   
 205:Core/Src/system_stm32f7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 206:Core/Src/system_stm32f7xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 126              		.loc 1 206 12
 127 001a 344B     		ldr	r3, .L12
 128 001c 9B68     		ldr	r3, [r3, #8]
 129              		.loc 1 206 7
 130 001e 03F00C03 		and	r3, r3, #12
 131 0022 3B61     		str	r3, [r7, #16]
 207:Core/Src/system_stm32f7xx.c **** 
 208:Core/Src/system_stm32f7xx.c ****   switch (tmp)
 132              		.loc 1 208 3
 133 0024 3B69     		ldr	r3, [r7, #16]
 134 0026 082B     		cmp	r3, #8
 135 0028 11D0     		beq	.L5
 136 002a 3B69     		ldr	r3, [r7, #16]
 137 002c 082B     		cmp	r3, #8
 138 002e 44D8     		bhi	.L6
 139 0030 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cc2KnGR9.s 			page 7


 140 0032 002B     		cmp	r3, #0
 141 0034 03D0     		beq	.L7
 142 0036 3B69     		ldr	r3, [r7, #16]
 143 0038 042B     		cmp	r3, #4
 144 003a 04D0     		beq	.L8
 145 003c 3DE0     		b	.L6
 146              	.L7:
 209:Core/Src/system_stm32f7xx.c ****   {
 210:Core/Src/system_stm32f7xx.c ****     case 0x00:  /* HSI used as system clock source */
 211:Core/Src/system_stm32f7xx.c ****       SystemCoreClock = HSI_VALUE;
 147              		.loc 1 211 23
 148 003e 2C4B     		ldr	r3, .L12+4
 149 0040 2C4A     		ldr	r2, .L12+8
 150 0042 1A60     		str	r2, [r3]
 212:Core/Src/system_stm32f7xx.c ****       break;
 151              		.loc 1 212 7
 152 0044 3DE0     		b	.L9
 153              	.L8:
 213:Core/Src/system_stm32f7xx.c ****     case 0x04:  /* HSE used as system clock source */
 214:Core/Src/system_stm32f7xx.c ****       SystemCoreClock = HSE_VALUE;
 154              		.loc 1 214 23
 155 0046 2A4B     		ldr	r3, .L12+4
 156 0048 2B4A     		ldr	r2, .L12+12
 157 004a 1A60     		str	r2, [r3]
 215:Core/Src/system_stm32f7xx.c ****       break;
 158              		.loc 1 215 7
 159 004c 39E0     		b	.L9
 160              	.L5:
 216:Core/Src/system_stm32f7xx.c ****     case 0x08:  /* PLL used as system clock source */
 217:Core/Src/system_stm32f7xx.c **** 
 218:Core/Src/system_stm32f7xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 219:Core/Src/system_stm32f7xx.c ****          SYSCLK = PLL_VCO / PLL_P
 220:Core/Src/system_stm32f7xx.c ****          */    
 221:Core/Src/system_stm32f7xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 161              		.loc 1 221 23
 162 004e 274B     		ldr	r3, .L12
 163 0050 5B68     		ldr	r3, [r3, #4]
 164              		.loc 1 221 55
 165 0052 9B0D     		lsrs	r3, r3, #22
 166              		.loc 1 221 17
 167 0054 03F00103 		and	r3, r3, #1
 168 0058 BB60     		str	r3, [r7, #8]
 222:Core/Src/system_stm32f7xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 169              		.loc 1 222 17
 170 005a 244B     		ldr	r3, .L12
 171 005c 5B68     		ldr	r3, [r3, #4]
 172              		.loc 1 222 12
 173 005e 03F03F03 		and	r3, r3, #63
 174 0062 7B60     		str	r3, [r7, #4]
 223:Core/Src/system_stm32f7xx.c ****       
 224:Core/Src/system_stm32f7xx.c ****       if (pllsource != 0)
 175              		.loc 1 224 10
 176 0064 BB68     		ldr	r3, [r7, #8]
 177 0066 002B     		cmp	r3, #0
 178 0068 0CD0     		beq	.L10
 225:Core/Src/system_stm32f7xx.c ****       {
 226:Core/Src/system_stm32f7xx.c ****         /* HSE used as PLL clock source */
ARM GAS  /tmp/cc2KnGR9.s 			page 8


 227:Core/Src/system_stm32f7xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 179              		.loc 1 227 29
 180 006a 234A     		ldr	r2, .L12+12
 181 006c 7B68     		ldr	r3, [r7, #4]
 182 006e B2FBF3F3 		udiv	r3, r2, r3
 183              		.loc 1 227 44
 184 0072 1E4A     		ldr	r2, .L12
 185 0074 5268     		ldr	r2, [r2, #4]
 186              		.loc 1 227 74
 187 0076 9209     		lsrs	r2, r2, #6
 188 0078 C2F30802 		ubfx	r2, r2, #0, #9
 189              		.loc 1 227 16
 190 007c 02FB03F3 		mul	r3, r2, r3
 191 0080 7B61     		str	r3, [r7, #20]
 192 0082 0BE0     		b	.L11
 193              	.L10:
 228:Core/Src/system_stm32f7xx.c ****       }
 229:Core/Src/system_stm32f7xx.c ****       else
 230:Core/Src/system_stm32f7xx.c ****       {
 231:Core/Src/system_stm32f7xx.c ****         /* HSI used as PLL clock source */
 232:Core/Src/system_stm32f7xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 194              		.loc 1 232 29
 195 0084 1B4A     		ldr	r2, .L12+8
 196 0086 7B68     		ldr	r3, [r7, #4]
 197 0088 B2FBF3F3 		udiv	r3, r2, r3
 198              		.loc 1 232 44
 199 008c 174A     		ldr	r2, .L12
 200 008e 5268     		ldr	r2, [r2, #4]
 201              		.loc 1 232 74
 202 0090 9209     		lsrs	r2, r2, #6
 203 0092 C2F30802 		ubfx	r2, r2, #0, #9
 204              		.loc 1 232 16
 205 0096 02FB03F3 		mul	r3, r2, r3
 206 009a 7B61     		str	r3, [r7, #20]
 207              	.L11:
 233:Core/Src/system_stm32f7xx.c ****       }
 234:Core/Src/system_stm32f7xx.c **** 
 235:Core/Src/system_stm32f7xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 208              		.loc 1 235 20
 209 009c 134B     		ldr	r3, .L12
 210 009e 5B68     		ldr	r3, [r3, #4]
 211              		.loc 1 235 50
 212 00a0 1B0C     		lsrs	r3, r3, #16
 213 00a2 03F00303 		and	r3, r3, #3
 214              		.loc 1 235 56
 215 00a6 0133     		adds	r3, r3, #1
 216              		.loc 1 235 12
 217 00a8 5B00     		lsls	r3, r3, #1
 218 00aa FB60     		str	r3, [r7, #12]
 236:Core/Src/system_stm32f7xx.c ****       SystemCoreClock = pllvco/pllp;
 219              		.loc 1 236 31
 220 00ac 7A69     		ldr	r2, [r7, #20]
 221 00ae FB68     		ldr	r3, [r7, #12]
 222 00b0 B2FBF3F3 		udiv	r3, r2, r3
 223              		.loc 1 236 23
 224 00b4 0E4A     		ldr	r2, .L12+4
 225 00b6 1360     		str	r3, [r2]
ARM GAS  /tmp/cc2KnGR9.s 			page 9


 237:Core/Src/system_stm32f7xx.c ****       break;
 226              		.loc 1 237 7
 227 00b8 03E0     		b	.L9
 228              	.L6:
 238:Core/Src/system_stm32f7xx.c ****     default:
 239:Core/Src/system_stm32f7xx.c ****       SystemCoreClock = HSI_VALUE;
 229              		.loc 1 239 23
 230 00ba 0D4B     		ldr	r3, .L12+4
 231 00bc 0D4A     		ldr	r2, .L12+8
 232 00be 1A60     		str	r2, [r3]
 240:Core/Src/system_stm32f7xx.c ****       break;
 233              		.loc 1 240 7
 234 00c0 00BF     		nop
 235              	.L9:
 241:Core/Src/system_stm32f7xx.c ****   }
 242:Core/Src/system_stm32f7xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 243:Core/Src/system_stm32f7xx.c ****   /* Get HCLK prescaler */
 244:Core/Src/system_stm32f7xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 236              		.loc 1 244 28
 237 00c2 0A4B     		ldr	r3, .L12
 238 00c4 9B68     		ldr	r3, [r3, #8]
 239              		.loc 1 244 52
 240 00c6 1B09     		lsrs	r3, r3, #4
 241 00c8 03F00F03 		and	r3, r3, #15
 242              		.loc 1 244 22
 243 00cc 0B4A     		ldr	r2, .L12+16
 244 00ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 245              		.loc 1 244 7
 246 00d0 3B61     		str	r3, [r7, #16]
 245:Core/Src/system_stm32f7xx.c ****   /* HCLK frequency */
 246:Core/Src/system_stm32f7xx.c ****   SystemCoreClock >>= tmp;
 247              		.loc 1 246 19
 248 00d2 074B     		ldr	r3, .L12+4
 249 00d4 1A68     		ldr	r2, [r3]
 250 00d6 3B69     		ldr	r3, [r7, #16]
 251 00d8 22FA03F3 		lsr	r3, r2, r3
 252 00dc 044A     		ldr	r2, .L12+4
 253 00de 1360     		str	r3, [r2]
 247:Core/Src/system_stm32f7xx.c **** }
 254              		.loc 1 247 1
 255 00e0 00BF     		nop
 256 00e2 1C37     		adds	r7, r7, #28
 257              	.LCFI7:
 258              		.cfi_def_cfa_offset 4
 259 00e4 BD46     		mov	sp, r7
 260              	.LCFI8:
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 00e6 5DF8047B 		ldr	r7, [sp], #4
 264              	.LCFI9:
 265              		.cfi_restore 7
 266              		.cfi_def_cfa_offset 0
 267 00ea 7047     		bx	lr
 268              	.L13:
 269              		.align	2
 270              	.L12:
 271 00ec 00380240 		.word	1073887232
ARM GAS  /tmp/cc2KnGR9.s 			page 10


 272 00f0 00000000 		.word	SystemCoreClock
 273 00f4 0024F400 		.word	16000000
 274 00f8 40787D01 		.word	25000000
 275 00fc 00000000 		.word	AHBPrescTable
 276              		.cfi_endproc
 277              	.LFE142:
 279              		.text
 280              	.Letext0:
 281              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 282              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 283              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 284              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 285              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cc2KnGR9.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f7xx.c
     /tmp/cc2KnGR9.s:21     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cc2KnGR9.s:18     .data.SystemCoreClock:0000000000000000 $d
     /tmp/cc2KnGR9.s:28     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cc2KnGR9.s:25     .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/cc2KnGR9.s:36     .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/cc2KnGR9.s:33     .rodata.APBPrescTable:0000000000000000 $d
     /tmp/cc2KnGR9.s:39     .text.SystemInit:0000000000000000 $t
     /tmp/cc2KnGR9.s:47     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cc2KnGR9.s:82     .text.SystemInit:0000000000000020 $d
     /tmp/cc2KnGR9.s:87     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cc2KnGR9.s:94     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cc2KnGR9.s:271    .text.SystemCoreClockUpdate:00000000000000ec $d

NO UNDEFINED SYMBOLS
