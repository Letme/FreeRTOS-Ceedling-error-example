ARM GAS  /tmp/ccdGnCH8.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_dma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_DMA_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_DMA_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_DMA_Init:
  26              	.LFB141:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccdGnCH8.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Select Callbacks functions using HAL_DMA_RegisterCallback()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =============================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * All rights reserved.</center></h2>
ARM GAS  /tmp/ccdGnCH8.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
ARM GAS  /tmp/ccdGnCH8.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  28              		.loc 1 173 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
  44              		.loc 1 174 12
  45 0008 0023     		movs	r3, #0
  46 000a 7B61     		str	r3, [r7, #20]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  47              		.loc 1 175 24
  48 000c FFF7FEFF 		bl	HAL_GetTick
  49 0010 3861     		str	r0, [r7, #16]
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
  50              		.loc 1 179 5
ARM GAS  /tmp/ccdGnCH8.s 			page 5


  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 002B     		cmp	r3, #0
  53 0016 01D1     		bne	.L2
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
  54              		.loc 1 181 12
  55 0018 0123     		movs	r3, #1
  56 001a 99E0     		b	.L3
  57              	.L2:
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  58              		.loc 1 205 3
  59 001c 7B68     		ldr	r3, [r7, #4]
  60 001e 0022     		movs	r2, #0
  61 0020 83F83420 		strb	r2, [r3, #52]
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  62              		.loc 1 208 15
  63 0024 7B68     		ldr	r3, [r7, #4]
  64 0026 0222     		movs	r2, #2
  65 0028 83F83520 		strb	r2, [r3, #53]
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  66              		.loc 1 211 3
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 1B68     		ldr	r3, [r3]
  69 0030 1A68     		ldr	r2, [r3]
  70 0032 7B68     		ldr	r3, [r7, #4]
  71 0034 1B68     		ldr	r3, [r3]
  72 0036 22F00102 		bic	r2, r2, #1
  73 003a 1A60     		str	r2, [r3]
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
ARM GAS  /tmp/ccdGnCH8.s 			page 6


 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
  74              		.loc 1 214 8
  75 003c 0FE0     		b	.L4
  76              	.L5:
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  77              		.loc 1 217 9
  78 003e FFF7FEFF 		bl	HAL_GetTick
  79 0042 0246     		mov	r2, r0
  80              		.loc 1 217 23
  81 0044 3B69     		ldr	r3, [r7, #16]
  82 0046 D31A     		subs	r3, r2, r3
  83              		.loc 1 217 7
  84 0048 052B     		cmp	r3, #5
  85 004a 08D9     		bls	.L4
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  86              		.loc 1 220 23
  87 004c 7B68     		ldr	r3, [r7, #4]
  88 004e 2022     		movs	r2, #32
  89 0050 5A65     		str	r2, [r3, #84]
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  90              		.loc 1 223 19
  91 0052 7B68     		ldr	r3, [r7, #4]
  92 0054 0322     		movs	r2, #3
  93 0056 83F83520 		strb	r2, [r3, #53]
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
  94              		.loc 1 225 14
  95 005a 0323     		movs	r3, #3
  96 005c 78E0     		b	.L3
  97              	.L4:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
  98              		.loc 1 214 14
  99 005e 7B68     		ldr	r3, [r7, #4]
 100 0060 1B68     		ldr	r3, [r3]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 101              		.loc 1 214 24
 102 0062 1B68     		ldr	r3, [r3]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 103              		.loc 1 214 29
 104 0064 03F00103 		and	r3, r3, #1
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 105              		.loc 1 214 8
 106 0068 002B     		cmp	r3, #0
 107 006a E8D1     		bne	.L5
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 108              		.loc 1 230 13
 109 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 7


 110 006e 1B68     		ldr	r3, [r3]
 111              		.loc 1 230 7
 112 0070 1B68     		ldr	r3, [r3]
 113 0072 7B61     		str	r3, [r7, #20]
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 114              		.loc 1 233 7
 115 0074 7A69     		ldr	r2, [r7, #20]
 116 0076 384B     		ldr	r3, .L8
 117 0078 1340     		ands	r3, r3, r2
 118 007a 7B61     		str	r3, [r7, #20]
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 119              		.loc 1 239 21
 120 007c 7B68     		ldr	r3, [r7, #4]
 121 007e 5A68     		ldr	r2, [r3, #4]
 122              		.loc 1 239 54
 123 0080 7B68     		ldr	r3, [r7, #4]
 124 0082 9B68     		ldr	r3, [r3, #8]
 125              		.loc 1 239 42
 126 0084 1A43     		orrs	r2, r2, r3
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 127              		.loc 1 240 21
 128 0086 7B68     		ldr	r3, [r7, #4]
 129 0088 DB68     		ldr	r3, [r3, #12]
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 130              		.loc 1 239 72
 131 008a 1A43     		orrs	r2, r2, r3
 132              		.loc 1 240 54
 133 008c 7B68     		ldr	r3, [r7, #4]
 134 008e 1B69     		ldr	r3, [r3, #16]
 135              		.loc 1 240 42
 136 0090 1A43     		orrs	r2, r2, r3
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 137              		.loc 1 241 21
 138 0092 7B68     		ldr	r3, [r7, #4]
 139 0094 5B69     		ldr	r3, [r3, #20]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 140              		.loc 1 240 72
 141 0096 1A43     		orrs	r2, r2, r3
 142              		.loc 1 241 54
 143 0098 7B68     		ldr	r3, [r7, #4]
 144 009a 9B69     		ldr	r3, [r3, #24]
 145              		.loc 1 241 42
 146 009c 1A43     		orrs	r2, r2, r3
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 147              		.loc 1 242 21
 148 009e 7B68     		ldr	r3, [r7, #4]
 149 00a0 DB69     		ldr	r3, [r3, #28]
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 150              		.loc 1 241 72
 151 00a2 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccdGnCH8.s 			page 8


 152              		.loc 1 242 54
 153 00a4 7B68     		ldr	r3, [r7, #4]
 154 00a6 1B6A     		ldr	r3, [r3, #32]
 155              		.loc 1 242 42
 156 00a8 1343     		orrs	r3, r3, r2
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 157              		.loc 1 239 7
 158 00aa 7A69     		ldr	r2, [r7, #20]
 159 00ac 1343     		orrs	r3, r3, r2
 160 00ae 7B61     		str	r3, [r7, #20]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 161              		.loc 1 245 16
 162 00b0 7B68     		ldr	r3, [r7, #4]
 163 00b2 5B6A     		ldr	r3, [r3, #36]
 164              		.loc 1 245 5
 165 00b4 042B     		cmp	r3, #4
 166 00b6 07D1     		bne	.L6
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 167              		.loc 1 248 23
 168 00b8 7B68     		ldr	r3, [r7, #4]
 169 00ba DA6A     		ldr	r2, [r3, #44]
 170              		.loc 1 248 45
 171 00bc 7B68     		ldr	r3, [r7, #4]
 172 00be 1B6B     		ldr	r3, [r3, #48]
 173              		.loc 1 248 33
 174 00c0 1343     		orrs	r3, r3, r2
 175              		.loc 1 248 9
 176 00c2 7A69     		ldr	r2, [r7, #20]
 177 00c4 1343     		orrs	r3, r3, r2
 178 00c6 7B61     		str	r3, [r7, #20]
 179              	.L6:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 180              		.loc 1 252 7
 181 00c8 7B68     		ldr	r3, [r7, #4]
 182 00ca 1B68     		ldr	r3, [r3]
 183              		.loc 1 252 22
 184 00cc 7A69     		ldr	r2, [r7, #20]
 185 00ce 1A60     		str	r2, [r3]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 186              		.loc 1 255 13
 187 00d0 7B68     		ldr	r3, [r7, #4]
 188 00d2 1B68     		ldr	r3, [r3]
 189              		.loc 1 255 7
 190 00d4 5B69     		ldr	r3, [r3, #20]
 191 00d6 7B61     		str	r3, [r7, #20]
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
ARM GAS  /tmp/ccdGnCH8.s 			page 9


 192              		.loc 1 258 7
 193 00d8 7B69     		ldr	r3, [r7, #20]
 194 00da 23F00703 		bic	r3, r3, #7
 195 00de 7B61     		str	r3, [r7, #20]
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 196              		.loc 1 261 20
 197 00e0 7B68     		ldr	r3, [r7, #4]
 198 00e2 5B6A     		ldr	r3, [r3, #36]
 199              		.loc 1 261 7
 200 00e4 7A69     		ldr	r2, [r7, #20]
 201 00e6 1343     		orrs	r3, r3, r2
 202 00e8 7B61     		str	r3, [r7, #20]
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 203              		.loc 1 264 16
 204 00ea 7B68     		ldr	r3, [r7, #4]
 205 00ec 5B6A     		ldr	r3, [r3, #36]
 206              		.loc 1 264 5
 207 00ee 042B     		cmp	r3, #4
 208 00f0 17D1     		bne	.L7
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 209              		.loc 1 267 22
 210 00f2 7B68     		ldr	r3, [r7, #4]
 211 00f4 9B6A     		ldr	r3, [r3, #40]
 212              		.loc 1 267 9
 213 00f6 7A69     		ldr	r2, [r7, #20]
 214 00f8 1343     		orrs	r3, r3, r2
 215 00fa 7B61     		str	r3, [r7, #20]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 216              		.loc 1 271 19
 217 00fc 7B68     		ldr	r3, [r7, #4]
 218 00fe DB6A     		ldr	r3, [r3, #44]
 219              		.loc 1 271 8
 220 0100 002B     		cmp	r3, #0
 221 0102 0ED0     		beq	.L7
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 222              		.loc 1 273 11
 223 0104 7868     		ldr	r0, [r7, #4]
 224 0106 FFF7FEFF 		bl	DMA_CheckFifoParam
 225 010a 0346     		mov	r3, r0
 226              		.loc 1 273 10
 227 010c 002B     		cmp	r3, #0
 228 010e 08D0     		beq	.L7
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 229              		.loc 1 276 25
 230 0110 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 10


 231 0112 4022     		movs	r2, #64
 232 0114 5A65     		str	r2, [r3, #84]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 233              		.loc 1 279 21
 234 0116 7B68     		ldr	r3, [r7, #4]
 235 0118 0122     		movs	r2, #1
 236 011a 83F83520 		strb	r2, [r3, #53]
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_ERROR; 
 237              		.loc 1 281 16
 238 011e 0123     		movs	r3, #1
 239 0120 16E0     		b	.L3
 240              	.L7:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 241              		.loc 1 287 7
 242 0122 7B68     		ldr	r3, [r7, #4]
 243 0124 1B68     		ldr	r3, [r3]
 244              		.loc 1 287 23
 245 0126 7A69     		ldr	r2, [r7, #20]
 246 0128 5A61     		str	r2, [r3, #20]
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 247              		.loc 1 291 32
 248 012a 7868     		ldr	r0, [r7, #4]
 249 012c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 250 0130 0346     		mov	r3, r0
 251              		.loc 1 291 8
 252 0132 FB60     		str	r3, [r7, #12]
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 253              		.loc 1 294 29
 254 0134 7B68     		ldr	r3, [r7, #4]
 255 0136 DB6D     		ldr	r3, [r3, #92]
 256              		.loc 1 294 22
 257 0138 3F22     		movs	r2, #63
 258 013a 9A40     		lsls	r2, r2, r3
 259              		.loc 1 294 14
 260 013c FB68     		ldr	r3, [r7, #12]
 261 013e 9A60     		str	r2, [r3, #8]
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 262              		.loc 1 297 19
 263 0140 7B68     		ldr	r3, [r7, #4]
 264 0142 0022     		movs	r2, #0
 265 0144 5A65     		str	r2, [r3, #84]
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
ARM GAS  /tmp/ccdGnCH8.s 			page 11


 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 266              		.loc 1 300 15
 267 0146 7B68     		ldr	r3, [r7, #4]
 268 0148 0122     		movs	r2, #1
 269 014a 83F83520 		strb	r2, [r3, #53]
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 270              		.loc 1 302 10
 271 014e 0023     		movs	r3, #0
 272              	.L3:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 273              		.loc 1 303 1
 274 0150 1846     		mov	r0, r3
 275 0152 1837     		adds	r7, r7, #24
 276              	.LCFI3:
 277              		.cfi_def_cfa_offset 8
 278 0154 BD46     		mov	sp, r7
 279              	.LCFI4:
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 0156 80BD     		pop	{r7, pc}
 283              	.L9:
 284              		.align	2
 285              	.L8:
 286 0158 3F8010E0 		.word	-535789505
 287              		.cfi_endproc
 288              	.LFE141:
 290              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_DMA_DeInit
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv5-d16
 298              	HAL_DMA_DeInit:
 299              	.LFB142:
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 300              		.loc 1 312 1
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI5:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 84B0     		sub	sp, sp, #16
 310              	.LCFI6:
ARM GAS  /tmp/ccdGnCH8.s 			page 12


 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI7:
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 316              		.loc 1 316 5
 317 0008 7B68     		ldr	r3, [r7, #4]
 318 000a 002B     		cmp	r3, #0
 319 000c 01D1     		bne	.L11
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 320              		.loc 1 318 12
 321 000e 0123     		movs	r3, #1
 322 0010 50E0     		b	.L12
 323              	.L11:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 324              		.loc 1 322 10
 325 0012 7B68     		ldr	r3, [r7, #4]
 326 0014 93F83530 		ldrb	r3, [r3, #53]
 327 0018 DBB2     		uxtb	r3, r3
 328              		.loc 1 322 5
 329 001a 022B     		cmp	r3, #2
 330 001c 01D1     		bne	.L13
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 331              		.loc 1 325 12
 332 001e 0223     		movs	r3, #2
 333 0020 48E0     		b	.L12
 334              	.L13:
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 335              		.loc 1 332 3
 336 0022 7B68     		ldr	r3, [r7, #4]
 337 0024 1B68     		ldr	r3, [r3]
 338 0026 1A68     		ldr	r2, [r3]
 339 0028 7B68     		ldr	r3, [r7, #4]
 340 002a 1B68     		ldr	r3, [r3]
 341 002c 22F00102 		bic	r2, r2, #1
 342 0030 1A60     		str	r2, [r3]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 343              		.loc 1 335 7
 344 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 13


 345 0034 1B68     		ldr	r3, [r3]
 346              		.loc 1 335 24
 347 0036 0022     		movs	r2, #0
 348 0038 1A60     		str	r2, [r3]
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 349              		.loc 1 338 7
 350 003a 7B68     		ldr	r3, [r7, #4]
 351 003c 1B68     		ldr	r3, [r3]
 352              		.loc 1 338 24
 353 003e 0022     		movs	r2, #0
 354 0040 5A60     		str	r2, [r3, #4]
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 355              		.loc 1 341 7
 356 0042 7B68     		ldr	r3, [r7, #4]
 357 0044 1B68     		ldr	r3, [r3]
 358              		.loc 1 341 24
 359 0046 0022     		movs	r2, #0
 360 0048 9A60     		str	r2, [r3, #8]
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 361              		.loc 1 344 7
 362 004a 7B68     		ldr	r3, [r7, #4]
 363 004c 1B68     		ldr	r3, [r3]
 364              		.loc 1 344 24
 365 004e 0022     		movs	r2, #0
 366 0050 DA60     		str	r2, [r3, #12]
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 367              		.loc 1 347 7
 368 0052 7B68     		ldr	r3, [r7, #4]
 369 0054 1B68     		ldr	r3, [r3]
 370              		.loc 1 347 24
 371 0056 0022     		movs	r2, #0
 372 0058 1A61     		str	r2, [r3, #16]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 373              		.loc 1 350 7
 374 005a 7B68     		ldr	r3, [r7, #4]
 375 005c 1B68     		ldr	r3, [r3]
 376              		.loc 1 350 24
 377 005e 2122     		movs	r2, #33
 378 0060 5A61     		str	r2, [r3, #20]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 379              		.loc 1 353 32
 380 0062 7868     		ldr	r0, [r7, #4]
 381 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 382 0068 0346     		mov	r3, r0
 383              		.loc 1 353 8
ARM GAS  /tmp/ccdGnCH8.s 			page 14


 384 006a FB60     		str	r3, [r7, #12]
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 385              		.loc 1 356 29
 386 006c 7B68     		ldr	r3, [r7, #4]
 387 006e DB6D     		ldr	r3, [r3, #92]
 388              		.loc 1 356 22
 389 0070 3F22     		movs	r2, #63
 390 0072 9A40     		lsls	r2, r2, r3
 391              		.loc 1 356 14
 392 0074 FB68     		ldr	r3, [r7, #12]
 393 0076 9A60     		str	r2, [r3, #8]
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clean all callbacks */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 394              		.loc 1 359 26
 395 0078 7B68     		ldr	r3, [r7, #4]
 396 007a 0022     		movs	r2, #0
 397 007c DA63     		str	r2, [r3, #60]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 398              		.loc 1 360 30
 399 007e 7B68     		ldr	r3, [r7, #4]
 400 0080 0022     		movs	r2, #0
 401 0082 1A64     		str	r2, [r3, #64]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 402              		.loc 1 361 28
 403 0084 7B68     		ldr	r3, [r7, #4]
 404 0086 0022     		movs	r2, #0
 405 0088 5A64     		str	r2, [r3, #68]
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 406              		.loc 1 362 32
 407 008a 7B68     		ldr	r3, [r7, #4]
 408 008c 0022     		movs	r2, #0
 409 008e 9A64     		str	r2, [r3, #72]
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 410              		.loc 1 363 27
 411 0090 7B68     		ldr	r3, [r7, #4]
 412 0092 0022     		movs	r2, #0
 413 0094 DA64     		str	r2, [r3, #76]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 414              		.loc 1 364 27
 415 0096 7B68     		ldr	r3, [r7, #4]
 416 0098 0022     		movs	r2, #0
 417 009a 1A65     		str	r2, [r3, #80]
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the error code */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 418              		.loc 1 367 19
 419 009c 7B68     		ldr	r3, [r7, #4]
 420 009e 0022     		movs	r2, #0
 421 00a0 5A65     		str	r2, [r3, #84]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the DMA state */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 422              		.loc 1 370 15
 423 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 15


 424 00a4 0022     		movs	r2, #0
 425 00a6 83F83520 		strb	r2, [r3, #53]
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 426              		.loc 1 373 3
 427 00aa 7B68     		ldr	r3, [r7, #4]
 428 00ac 0022     		movs	r2, #0
 429 00ae 83F83420 		strb	r2, [r3, #52]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 430              		.loc 1 375 10
 431 00b2 0023     		movs	r3, #0
 432              	.L12:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 433              		.loc 1 376 1
 434 00b4 1846     		mov	r0, r3
 435 00b6 1037     		adds	r7, r7, #16
 436              	.LCFI8:
 437              		.cfi_def_cfa_offset 8
 438 00b8 BD46     		mov	sp, r7
 439              	.LCFI9:
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 00ba 80BD     		pop	{r7, pc}
 443              		.cfi_endproc
 444              	.LFE142:
 446              		.section	.text.HAL_DMA_Start,"ax",%progbits
 447              		.align	1
 448              		.global	HAL_DMA_Start
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv5-d16
 454              	HAL_DMA_Start:
 455              	.LFB143:
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
ARM GAS  /tmp/ccdGnCH8.s 			page 16


 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 456              		.loc 1 410 1
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 24
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460 0000 80B5     		push	{r7, lr}
 461              	.LCFI10:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 86B0     		sub	sp, sp, #24
 466              	.LCFI11:
 467              		.cfi_def_cfa_offset 32
 468 0004 00AF     		add	r7, sp, #0
 469              	.LCFI12:
 470              		.cfi_def_cfa_register 7
 471 0006 F860     		str	r0, [r7, #12]
 472 0008 B960     		str	r1, [r7, #8]
 473 000a 7A60     		str	r2, [r7, #4]
 474 000c 3B60     		str	r3, [r7]
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 475              		.loc 1 411 21
 476 000e 0023     		movs	r3, #0
 477 0010 FB75     		strb	r3, [r7, #23]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 478              		.loc 1 417 3
 479 0012 FB68     		ldr	r3, [r7, #12]
 480 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 481 0018 012B     		cmp	r3, #1
 482 001a 01D1     		bne	.L15
 483              		.loc 1 417 3 is_stmt 0 discriminator 1
 484 001c 0223     		movs	r3, #2
 485 001e 26E0     		b	.L16
 486              	.L15:
 487              		.loc 1 417 3 discriminator 2
 488 0020 FB68     		ldr	r3, [r7, #12]
 489 0022 0122     		movs	r2, #1
 490 0024 83F83420 		strb	r2, [r3, #52]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
ARM GAS  /tmp/ccdGnCH8.s 			page 17


 491              		.loc 1 419 33 is_stmt 1 discriminator 2
 492 0028 FB68     		ldr	r3, [r7, #12]
 493 002a 93F83530 		ldrb	r3, [r3, #53]
 494 002e DBB2     		uxtb	r3, r3
 495              		.loc 1 419 5 discriminator 2
 496 0030 012B     		cmp	r3, #1
 497 0032 15D1     		bne	.L17
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 498              		.loc 1 422 17
 499 0034 FB68     		ldr	r3, [r7, #12]
 500 0036 0222     		movs	r2, #2
 501 0038 83F83520 		strb	r2, [r3, #53]
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 502              		.loc 1 425 21
 503 003c FB68     		ldr	r3, [r7, #12]
 504 003e 0022     		movs	r2, #0
 505 0040 5A65     		str	r2, [r3, #84]
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 506              		.loc 1 428 5
 507 0042 3B68     		ldr	r3, [r7]
 508 0044 7A68     		ldr	r2, [r7, #4]
 509 0046 B968     		ldr	r1, [r7, #8]
 510 0048 F868     		ldr	r0, [r7, #12]
 511 004a FFF7FEFF 		bl	DMA_SetConfig
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 512              		.loc 1 431 5
 513 004e FB68     		ldr	r3, [r7, #12]
 514 0050 1B68     		ldr	r3, [r3]
 515 0052 1A68     		ldr	r2, [r3]
 516 0054 FB68     		ldr	r3, [r7, #12]
 517 0056 1B68     		ldr	r3, [r3]
 518 0058 42F00102 		orr	r2, r2, #1
 519 005c 1A60     		str	r2, [r3]
 520 005e 05E0     		b	.L18
 521              	.L17:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 522              		.loc 1 436 5
 523 0060 FB68     		ldr	r3, [r7, #12]
 524 0062 0022     		movs	r2, #0
 525 0064 83F83420 		strb	r2, [r3, #52]
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 526              		.loc 1 439 12
 527 0068 0223     		movs	r3, #2
ARM GAS  /tmp/ccdGnCH8.s 			page 18


 528 006a FB75     		strb	r3, [r7, #23]
 529              	.L18:
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 530              		.loc 1 441 10
 531 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 532              	.L16:
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 533              		.loc 1 442 1
 534 006e 1846     		mov	r0, r3
 535 0070 1837     		adds	r7, r7, #24
 536              	.LCFI13:
 537              		.cfi_def_cfa_offset 8
 538 0072 BD46     		mov	sp, r7
 539              	.LCFI14:
 540              		.cfi_def_cfa_register 13
 541              		@ sp needed
 542 0074 80BD     		pop	{r7, pc}
 543              		.cfi_endproc
 544              	.LFE143:
 546              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 547              		.align	1
 548              		.global	HAL_DMA_Start_IT
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv5-d16
 554              	HAL_DMA_Start_IT:
 555              	.LFB144:
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 556              		.loc 1 454 1
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 24
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560 0000 80B5     		push	{r7, lr}
 561              	.LCFI15:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 86B0     		sub	sp, sp, #24
 566              	.LCFI16:
 567              		.cfi_def_cfa_offset 32
 568 0004 00AF     		add	r7, sp, #0
 569              	.LCFI17:
 570              		.cfi_def_cfa_register 7
 571 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccdGnCH8.s 			page 19


 572 0008 B960     		str	r1, [r7, #8]
 573 000a 7A60     		str	r2, [r7, #4]
 574 000c 3B60     		str	r3, [r7]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 575              		.loc 1 455 21
 576 000e 0023     		movs	r3, #0
 577 0010 FB75     		strb	r3, [r7, #23]
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 578              		.loc 1 458 56
 579 0012 FB68     		ldr	r3, [r7, #12]
 580 0014 9B6D     		ldr	r3, [r3, #88]
 581              		.loc 1 458 23
 582 0016 3B61     		str	r3, [r7, #16]
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 583              		.loc 1 464 3
 584 0018 FB68     		ldr	r3, [r7, #12]
 585 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 586 001e 012B     		cmp	r3, #1
 587 0020 01D1     		bne	.L20
 588              		.loc 1 464 3 is_stmt 0 discriminator 1
 589 0022 0223     		movs	r3, #2
 590 0024 48E0     		b	.L21
 591              	.L20:
 592              		.loc 1 464 3 discriminator 2
 593 0026 FB68     		ldr	r3, [r7, #12]
 594 0028 0122     		movs	r2, #1
 595 002a 83F83420 		strb	r2, [r3, #52]
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 596              		.loc 1 466 33 is_stmt 1 discriminator 2
 597 002e FB68     		ldr	r3, [r7, #12]
 598 0030 93F83530 		ldrb	r3, [r3, #53]
 599 0034 DBB2     		uxtb	r3, r3
 600              		.loc 1 466 5 discriminator 2
 601 0036 012B     		cmp	r3, #1
 602 0038 37D1     		bne	.L22
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 603              		.loc 1 469 17
 604 003a FB68     		ldr	r3, [r7, #12]
 605 003c 0222     		movs	r2, #2
 606 003e 83F83520 		strb	r2, [r3, #53]
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 607              		.loc 1 472 21
 608 0042 FB68     		ldr	r3, [r7, #12]
 609 0044 0022     		movs	r2, #0
 610 0046 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccdGnCH8.s 			page 20


 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 611              		.loc 1 475 5
 612 0048 3B68     		ldr	r3, [r7]
 613 004a 7A68     		ldr	r2, [r7, #4]
 614 004c B968     		ldr	r1, [r7, #8]
 615 004e F868     		ldr	r0, [r7, #12]
 616 0050 FFF7FEFF 		bl	DMA_SetConfig
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 617              		.loc 1 478 31
 618 0054 FB68     		ldr	r3, [r7, #12]
 619 0056 DB6D     		ldr	r3, [r3, #92]
 620              		.loc 1 478 24
 621 0058 3F22     		movs	r2, #63
 622 005a 9A40     		lsls	r2, r2, r3
 623              		.loc 1 478 16
 624 005c 3B69     		ldr	r3, [r7, #16]
 625 005e 9A60     		str	r2, [r3, #8]
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 626              		.loc 1 481 9
 627 0060 FB68     		ldr	r3, [r7, #12]
 628 0062 1B68     		ldr	r3, [r3]
 629              		.loc 1 481 25
 630 0064 1A68     		ldr	r2, [r3]
 631              		.loc 1 481 9
 632 0066 FB68     		ldr	r3, [r7, #12]
 633 0068 1B68     		ldr	r3, [r3]
 634              		.loc 1 481 25
 635 006a 42F01602 		orr	r2, r2, #22
 636 006e 1A60     		str	r2, [r3]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 637              		.loc 1 482 9
 638 0070 FB68     		ldr	r3, [r7, #12]
 639 0072 1B68     		ldr	r3, [r3]
 640              		.loc 1 482 25
 641 0074 5A69     		ldr	r2, [r3, #20]
 642              		.loc 1 482 9
 643 0076 FB68     		ldr	r3, [r7, #12]
 644 0078 1B68     		ldr	r3, [r3]
 645              		.loc 1 482 25
 646 007a 42F08002 		orr	r2, r2, #128
 647 007e 5A61     		str	r2, [r3, #20]
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 648              		.loc 1 484 12
 649 0080 FB68     		ldr	r3, [r7, #12]
 650 0082 1B6C     		ldr	r3, [r3, #64]
 651              		.loc 1 484 7
 652 0084 002B     		cmp	r3, #0
 653 0086 07D0     		beq	.L23
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
ARM GAS  /tmp/ccdGnCH8.s 			page 21


 654              		.loc 1 486 11
 655 0088 FB68     		ldr	r3, [r7, #12]
 656 008a 1B68     		ldr	r3, [r3]
 657              		.loc 1 486 27
 658 008c 1A68     		ldr	r2, [r3]
 659              		.loc 1 486 11
 660 008e FB68     		ldr	r3, [r7, #12]
 661 0090 1B68     		ldr	r3, [r3]
 662              		.loc 1 486 27
 663 0092 42F00802 		orr	r2, r2, #8
 664 0096 1A60     		str	r2, [r3]
 665              	.L23:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 666              		.loc 1 490 5
 667 0098 FB68     		ldr	r3, [r7, #12]
 668 009a 1B68     		ldr	r3, [r3]
 669 009c 1A68     		ldr	r2, [r3]
 670 009e FB68     		ldr	r3, [r7, #12]
 671 00a0 1B68     		ldr	r3, [r3]
 672 00a2 42F00102 		orr	r2, r2, #1
 673 00a6 1A60     		str	r2, [r3]
 674 00a8 05E0     		b	.L24
 675              	.L22:
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 676              		.loc 1 495 5
 677 00aa FB68     		ldr	r3, [r7, #12]
 678 00ac 0022     		movs	r2, #0
 679 00ae 83F83420 		strb	r2, [r3, #52]
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 680              		.loc 1 498 12
 681 00b2 0223     		movs	r3, #2
 682 00b4 FB75     		strb	r3, [r7, #23]
 683              	.L24:
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 684              		.loc 1 501 10
 685 00b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 686              	.L21:
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 687              		.loc 1 502 1
 688 00b8 1846     		mov	r0, r3
 689 00ba 1837     		adds	r7, r7, #24
 690              	.LCFI18:
 691              		.cfi_def_cfa_offset 8
 692 00bc BD46     		mov	sp, r7
 693              	.LCFI19:
 694              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccdGnCH8.s 			page 22


 695              		@ sp needed
 696 00be 80BD     		pop	{r7, pc}
 697              		.cfi_endproc
 698              	.LFE144:
 700              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 701              		.align	1
 702              		.global	HAL_DMA_Abort
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv5-d16
 708              	HAL_DMA_Abort:
 709              	.LFB145:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 710              		.loc 1 517 1
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 16
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              	.LCFI20:
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 84B0     		sub	sp, sp, #16
 720              	.LCFI21:
 721              		.cfi_def_cfa_offset 24
 722 0004 00AF     		add	r7, sp, #0
 723              	.LCFI22:
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 726              		.loc 1 519 56
 727 0008 7B68     		ldr	r3, [r7, #4]
 728 000a 9B6D     		ldr	r3, [r3, #88]
 729              		.loc 1 519 23
 730 000c FB60     		str	r3, [r7, #12]
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 731              		.loc 1 521 24
 732 000e FFF7FEFF 		bl	HAL_GetTick
 733 0012 B860     		str	r0, [r7, #8]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccdGnCH8.s 			page 23


 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 734              		.loc 1 523 10
 735 0014 7B68     		ldr	r3, [r7, #4]
 736 0016 93F83530 		ldrb	r3, [r3, #53]
 737 001a DBB2     		uxtb	r3, r3
 738              		.loc 1 523 5
 739 001c 022B     		cmp	r3, #2
 740 001e 08D0     		beq	.L26
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 741              		.loc 1 525 21
 742 0020 7B68     		ldr	r3, [r7, #4]
 743 0022 8022     		movs	r2, #128
 744 0024 5A65     		str	r2, [r3, #84]
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 745              		.loc 1 528 5
 746 0026 7B68     		ldr	r3, [r7, #4]
 747 0028 0022     		movs	r2, #0
 748 002a 83F83420 		strb	r2, [r3, #52]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 749              		.loc 1 530 12
 750 002e 0123     		movs	r3, #1
 751 0030 52E0     		b	.L27
 752              	.L26:
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 753              		.loc 1 535 9
 754 0032 7B68     		ldr	r3, [r7, #4]
 755 0034 1B68     		ldr	r3, [r3]
 756              		.loc 1 535 25
 757 0036 1A68     		ldr	r2, [r3]
 758              		.loc 1 535 9
 759 0038 7B68     		ldr	r3, [r7, #4]
 760 003a 1B68     		ldr	r3, [r3]
 761              		.loc 1 535 25
 762 003c 22F01602 		bic	r2, r2, #22
 763 0040 1A60     		str	r2, [r3]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 764              		.loc 1 536 9
 765 0042 7B68     		ldr	r3, [r7, #4]
 766 0044 1B68     		ldr	r3, [r3]
 767              		.loc 1 536 25
 768 0046 5A69     		ldr	r2, [r3, #20]
 769              		.loc 1 536 9
 770 0048 7B68     		ldr	r3, [r7, #4]
 771 004a 1B68     		ldr	r3, [r3]
 772              		.loc 1 536 25
 773 004c 22F08002 		bic	r2, r2, #128
 774 0050 5A61     		str	r2, [r3, #20]
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
ARM GAS  /tmp/ccdGnCH8.s 			page 24


 775              		.loc 1 538 13
 776 0052 7B68     		ldr	r3, [r7, #4]
 777 0054 1B6C     		ldr	r3, [r3, #64]
 778              		.loc 1 538 7
 779 0056 002B     		cmp	r3, #0
 780 0058 03D1     		bne	.L28
 781              		.loc 1 538 53 discriminator 1
 782 005a 7B68     		ldr	r3, [r7, #4]
 783 005c 9B6C     		ldr	r3, [r3, #72]
 784              		.loc 1 538 45 discriminator 1
 785 005e 002B     		cmp	r3, #0
 786 0060 07D0     		beq	.L29
 787              	.L28:
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 788              		.loc 1 540 11
 789 0062 7B68     		ldr	r3, [r7, #4]
 790 0064 1B68     		ldr	r3, [r3]
 791              		.loc 1 540 27
 792 0066 1A68     		ldr	r2, [r3]
 793              		.loc 1 540 11
 794 0068 7B68     		ldr	r3, [r7, #4]
 795 006a 1B68     		ldr	r3, [r3]
 796              		.loc 1 540 27
 797 006c 22F00802 		bic	r2, r2, #8
 798 0070 1A60     		str	r2, [r3]
 799              	.L29:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 800              		.loc 1 544 5
 801 0072 7B68     		ldr	r3, [r7, #4]
 802 0074 1B68     		ldr	r3, [r3]
 803 0076 1A68     		ldr	r2, [r3]
 804 0078 7B68     		ldr	r3, [r7, #4]
 805 007a 1B68     		ldr	r3, [r3]
 806 007c 22F00102 		bic	r2, r2, #1
 807 0080 1A60     		str	r2, [r3]
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 808              		.loc 1 547 10
 809 0082 13E0     		b	.L30
 810              	.L31:
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 811              		.loc 1 550 11
 812 0084 FFF7FEFF 		bl	HAL_GetTick
 813 0088 0246     		mov	r2, r0
 814              		.loc 1 550 25
 815 008a BB68     		ldr	r3, [r7, #8]
 816 008c D31A     		subs	r3, r2, r3
 817              		.loc 1 550 9
 818 008e 052B     		cmp	r3, #5
 819 0090 0CD9     		bls	.L30
ARM GAS  /tmp/ccdGnCH8.s 			page 25


 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 820              		.loc 1 553 25
 821 0092 7B68     		ldr	r3, [r7, #4]
 822 0094 2022     		movs	r2, #32
 823 0096 5A65     		str	r2, [r3, #84]
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 824              		.loc 1 556 9
 825 0098 7B68     		ldr	r3, [r7, #4]
 826 009a 0022     		movs	r2, #0
 827 009c 83F83420 		strb	r2, [r3, #52]
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 828              		.loc 1 559 21
 829 00a0 7B68     		ldr	r3, [r7, #4]
 830 00a2 0322     		movs	r2, #3
 831 00a4 83F83520 		strb	r2, [r3, #53]
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 832              		.loc 1 561 16
 833 00a8 0323     		movs	r3, #3
 834 00aa 15E0     		b	.L27
 835              	.L30:
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 836              		.loc 1 547 16
 837 00ac 7B68     		ldr	r3, [r7, #4]
 838 00ae 1B68     		ldr	r3, [r3]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 839              		.loc 1 547 26
 840 00b0 1B68     		ldr	r3, [r3]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 841              		.loc 1 547 31
 842 00b2 03F00103 		and	r3, r3, #1
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 843              		.loc 1 547 10
 844 00b6 002B     		cmp	r3, #0
 845 00b8 E4D1     		bne	.L31
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 846              		.loc 1 566 31
 847 00ba 7B68     		ldr	r3, [r7, #4]
 848 00bc DB6D     		ldr	r3, [r3, #92]
 849              		.loc 1 566 24
 850 00be 3F22     		movs	r2, #63
 851 00c0 9A40     		lsls	r2, r2, r3
 852              		.loc 1 566 16
 853 00c2 FB68     		ldr	r3, [r7, #12]
 854 00c4 9A60     		str	r2, [r3, #8]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccdGnCH8.s 			page 26


 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 855              		.loc 1 569 5
 856 00c6 7B68     		ldr	r3, [r7, #4]
 857 00c8 0022     		movs	r2, #0
 858 00ca 83F83420 		strb	r2, [r3, #52]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 859              		.loc 1 572 17
 860 00ce 7B68     		ldr	r3, [r7, #4]
 861 00d0 0122     		movs	r2, #1
 862 00d2 83F83520 		strb	r2, [r3, #53]
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 863              		.loc 1 574 10
 864 00d6 0023     		movs	r3, #0
 865              	.L27:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 866              		.loc 1 575 1
 867 00d8 1846     		mov	r0, r3
 868 00da 1037     		adds	r7, r7, #16
 869              	.LCFI23:
 870              		.cfi_def_cfa_offset 8
 871 00dc BD46     		mov	sp, r7
 872              	.LCFI24:
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 00de 80BD     		pop	{r7, pc}
 876              		.cfi_endproc
 877              	.LFE145:
 879              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 880              		.align	1
 881              		.global	HAL_DMA_Abort_IT
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv5-d16
 887              	HAL_DMA_Abort_IT:
 888              	.LFB146:
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 889              		.loc 1 584 1
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 8
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894 0000 80B4     		push	{r7}
 895              	.LCFI25:
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
ARM GAS  /tmp/ccdGnCH8.s 			page 27


 898 0002 83B0     		sub	sp, sp, #12
 899              	.LCFI26:
 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              	.LCFI27:
 903              		.cfi_def_cfa_register 7
 904 0006 7860     		str	r0, [r7, #4]
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 905              		.loc 1 585 10
 906 0008 7B68     		ldr	r3, [r7, #4]
 907 000a 93F83530 		ldrb	r3, [r3, #53]
 908 000e DBB2     		uxtb	r3, r3
 909              		.loc 1 585 5
 910 0010 022B     		cmp	r3, #2
 911 0012 04D0     		beq	.L33
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 912              		.loc 1 587 21
 913 0014 7B68     		ldr	r3, [r7, #4]
 914 0016 8022     		movs	r2, #128
 915 0018 5A65     		str	r2, [r3, #84]
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 916              		.loc 1 588 12
 917 001a 0123     		movs	r3, #1
 918 001c 0CE0     		b	.L34
 919              	.L33:
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 920              		.loc 1 593 17
 921 001e 7B68     		ldr	r3, [r7, #4]
 922 0020 0522     		movs	r2, #5
 923 0022 83F83520 		strb	r2, [r3, #53]
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 924              		.loc 1 596 5
 925 0026 7B68     		ldr	r3, [r7, #4]
 926 0028 1B68     		ldr	r3, [r3]
 927 002a 1A68     		ldr	r2, [r3]
 928 002c 7B68     		ldr	r3, [r7, #4]
 929 002e 1B68     		ldr	r3, [r3]
 930 0030 22F00102 		bic	r2, r2, #1
 931 0034 1A60     		str	r2, [r3]
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 932              		.loc 1 599 10
 933 0036 0023     		movs	r3, #0
 934              	.L34:
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 935              		.loc 1 600 1
 936 0038 1846     		mov	r0, r3
 937 003a 0C37     		adds	r7, r7, #12
 938              	.LCFI28:
ARM GAS  /tmp/ccdGnCH8.s 			page 28


 939              		.cfi_def_cfa_offset 4
 940 003c BD46     		mov	sp, r7
 941              	.LCFI29:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 003e 5DF8047B 		ldr	r7, [sp], #4
 945              	.LCFI30:
 946              		.cfi_restore 7
 947              		.cfi_def_cfa_offset 0
 948 0042 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE146:
 952              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_DMA_PollForTransfer
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv5-d16
 960              	HAL_DMA_PollForTransfer:
 961              	.LFB147:
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommended to use the IT mo
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 962              		.loc 1 614 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 40
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI31:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 8AB0     		sub	sp, sp, #40
 972              	.LCFI32:
 973              		.cfi_def_cfa_offset 48
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI33:
 976              		.cfi_def_cfa_register 7
 977 0006 F860     		str	r0, [r7, #12]
 978 0008 0B46     		mov	r3, r1
 979 000a 7A60     		str	r2, [r7, #4]
 980 000c FB72     		strb	r3, [r7, #11]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 981              		.loc 1 615 21
 982 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccdGnCH8.s 			page 29


 983 0010 FB77     		strb	r3, [r7, #31]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 984              		.loc 1 617 24
 985 0012 FFF7FEFF 		bl	HAL_GetTick
 986 0016 B861     		str	r0, [r7, #24]
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 987              		.loc 1 623 32
 988 0018 FB68     		ldr	r3, [r7, #12]
 989 001a 93F83530 		ldrb	r3, [r3, #53]
 990 001e DBB2     		uxtb	r3, r3
 991              		.loc 1 623 5
 992 0020 022B     		cmp	r3, #2
 993 0022 08D0     		beq	.L36
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 994              		.loc 1 626 21
 995 0024 FB68     		ldr	r3, [r7, #12]
 996 0026 8022     		movs	r2, #128
 997 0028 5A65     		str	r2, [r3, #84]
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 998              		.loc 1 627 5
 999 002a FB68     		ldr	r3, [r7, #12]
 1000 002c 0022     		movs	r2, #0
 1001 002e 83F83420 		strb	r2, [r3, #52]
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 1002              		.loc 1 628 12
 1003 0032 0123     		movs	r3, #1
 1004 0034 BFE0     		b	.L37
 1005              	.L36:
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 1006              		.loc 1 632 12
 1007 0036 FB68     		ldr	r3, [r7, #12]
 1008 0038 1B68     		ldr	r3, [r3]
 1009              		.loc 1 632 22
 1010 003a 1B68     		ldr	r3, [r3]
 1011              		.loc 1 632 27
 1012 003c 03F48073 		and	r3, r3, #256
 1013              		.loc 1 632 6
 1014 0040 002B     		cmp	r3, #0
 1015 0042 05D0     		beq	.L38
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 1016              		.loc 1 634 21
 1017 0044 FB68     		ldr	r3, [r7, #12]
 1018 0046 4FF48072 		mov	r2, #256
 1019 004a 5A65     		str	r2, [r3, #84]
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccdGnCH8.s 			page 30


 1020              		.loc 1 635 12
 1021 004c 0123     		movs	r3, #1
 1022 004e B2E0     		b	.L37
 1023              	.L38:
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1024              		.loc 1 639 5
 1025 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1026 0052 002B     		cmp	r3, #0
 1027 0054 06D1     		bne	.L39
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1028              		.loc 1 642 46
 1029 0056 FB68     		ldr	r3, [r7, #12]
 1030 0058 DB6D     		ldr	r3, [r3, #92]
 1031              		.loc 1 642 20
 1032 005a 2022     		movs	r2, #32
 1033 005c 02FA03F3 		lsl	r3, r2, r3
 1034 0060 7B62     		str	r3, [r7, #36]
 1035 0062 05E0     		b	.L40
 1036              	.L39:
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1037              		.loc 1 647 46
 1038 0064 FB68     		ldr	r3, [r7, #12]
 1039 0066 DB6D     		ldr	r3, [r3, #92]
 1040              		.loc 1 647 20
 1041 0068 1022     		movs	r2, #16
 1042 006a 02FA03F3 		lsl	r3, r2, r3
 1043 006e 7B62     		str	r3, [r7, #36]
 1044              	.L40:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1045              		.loc 1 650 36
 1046 0070 FB68     		ldr	r3, [r7, #12]
 1047 0072 9B6D     		ldr	r3, [r3, #88]
 1048              		.loc 1 650 8
 1049 0074 7B61     		str	r3, [r7, #20]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1050              		.loc 1 651 10
 1051 0076 7B69     		ldr	r3, [r7, #20]
 1052 0078 1B68     		ldr	r3, [r3]
 1053 007a 3B62     		str	r3, [r7, #32]
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 1054              		.loc 1 653 8
 1055 007c 5AE0     		b	.L41
 1056              	.L47:
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
ARM GAS  /tmp/ccdGnCH8.s 			page 31


 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 1057              		.loc 1 656 7
 1058 007e 7B68     		ldr	r3, [r7, #4]
 1059 0080 B3F1FF3F 		cmp	r3, #-1
 1060 0084 17D0     		beq	.L42
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1061              		.loc 1 658 9
 1062 0086 7B68     		ldr	r3, [r7, #4]
 1063 0088 002B     		cmp	r3, #0
 1064 008a 07D0     		beq	.L43
 1065              		.loc 1 658 28 discriminator 1
 1066 008c FFF7FEFF 		bl	HAL_GetTick
 1067 0090 0246     		mov	r2, r0
 1068              		.loc 1 658 42 discriminator 1
 1069 0092 BB69     		ldr	r3, [r7, #24]
 1070 0094 D31A     		subs	r3, r2, r3
 1071              		.loc 1 658 24 discriminator 1
 1072 0096 7A68     		ldr	r2, [r7, #4]
 1073 0098 9A42     		cmp	r2, r3
 1074 009a 0CD2     		bcs	.L42
 1075              	.L43:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 1076              		.loc 1 661 25
 1077 009c FB68     		ldr	r3, [r7, #12]
 1078 009e 2022     		movs	r2, #32
 1079 00a0 5A65     		str	r2, [r3, #84]
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1080              		.loc 1 664 9
 1081 00a2 FB68     		ldr	r3, [r7, #12]
 1082 00a4 0022     		movs	r2, #0
 1083 00a6 83F83420 		strb	r2, [r3, #52]
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1084              		.loc 1 667 21
 1085 00aa FB68     		ldr	r3, [r7, #12]
 1086 00ac 0122     		movs	r2, #1
 1087 00ae 83F83520 		strb	r2, [r3, #53]
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 1088              		.loc 1 669 16
 1089 00b2 0323     		movs	r3, #3
 1090 00b4 7FE0     		b	.L37
 1091              	.L42:
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 1092              		.loc 1 674 12
 1093 00b6 7B69     		ldr	r3, [r7, #20]
 1094 00b8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdGnCH8.s 			page 32


 1095 00ba 3B62     		str	r3, [r7, #32]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1096              		.loc 1 676 43
 1097 00bc FB68     		ldr	r3, [r7, #12]
 1098 00be DB6D     		ldr	r3, [r3, #92]
 1099              		.loc 1 676 36
 1100 00c0 0822     		movs	r2, #8
 1101 00c2 9A40     		lsls	r2, r2, r3
 1102              		.loc 1 676 16
 1103 00c4 3B6A     		ldr	r3, [r7, #32]
 1104 00c6 1340     		ands	r3, r3, r2
 1105              		.loc 1 676 7
 1106 00c8 002B     		cmp	r3, #0
 1107 00ca 0BD0     		beq	.L44
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1108              		.loc 1 679 23
 1109 00cc FB68     		ldr	r3, [r7, #12]
 1110 00ce 5B6D     		ldr	r3, [r3, #84]
 1111 00d0 43F00102 		orr	r2, r3, #1
 1112 00d4 FB68     		ldr	r3, [r7, #12]
 1113 00d6 5A65     		str	r2, [r3, #84]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1114              		.loc 1 682 44
 1115 00d8 FB68     		ldr	r3, [r7, #12]
 1116 00da DB6D     		ldr	r3, [r3, #92]
 1117              		.loc 1 682 37
 1118 00dc 0822     		movs	r2, #8
 1119 00de 9A40     		lsls	r2, r2, r3
 1120              		.loc 1 682 18
 1121 00e0 7B69     		ldr	r3, [r7, #20]
 1122 00e2 9A60     		str	r2, [r3, #8]
 1123              	.L44:
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1124              		.loc 1 685 43
 1125 00e4 FB68     		ldr	r3, [r7, #12]
 1126 00e6 DB6D     		ldr	r3, [r3, #92]
 1127              		.loc 1 685 36
 1128 00e8 0122     		movs	r2, #1
 1129 00ea 9A40     		lsls	r2, r2, r3
 1130              		.loc 1 685 16
 1131 00ec 3B6A     		ldr	r3, [r7, #32]
 1132 00ee 1340     		ands	r3, r3, r2
 1133              		.loc 1 685 7
 1134 00f0 002B     		cmp	r3, #0
 1135 00f2 0BD0     		beq	.L45
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1136              		.loc 1 688 23
 1137 00f4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccdGnCH8.s 			page 33


 1138 00f6 5B6D     		ldr	r3, [r3, #84]
 1139 00f8 43F00202 		orr	r2, r3, #2
 1140 00fc FB68     		ldr	r3, [r7, #12]
 1141 00fe 5A65     		str	r2, [r3, #84]
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1142              		.loc 1 691 44
 1143 0100 FB68     		ldr	r3, [r7, #12]
 1144 0102 DB6D     		ldr	r3, [r3, #92]
 1145              		.loc 1 691 37
 1146 0104 0122     		movs	r2, #1
 1147 0106 9A40     		lsls	r2, r2, r3
 1148              		.loc 1 691 18
 1149 0108 7B69     		ldr	r3, [r7, #20]
 1150 010a 9A60     		str	r2, [r3, #8]
 1151              	.L45:
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1152              		.loc 1 694 44
 1153 010c FB68     		ldr	r3, [r7, #12]
 1154 010e DB6D     		ldr	r3, [r3, #92]
 1155              		.loc 1 694 37
 1156 0110 0422     		movs	r2, #4
 1157 0112 9A40     		lsls	r2, r2, r3
 1158              		.loc 1 694 16
 1159 0114 3B6A     		ldr	r3, [r7, #32]
 1160 0116 1340     		ands	r3, r3, r2
 1161              		.loc 1 694 7
 1162 0118 002B     		cmp	r3, #0
 1163 011a 0BD0     		beq	.L41
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1164              		.loc 1 697 23
 1165 011c FB68     		ldr	r3, [r7, #12]
 1166 011e 5B6D     		ldr	r3, [r3, #84]
 1167 0120 43F00402 		orr	r2, r3, #4
 1168 0124 FB68     		ldr	r3, [r7, #12]
 1169 0126 5A65     		str	r2, [r3, #84]
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1170              		.loc 1 700 45
 1171 0128 FB68     		ldr	r3, [r7, #12]
 1172 012a DB6D     		ldr	r3, [r3, #92]
 1173              		.loc 1 700 38
 1174 012c 0422     		movs	r2, #4
 1175 012e 9A40     		lsls	r2, r2, r3
 1176              		.loc 1 700 18
 1177 0130 7B69     		ldr	r3, [r7, #20]
 1178 0132 9A60     		str	r2, [r3, #8]
 1179              	.L41:
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1180              		.loc 1 653 18
 1181 0134 3A6A     		ldr	r2, [r7, #32]
ARM GAS  /tmp/ccdGnCH8.s 			page 34


 1182 0136 7B6A     		ldr	r3, [r7, #36]
 1183 0138 1340     		ands	r3, r3, r2
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1184              		.loc 1 653 8
 1185 013a 002B     		cmp	r3, #0
 1186 013c 05D1     		bne	.L46
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1187              		.loc 1 653 55 discriminator 1
 1188 013e FB68     		ldr	r3, [r7, #12]
 1189 0140 5B6D     		ldr	r3, [r3, #84]
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1190              		.loc 1 653 67 discriminator 1
 1191 0142 03F00103 		and	r3, r3, #1
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1192              		.loc 1 653 46 discriminator 1
 1193 0146 002B     		cmp	r3, #0
 1194 0148 99D0     		beq	.L47
 1195              	.L46:
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1196              		.loc 1 704 10
 1197 014a FB68     		ldr	r3, [r7, #12]
 1198 014c 5B6D     		ldr	r3, [r3, #84]
 1199              		.loc 1 704 5
 1200 014e 002B     		cmp	r3, #0
 1201 0150 18D0     		beq	.L48
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1202              		.loc 1 706 13
 1203 0152 FB68     		ldr	r3, [r7, #12]
 1204 0154 5B6D     		ldr	r3, [r3, #84]
 1205              		.loc 1 706 25
 1206 0156 03F00103 		and	r3, r3, #1
 1207              		.loc 1 706 7
 1208 015a 002B     		cmp	r3, #0
 1209 015c 12D0     		beq	.L48
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1210              		.loc 1 708 7
 1211 015e F868     		ldr	r0, [r7, #12]
 1212 0160 FFF7FEFF 		bl	HAL_DMA_Abort
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1213              		.loc 1 711 65
 1214 0164 FB68     		ldr	r3, [r7, #12]
 1215 0166 DB6D     		ldr	r3, [r3, #92]
 1216              		.loc 1 711 58
 1217 0168 3022     		movs	r2, #48
 1218 016a 9A40     		lsls	r2, r2, r3
 1219              		.loc 1 711 18
 1220 016c 7B69     		ldr	r3, [r7, #20]
 1221 016e 9A60     		str	r2, [r3, #8]
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccdGnCH8.s 			page 35


 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1222              		.loc 1 714 7
 1223 0170 FB68     		ldr	r3, [r7, #12]
 1224 0172 0022     		movs	r2, #0
 1225 0174 83F83420 		strb	r2, [r3, #52]
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1226              		.loc 1 717 18
 1227 0178 FB68     		ldr	r3, [r7, #12]
 1228 017a 0122     		movs	r2, #1
 1229 017c 83F83520 		strb	r2, [r3, #53]
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 1230              		.loc 1 719 14
 1231 0180 0123     		movs	r3, #1
 1232 0182 18E0     		b	.L37
 1233              	.L48:
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1234              		.loc 1 724 5
 1235 0184 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1236 0186 002B     		cmp	r3, #0
 1237 0188 0ED1     		bne	.L49
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1238              		.loc 1 727 63
 1239 018a FB68     		ldr	r3, [r7, #12]
 1240 018c DB6D     		ldr	r3, [r3, #92]
 1241              		.loc 1 727 56
 1242 018e 3022     		movs	r2, #48
 1243 0190 9A40     		lsls	r2, r2, r3
 1244              		.loc 1 727 16
 1245 0192 7B69     		ldr	r3, [r7, #20]
 1246 0194 9A60     		str	r2, [r3, #8]
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1247              		.loc 1 730 5
 1248 0196 FB68     		ldr	r3, [r7, #12]
 1249 0198 0022     		movs	r2, #0
 1250 019a 83F83420 		strb	r2, [r3, #52]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1251              		.loc 1 732 17
 1252 019e FB68     		ldr	r3, [r7, #12]
 1253 01a0 0122     		movs	r2, #1
 1254 01a2 83F83520 		strb	r2, [r3, #53]
 1255 01a6 05E0     		b	.L50
 1256              	.L49:
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccdGnCH8.s 			page 36


 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer flag */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1257              		.loc 1 737 44
 1258 01a8 FB68     		ldr	r3, [r7, #12]
 1259 01aa DB6D     		ldr	r3, [r3, #92]
 1260              		.loc 1 737 37
 1261 01ac 1022     		movs	r2, #16
 1262 01ae 9A40     		lsls	r2, r2, r3
 1263              		.loc 1 737 16
 1264 01b0 7B69     		ldr	r3, [r7, #20]
 1265 01b2 9A60     		str	r2, [r3, #8]
 1266              	.L50:
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1267              		.loc 1 740 10
 1268 01b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1269              	.L37:
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1270              		.loc 1 741 1
 1271 01b6 1846     		mov	r0, r3
 1272 01b8 2837     		adds	r7, r7, #40
 1273              	.LCFI34:
 1274              		.cfi_def_cfa_offset 8
 1275 01ba BD46     		mov	sp, r7
 1276              	.LCFI35:
 1277              		.cfi_def_cfa_register 13
 1278              		@ sp needed
 1279 01bc 80BD     		pop	{r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE147:
 1283              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1284              		.align	1
 1285              		.global	HAL_DMA_IRQHandler
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.fpu fpv5-d16
 1291              	HAL_DMA_IRQHandler:
 1292              	.LFB148:
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1293              		.loc 1 750 1
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 24
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              	.LCFI36:
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
ARM GAS  /tmp/ccdGnCH8.s 			page 37


 1301              		.cfi_offset 14, -4
 1302 0002 86B0     		sub	sp, sp, #24
 1303              	.LCFI37:
 1304              		.cfi_def_cfa_offset 32
 1305 0004 00AF     		add	r7, sp, #0
 1306              	.LCFI38:
 1307              		.cfi_def_cfa_register 7
 1308 0006 7860     		str	r0, [r7, #4]
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 1309              		.loc 1 752 17
 1310 0008 0023     		movs	r3, #0
 1311 000a BB60     		str	r3, [r7, #8]
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1312              		.loc 1 753 38
 1313 000c 924B     		ldr	r3, .L74
 1314 000e 1B68     		ldr	r3, [r3]
 1315              		.loc 1 753 12
 1316 0010 924A     		ldr	r2, .L74+4
 1317 0012 A2FB0323 		umull	r2, r3, r2, r3
 1318 0016 9B0A     		lsrs	r3, r3, #10
 1319 0018 7B61     		str	r3, [r7, #20]
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1320              		.loc 1 756 56
 1321 001a 7B68     		ldr	r3, [r7, #4]
 1322 001c 9B6D     		ldr	r3, [r3, #88]
 1323              		.loc 1 756 23
 1324 001e 3B61     		str	r3, [r7, #16]
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1325              		.loc 1 758 10
 1326 0020 3B69     		ldr	r3, [r7, #16]
 1327 0022 1B68     		ldr	r3, [r3]
 1328 0024 FB60     		str	r3, [r7, #12]
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1329              		.loc 1 761 42
 1330 0026 7B68     		ldr	r3, [r7, #4]
 1331 0028 DB6D     		ldr	r3, [r3, #92]
 1332              		.loc 1 761 35
 1333 002a 0822     		movs	r2, #8
 1334 002c 9A40     		lsls	r2, r2, r3
 1335              		.loc 1 761 15
 1336 002e FB68     		ldr	r3, [r7, #12]
 1337 0030 1340     		ands	r3, r3, r2
 1338              		.loc 1 761 6
 1339 0032 002B     		cmp	r3, #0
 1340 0034 1AD0     		beq	.L52
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1341              		.loc 1 763 8
 1342 0036 7B68     		ldr	r3, [r7, #4]
 1343 0038 1B68     		ldr	r3, [r3]
 1344 003a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdGnCH8.s 			page 38


 1345 003c 03F00403 		and	r3, r3, #4
 1346              		.loc 1 763 7
 1347 0040 002B     		cmp	r3, #0
 1348 0042 13D0     		beq	.L52
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1349              		.loc 1 766 11
 1350 0044 7B68     		ldr	r3, [r7, #4]
 1351 0046 1B68     		ldr	r3, [r3]
 1352              		.loc 1 766 27
 1353 0048 1A68     		ldr	r2, [r3]
 1354              		.loc 1 766 11
 1355 004a 7B68     		ldr	r3, [r7, #4]
 1356 004c 1B68     		ldr	r3, [r3]
 1357              		.loc 1 766 27
 1358 004e 22F00402 		bic	r2, r2, #4
 1359 0052 1A60     		str	r2, [r3]
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1360              		.loc 1 769 44
 1361 0054 7B68     		ldr	r3, [r7, #4]
 1362 0056 DB6D     		ldr	r3, [r3, #92]
 1363              		.loc 1 769 37
 1364 0058 0822     		movs	r2, #8
 1365 005a 9A40     		lsls	r2, r2, r3
 1366              		.loc 1 769 18
 1367 005c 3B69     		ldr	r3, [r7, #16]
 1368 005e 9A60     		str	r2, [r3, #8]
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1369              		.loc 1 772 23
 1370 0060 7B68     		ldr	r3, [r7, #4]
 1371 0062 5B6D     		ldr	r3, [r3, #84]
 1372 0064 43F00102 		orr	r2, r3, #1
 1373 0068 7B68     		ldr	r3, [r7, #4]
 1374 006a 5A65     		str	r2, [r3, #84]
 1375              	.L52:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1376              		.loc 1 776 42
 1377 006c 7B68     		ldr	r3, [r7, #4]
 1378 006e DB6D     		ldr	r3, [r3, #92]
 1379              		.loc 1 776 35
 1380 0070 0122     		movs	r2, #1
 1381 0072 9A40     		lsls	r2, r2, r3
 1382              		.loc 1 776 15
 1383 0074 FB68     		ldr	r3, [r7, #12]
 1384 0076 1340     		ands	r3, r3, r2
 1385              		.loc 1 776 6
 1386 0078 002B     		cmp	r3, #0
 1387 007a 12D0     		beq	.L53
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccdGnCH8.s 			page 39


 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1388              		.loc 1 778 8
 1389 007c 7B68     		ldr	r3, [r7, #4]
 1390 007e 1B68     		ldr	r3, [r3]
 1391 0080 5B69     		ldr	r3, [r3, #20]
 1392 0082 03F08003 		and	r3, r3, #128
 1393              		.loc 1 778 7
 1394 0086 002B     		cmp	r3, #0
 1395 0088 0BD0     		beq	.L53
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1396              		.loc 1 781 44
 1397 008a 7B68     		ldr	r3, [r7, #4]
 1398 008c DB6D     		ldr	r3, [r3, #92]
 1399              		.loc 1 781 37
 1400 008e 0122     		movs	r2, #1
 1401 0090 9A40     		lsls	r2, r2, r3
 1402              		.loc 1 781 18
 1403 0092 3B69     		ldr	r3, [r7, #16]
 1404 0094 9A60     		str	r2, [r3, #8]
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1405              		.loc 1 784 23
 1406 0096 7B68     		ldr	r3, [r7, #4]
 1407 0098 5B6D     		ldr	r3, [r3, #84]
 1408 009a 43F00202 		orr	r2, r3, #2
 1409 009e 7B68     		ldr	r3, [r7, #4]
 1410 00a0 5A65     		str	r2, [r3, #84]
 1411              	.L53:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1412              		.loc 1 788 43
 1413 00a2 7B68     		ldr	r3, [r7, #4]
 1414 00a4 DB6D     		ldr	r3, [r3, #92]
 1415              		.loc 1 788 36
 1416 00a6 0422     		movs	r2, #4
 1417 00a8 9A40     		lsls	r2, r2, r3
 1418              		.loc 1 788 15
 1419 00aa FB68     		ldr	r3, [r7, #12]
 1420 00ac 1340     		ands	r3, r3, r2
 1421              		.loc 1 788 6
 1422 00ae 002B     		cmp	r3, #0
 1423 00b0 12D0     		beq	.L54
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1424              		.loc 1 790 8
 1425 00b2 7B68     		ldr	r3, [r7, #4]
 1426 00b4 1B68     		ldr	r3, [r3]
 1427 00b6 1B68     		ldr	r3, [r3]
 1428 00b8 03F00203 		and	r3, r3, #2
 1429              		.loc 1 790 7
 1430 00bc 002B     		cmp	r3, #0
 1431 00be 0BD0     		beq	.L54
ARM GAS  /tmp/ccdGnCH8.s 			page 40


 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1432              		.loc 1 793 45
 1433 00c0 7B68     		ldr	r3, [r7, #4]
 1434 00c2 DB6D     		ldr	r3, [r3, #92]
 1435              		.loc 1 793 38
 1436 00c4 0422     		movs	r2, #4
 1437 00c6 9A40     		lsls	r2, r2, r3
 1438              		.loc 1 793 18
 1439 00c8 3B69     		ldr	r3, [r7, #16]
 1440 00ca 9A60     		str	r2, [r3, #8]
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1441              		.loc 1 796 23
 1442 00cc 7B68     		ldr	r3, [r7, #4]
 1443 00ce 5B6D     		ldr	r3, [r3, #84]
 1444 00d0 43F00402 		orr	r2, r3, #4
 1445 00d4 7B68     		ldr	r3, [r7, #4]
 1446 00d6 5A65     		str	r2, [r3, #84]
 1447              	.L54:
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1448              		.loc 1 800 42
 1449 00d8 7B68     		ldr	r3, [r7, #4]
 1450 00da DB6D     		ldr	r3, [r3, #92]
 1451              		.loc 1 800 35
 1452 00dc 1022     		movs	r2, #16
 1453 00de 9A40     		lsls	r2, r2, r3
 1454              		.loc 1 800 15
 1455 00e0 FB68     		ldr	r3, [r7, #12]
 1456 00e2 1340     		ands	r3, r3, r2
 1457              		.loc 1 800 6
 1458 00e4 002B     		cmp	r3, #0
 1459 00e6 43D0     		beq	.L55
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1460              		.loc 1 802 8
 1461 00e8 7B68     		ldr	r3, [r7, #4]
 1462 00ea 1B68     		ldr	r3, [r3]
 1463 00ec 1B68     		ldr	r3, [r3]
 1464 00ee 03F00803 		and	r3, r3, #8
 1465              		.loc 1 802 7
 1466 00f2 002B     		cmp	r3, #0
 1467 00f4 3CD0     		beq	.L55
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1468              		.loc 1 805 44
 1469 00f6 7B68     		ldr	r3, [r7, #4]
 1470 00f8 DB6D     		ldr	r3, [r3, #92]
 1471              		.loc 1 805 37
 1472 00fa 1022     		movs	r2, #16
 1473 00fc 9A40     		lsls	r2, r2, r3
ARM GAS  /tmp/ccdGnCH8.s 			page 41


 1474              		.loc 1 805 18
 1475 00fe 3B69     		ldr	r3, [r7, #16]
 1476 0100 9A60     		str	r2, [r3, #8]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1477              		.loc 1 808 16
 1478 0102 7B68     		ldr	r3, [r7, #4]
 1479 0104 1B68     		ldr	r3, [r3]
 1480              		.loc 1 808 26
 1481 0106 1B68     		ldr	r3, [r3]
 1482              		.loc 1 808 32
 1483 0108 03F48023 		and	r3, r3, #262144
 1484              		.loc 1 808 9
 1485 010c 002B     		cmp	r3, #0
 1486 010e 18D0     		beq	.L56
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1487              		.loc 1 811 17
 1488 0110 7B68     		ldr	r3, [r7, #4]
 1489 0112 1B68     		ldr	r3, [r3]
 1490              		.loc 1 811 27
 1491 0114 1B68     		ldr	r3, [r3]
 1492              		.loc 1 811 32
 1493 0116 03F40023 		and	r3, r3, #524288
 1494              		.loc 1 811 11
 1495 011a 002B     		cmp	r3, #0
 1496 011c 08D1     		bne	.L57
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1497              		.loc 1 813 18
 1498 011e 7B68     		ldr	r3, [r7, #4]
 1499 0120 1B6C     		ldr	r3, [r3, #64]
 1500              		.loc 1 813 13
 1501 0122 002B     		cmp	r3, #0
 1502 0124 24D0     		beq	.L55
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1503              		.loc 1 816 17
 1504 0126 7B68     		ldr	r3, [r7, #4]
 1505 0128 1B6C     		ldr	r3, [r3, #64]
 1506              		.loc 1 816 13
 1507 012a 7868     		ldr	r0, [r7, #4]
 1508 012c 9847     		blx	r3
 1509              	.LVL0:
 1510 012e 1FE0     		b	.L55
 1511              	.L57:
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1512              		.loc 1 822 18
 1513 0130 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 42


 1514 0132 9B6C     		ldr	r3, [r3, #72]
 1515              		.loc 1 822 13
 1516 0134 002B     		cmp	r3, #0
 1517 0136 1BD0     		beq	.L55
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1518              		.loc 1 825 17
 1519 0138 7B68     		ldr	r3, [r7, #4]
 1520 013a 9B6C     		ldr	r3, [r3, #72]
 1521              		.loc 1 825 13
 1522 013c 7868     		ldr	r0, [r7, #4]
 1523 013e 9847     		blx	r3
 1524              	.LVL1:
 1525 0140 16E0     		b	.L55
 1526              	.L56:
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1527              		.loc 1 832 17
 1528 0142 7B68     		ldr	r3, [r7, #4]
 1529 0144 1B68     		ldr	r3, [r3]
 1530              		.loc 1 832 27
 1531 0146 1B68     		ldr	r3, [r3]
 1532              		.loc 1 832 32
 1533 0148 03F48073 		and	r3, r3, #256
 1534              		.loc 1 832 11
 1535 014c 002B     		cmp	r3, #0
 1536 014e 07D1     		bne	.L58
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1537              		.loc 1 835 15
 1538 0150 7B68     		ldr	r3, [r7, #4]
 1539 0152 1B68     		ldr	r3, [r3]
 1540              		.loc 1 835 31
 1541 0154 1A68     		ldr	r2, [r3]
 1542              		.loc 1 835 15
 1543 0156 7B68     		ldr	r3, [r7, #4]
 1544 0158 1B68     		ldr	r3, [r3]
 1545              		.loc 1 835 31
 1546 015a 22F00802 		bic	r2, r2, #8
 1547 015e 1A60     		str	r2, [r3]
 1548              	.L58:
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1549              		.loc 1 838 16
 1550 0160 7B68     		ldr	r3, [r7, #4]
 1551 0162 1B6C     		ldr	r3, [r3, #64]
 1552              		.loc 1 838 11
 1553 0164 002B     		cmp	r3, #0
 1554 0166 03D0     		beq	.L55
ARM GAS  /tmp/ccdGnCH8.s 			page 43


 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1555              		.loc 1 841 15
 1556 0168 7B68     		ldr	r3, [r7, #4]
 1557 016a 1B6C     		ldr	r3, [r3, #64]
 1558              		.loc 1 841 11
 1559 016c 7868     		ldr	r0, [r7, #4]
 1560 016e 9847     		blx	r3
 1561              	.LVL2:
 1562              	.L55:
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1563              		.loc 1 847 42
 1564 0170 7B68     		ldr	r3, [r7, #4]
 1565 0172 DB6D     		ldr	r3, [r3, #92]
 1566              		.loc 1 847 35
 1567 0174 2022     		movs	r2, #32
 1568 0176 9A40     		lsls	r2, r2, r3
 1569              		.loc 1 847 15
 1570 0178 FB68     		ldr	r3, [r7, #12]
 1571 017a 1340     		ands	r3, r3, r2
 1572              		.loc 1 847 6
 1573 017c 002B     		cmp	r3, #0
 1574 017e 00F08E80 		beq	.L59
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1575              		.loc 1 849 8
 1576 0182 7B68     		ldr	r3, [r7, #4]
 1577 0184 1B68     		ldr	r3, [r3]
 1578 0186 1B68     		ldr	r3, [r3]
 1579 0188 03F01003 		and	r3, r3, #16
 1580              		.loc 1 849 7
 1581 018c 002B     		cmp	r3, #0
 1582 018e 00F08680 		beq	.L59
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1583              		.loc 1 852 44
 1584 0192 7B68     		ldr	r3, [r7, #4]
 1585 0194 DB6D     		ldr	r3, [r3, #92]
 1586              		.loc 1 852 37
 1587 0196 2022     		movs	r2, #32
 1588 0198 9A40     		lsls	r2, r2, r3
 1589              		.loc 1 852 18
 1590 019a 3B69     		ldr	r3, [r7, #16]
 1591 019c 9A60     		str	r2, [r3, #8]
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1592              		.loc 1 854 37
 1593 019e 7B68     		ldr	r3, [r7, #4]
 1594 01a0 93F83530 		ldrb	r3, [r3, #53]
 1595 01a4 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccdGnCH8.s 			page 44


 1596              		.loc 1 854 9
 1597 01a6 052B     		cmp	r3, #5
 1598 01a8 36D1     		bne	.L60
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1599              		.loc 1 857 13
 1600 01aa 7B68     		ldr	r3, [r7, #4]
 1601 01ac 1B68     		ldr	r3, [r3]
 1602              		.loc 1 857 29
 1603 01ae 1A68     		ldr	r2, [r3]
 1604              		.loc 1 857 13
 1605 01b0 7B68     		ldr	r3, [r7, #4]
 1606 01b2 1B68     		ldr	r3, [r3]
 1607              		.loc 1 857 29
 1608 01b4 22F01602 		bic	r2, r2, #22
 1609 01b8 1A60     		str	r2, [r3]
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1610              		.loc 1 858 13
 1611 01ba 7B68     		ldr	r3, [r7, #4]
 1612 01bc 1B68     		ldr	r3, [r3]
 1613              		.loc 1 858 29
 1614 01be 5A69     		ldr	r2, [r3, #20]
 1615              		.loc 1 858 13
 1616 01c0 7B68     		ldr	r3, [r7, #4]
 1617 01c2 1B68     		ldr	r3, [r3]
 1618              		.loc 1 858 29
 1619 01c4 22F08002 		bic	r2, r2, #128
 1620 01c8 5A61     		str	r2, [r3, #20]
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1621              		.loc 1 860 17
 1622 01ca 7B68     		ldr	r3, [r7, #4]
 1623 01cc 1B6C     		ldr	r3, [r3, #64]
 1624              		.loc 1 860 11
 1625 01ce 002B     		cmp	r3, #0
 1626 01d0 03D1     		bne	.L61
 1627              		.loc 1 860 57 discriminator 1
 1628 01d2 7B68     		ldr	r3, [r7, #4]
 1629 01d4 9B6C     		ldr	r3, [r3, #72]
 1630              		.loc 1 860 49 discriminator 1
 1631 01d6 002B     		cmp	r3, #0
 1632 01d8 07D0     		beq	.L62
 1633              	.L61:
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1634              		.loc 1 862 15
 1635 01da 7B68     		ldr	r3, [r7, #4]
 1636 01dc 1B68     		ldr	r3, [r3]
 1637              		.loc 1 862 31
 1638 01de 1A68     		ldr	r2, [r3]
 1639              		.loc 1 862 15
 1640 01e0 7B68     		ldr	r3, [r7, #4]
 1641 01e2 1B68     		ldr	r3, [r3]
 1642              		.loc 1 862 31
 1643 01e4 22F00802 		bic	r2, r2, #8
 1644 01e8 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccdGnCH8.s 			page 45


 1645              	.L62:
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1646              		.loc 1 866 35
 1647 01ea 7B68     		ldr	r3, [r7, #4]
 1648 01ec DB6D     		ldr	r3, [r3, #92]
 1649              		.loc 1 866 28
 1650 01ee 3F22     		movs	r2, #63
 1651 01f0 9A40     		lsls	r2, r2, r3
 1652              		.loc 1 866 20
 1653 01f2 3B69     		ldr	r3, [r7, #16]
 1654 01f4 9A60     		str	r2, [r3, #8]
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1655              		.loc 1 869 9
 1656 01f6 7B68     		ldr	r3, [r7, #4]
 1657 01f8 0022     		movs	r2, #0
 1658 01fa 83F83420 		strb	r2, [r3, #52]
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1659              		.loc 1 872 21
 1660 01fe 7B68     		ldr	r3, [r7, #4]
 1661 0200 0122     		movs	r2, #1
 1662 0202 83F83520 		strb	r2, [r3, #53]
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1663              		.loc 1 874 16
 1664 0206 7B68     		ldr	r3, [r7, #4]
 1665 0208 1B6D     		ldr	r3, [r3, #80]
 1666              		.loc 1 874 11
 1667 020a 002B     		cmp	r3, #0
 1668 020c 7DD0     		beq	.L72
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1669              		.loc 1 876 15
 1670 020e 7B68     		ldr	r3, [r7, #4]
 1671 0210 1B6D     		ldr	r3, [r3, #80]
 1672              		.loc 1 876 11
 1673 0212 7868     		ldr	r0, [r7, #4]
 1674 0214 9847     		blx	r3
 1675              	.LVL3:
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 1676              		.loc 1 878 9
 1677 0216 78E0     		b	.L72
 1678              	.L60:
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1679              		.loc 1 881 16
 1680 0218 7B68     		ldr	r3, [r7, #4]
 1681 021a 1B68     		ldr	r3, [r3]
 1682              		.loc 1 881 26
ARM GAS  /tmp/ccdGnCH8.s 			page 46


 1683 021c 1B68     		ldr	r3, [r3]
 1684              		.loc 1 881 32
 1685 021e 03F48023 		and	r3, r3, #262144
 1686              		.loc 1 881 9
 1687 0222 002B     		cmp	r3, #0
 1688 0224 1CD0     		beq	.L65
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1689              		.loc 1 884 17
 1690 0226 7B68     		ldr	r3, [r7, #4]
 1691 0228 1B68     		ldr	r3, [r3]
 1692              		.loc 1 884 27
 1693 022a 1B68     		ldr	r3, [r3]
 1694              		.loc 1 884 32
 1695 022c 03F40023 		and	r3, r3, #524288
 1696              		.loc 1 884 11
 1697 0230 002B     		cmp	r3, #0
 1698 0232 08D1     		bne	.L66
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1699              		.loc 1 886 18
 1700 0234 7B68     		ldr	r3, [r7, #4]
 1701 0236 5B6C     		ldr	r3, [r3, #68]
 1702              		.loc 1 886 13
 1703 0238 002B     		cmp	r3, #0
 1704 023a 30D0     		beq	.L59
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1705              		.loc 1 889 17
 1706 023c 7B68     		ldr	r3, [r7, #4]
 1707 023e 5B6C     		ldr	r3, [r3, #68]
 1708              		.loc 1 889 13
 1709 0240 7868     		ldr	r0, [r7, #4]
 1710 0242 9847     		blx	r3
 1711              	.LVL4:
 1712 0244 2BE0     		b	.L59
 1713              	.L66:
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1714              		.loc 1 895 18
 1715 0246 7B68     		ldr	r3, [r7, #4]
 1716 0248 DB6B     		ldr	r3, [r3, #60]
 1717              		.loc 1 895 13
 1718 024a 002B     		cmp	r3, #0
 1719 024c 27D0     		beq	.L59
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1720              		.loc 1 898 17
 1721 024e 7B68     		ldr	r3, [r7, #4]
 1722 0250 DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccdGnCH8.s 			page 47


 1723              		.loc 1 898 13
 1724 0252 7868     		ldr	r0, [r7, #4]
 1725 0254 9847     		blx	r3
 1726              	.LVL5:
 1727 0256 22E0     		b	.L59
 1728              	.L75:
 1729              		.align	2
 1730              	.L74:
 1731 0258 00000000 		.word	SystemCoreClock
 1732 025c B5814E1B 		.word	458129845
 1733              	.L65:
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1734              		.loc 1 905 17
 1735 0260 7B68     		ldr	r3, [r7, #4]
 1736 0262 1B68     		ldr	r3, [r3]
 1737              		.loc 1 905 27
 1738 0264 1B68     		ldr	r3, [r3]
 1739              		.loc 1 905 32
 1740 0266 03F48073 		and	r3, r3, #256
 1741              		.loc 1 905 11
 1742 026a 002B     		cmp	r3, #0
 1743 026c 0FD1     		bne	.L67
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1744              		.loc 1 908 15
 1745 026e 7B68     		ldr	r3, [r7, #4]
 1746 0270 1B68     		ldr	r3, [r3]
 1747              		.loc 1 908 31
 1748 0272 1A68     		ldr	r2, [r3]
 1749              		.loc 1 908 15
 1750 0274 7B68     		ldr	r3, [r7, #4]
 1751 0276 1B68     		ldr	r3, [r3]
 1752              		.loc 1 908 31
 1753 0278 22F01002 		bic	r2, r2, #16
 1754 027c 1A60     		str	r2, [r3]
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1755              		.loc 1 911 11
 1756 027e 7B68     		ldr	r3, [r7, #4]
 1757 0280 0022     		movs	r2, #0
 1758 0282 83F83420 		strb	r2, [r3, #52]
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1759              		.loc 1 914 23
 1760 0286 7B68     		ldr	r3, [r7, #4]
 1761 0288 0122     		movs	r2, #1
 1762 028a 83F83520 		strb	r2, [r3, #53]
 1763              	.L67:
ARM GAS  /tmp/ccdGnCH8.s 			page 48


 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1764              		.loc 1 917 16
 1765 028e 7B68     		ldr	r3, [r7, #4]
 1766 0290 DB6B     		ldr	r3, [r3, #60]
 1767              		.loc 1 917 11
 1768 0292 002B     		cmp	r3, #0
 1769 0294 03D0     		beq	.L59
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1770              		.loc 1 920 15
 1771 0296 7B68     		ldr	r3, [r7, #4]
 1772 0298 DB6B     		ldr	r3, [r3, #60]
 1773              		.loc 1 920 11
 1774 029a 7868     		ldr	r0, [r7, #4]
 1775 029c 9847     		blx	r3
 1776              	.LVL6:
 1777              	.L59:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1778              		.loc 1 927 10
 1779 029e 7B68     		ldr	r3, [r7, #4]
 1780 02a0 5B6D     		ldr	r3, [r3, #84]
 1781              		.loc 1 927 5
 1782 02a2 002B     		cmp	r3, #0
 1783 02a4 32D0     		beq	.L51
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1784              		.loc 1 929 13
 1785 02a6 7B68     		ldr	r3, [r7, #4]
 1786 02a8 5B6D     		ldr	r3, [r3, #84]
 1787              		.loc 1 929 25
 1788 02aa 03F00103 		and	r3, r3, #1
 1789              		.loc 1 929 7
 1790 02ae 002B     		cmp	r3, #0
 1791 02b0 22D0     		beq	.L68
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1792              		.loc 1 931 19
 1793 02b2 7B68     		ldr	r3, [r7, #4]
 1794 02b4 0522     		movs	r2, #5
 1795 02b6 83F83520 		strb	r2, [r3, #53]
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1796              		.loc 1 934 7
 1797 02ba 7B68     		ldr	r3, [r7, #4]
 1798 02bc 1B68     		ldr	r3, [r3]
 1799 02be 1A68     		ldr	r2, [r3]
 1800 02c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 49


 1801 02c2 1B68     		ldr	r3, [r3]
 1802 02c4 22F00102 		bic	r2, r2, #1
 1803 02c8 1A60     		str	r2, [r3]
 1804              	.L71:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 1805              		.loc 1 938 13
 1806 02ca BB68     		ldr	r3, [r7, #8]
 1807 02cc 0133     		adds	r3, r3, #1
 1808              		.loc 1 938 12
 1809 02ce BB60     		str	r3, [r7, #8]
 1810 02d0 7A69     		ldr	r2, [r7, #20]
 1811 02d2 9A42     		cmp	r2, r3
 1812 02d4 07D3     		bcc	.L73
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1813              		.loc 1 943 18
 1814 02d6 7B68     		ldr	r3, [r7, #4]
 1815 02d8 1B68     		ldr	r3, [r3]
 1816              		.loc 1 943 28
 1817 02da 1B68     		ldr	r3, [r3]
 1818              		.loc 1 943 33
 1819 02dc 03F00103 		and	r3, r3, #1
 1820              		.loc 1 943 7
 1821 02e0 002B     		cmp	r3, #0
 1822 02e2 F2D1     		bne	.L71
 1823 02e4 00E0     		b	.L70
 1824              	.L73:
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1825              		.loc 1 940 11
 1826 02e6 00BF     		nop
 1827              	.L70:
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1828              		.loc 1 946 7
 1829 02e8 7B68     		ldr	r3, [r7, #4]
 1830 02ea 0022     		movs	r2, #0
 1831 02ec 83F83420 		strb	r2, [r3, #52]
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1832              		.loc 1 949 19
 1833 02f0 7B68     		ldr	r3, [r7, #4]
 1834 02f2 0122     		movs	r2, #1
 1835 02f4 83F83520 		strb	r2, [r3, #53]
 1836              	.L68:
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1837              		.loc 1 952 12
 1838 02f8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 50


 1839 02fa DB6C     		ldr	r3, [r3, #76]
 1840              		.loc 1 952 7
 1841 02fc 002B     		cmp	r3, #0
 1842 02fe 05D0     		beq	.L51
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1843              		.loc 1 955 11
 1844 0300 7B68     		ldr	r3, [r7, #4]
 1845 0302 DB6C     		ldr	r3, [r3, #76]
 1846              		.loc 1 955 7
 1847 0304 7868     		ldr	r0, [r7, #4]
 1848 0306 9847     		blx	r3
 1849              	.LVL7:
 1850 0308 00E0     		b	.L51
 1851              	.L72:
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 1852              		.loc 1 878 9
 1853 030a 00BF     		nop
 1854              	.L51:
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1855              		.loc 1 958 1
 1856 030c 1837     		adds	r7, r7, #24
 1857              	.LCFI39:
 1858              		.cfi_def_cfa_offset 8
 1859 030e BD46     		mov	sp, r7
 1860              	.LCFI40:
 1861              		.cfi_def_cfa_register 13
 1862              		@ sp needed
 1863 0310 80BD     		pop	{r7, pc}
 1864              		.cfi_endproc
 1865              	.LFE148:
 1867 0312 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1868              		.align	1
 1869              		.global	HAL_DMA_RegisterCallback
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu fpv5-d16
 1875              	HAL_DMA_RegisterCallback:
 1876              	.LFB149:
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifier
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1877              		.loc 1 971 1
ARM GAS  /tmp/ccdGnCH8.s 			page 51


 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 24
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881              		@ link register save eliminated.
 1882 0000 80B4     		push	{r7}
 1883              	.LCFI41:
 1884              		.cfi_def_cfa_offset 4
 1885              		.cfi_offset 7, -4
 1886 0002 87B0     		sub	sp, sp, #28
 1887              	.LCFI42:
 1888              		.cfi_def_cfa_offset 32
 1889 0004 00AF     		add	r7, sp, #0
 1890              	.LCFI43:
 1891              		.cfi_def_cfa_register 7
 1892 0006 F860     		str	r0, [r7, #12]
 1893 0008 0B46     		mov	r3, r1
 1894 000a 7A60     		str	r2, [r7, #4]
 1895 000c FB72     		strb	r3, [r7, #11]
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1896              		.loc 1 973 21
 1897 000e 0023     		movs	r3, #0
 1898 0010 FB75     		strb	r3, [r7, #23]
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1899              		.loc 1 976 3
 1900 0012 FB68     		ldr	r3, [r7, #12]
 1901 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1902 0018 012B     		cmp	r3, #1
 1903 001a 01D1     		bne	.L77
 1904              		.loc 1 976 3 is_stmt 0 discriminator 1
 1905 001c 0223     		movs	r3, #2
 1906 001e 3CE0     		b	.L78
 1907              	.L77:
 1908              		.loc 1 976 3 discriminator 2
 1909 0020 FB68     		ldr	r3, [r7, #12]
 1910 0022 0122     		movs	r2, #1
 1911 0024 83F83420 		strb	r2, [r3, #52]
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1912              		.loc 1 978 33 is_stmt 1 discriminator 2
 1913 0028 FB68     		ldr	r3, [r7, #12]
 1914 002a 93F83530 		ldrb	r3, [r3, #53]
 1915 002e DBB2     		uxtb	r3, r3
 1916              		.loc 1 978 5 discriminator 2
 1917 0030 012B     		cmp	r3, #1
 1918 0032 29D1     		bne	.L79
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 1919              		.loc 1 980 5
 1920 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1921 0036 052B     		cmp	r3, #5
 1922 0038 29D8     		bhi	.L90
 1923 003a 01A2     		adr	r2, .L82
 1924 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1925              		.p2align 2
ARM GAS  /tmp/ccdGnCH8.s 			page 52


 1926              	.L82:
 1927 0040 59000000 		.word	.L87+1
 1928 0044 61000000 		.word	.L86+1
 1929 0048 69000000 		.word	.L85+1
 1930 004c 71000000 		.word	.L84+1
 1931 0050 79000000 		.word	.L83+1
 1932 0054 81000000 		.word	.L81+1
 1933              		.p2align 1
 1934              	.L87:
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1935              		.loc 1 983 30
 1936 0058 FB68     		ldr	r3, [r7, #12]
 1937 005a 7A68     		ldr	r2, [r7, #4]
 1938 005c DA63     		str	r2, [r3, #60]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1939              		.loc 1 984 7
 1940 005e 17E0     		b	.L89
 1941              	.L86:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1942              		.loc 1 987 34
 1943 0060 FB68     		ldr	r3, [r7, #12]
 1944 0062 7A68     		ldr	r2, [r7, #4]
 1945 0064 1A64     		str	r2, [r3, #64]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1946              		.loc 1 988 7
 1947 0066 13E0     		b	.L89
 1948              	.L85:
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1949              		.loc 1 991 32
 1950 0068 FB68     		ldr	r3, [r7, #12]
 1951 006a 7A68     		ldr	r2, [r7, #4]
 1952 006c 5A64     		str	r2, [r3, #68]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1953              		.loc 1 992 7
 1954 006e 0FE0     		b	.L89
 1955              	.L84:
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1956              		.loc 1 995 36
 1957 0070 FB68     		ldr	r3, [r7, #12]
 1958 0072 7A68     		ldr	r2, [r7, #4]
 1959 0074 9A64     		str	r2, [r3, #72]
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1960              		.loc 1 996 7
 1961 0076 0BE0     		b	.L89
 1962              	.L83:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1963              		.loc 1 999 31
ARM GAS  /tmp/ccdGnCH8.s 			page 53


 1964 0078 FB68     		ldr	r3, [r7, #12]
 1965 007a 7A68     		ldr	r2, [r7, #4]
 1966 007c DA64     		str	r2, [r3, #76]
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1967              		.loc 1 1000 7
 1968 007e 07E0     		b	.L89
 1969              	.L81:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1970              		.loc 1 1003 31
 1971 0080 FB68     		ldr	r3, [r7, #12]
 1972 0082 7A68     		ldr	r2, [r7, #4]
 1973 0084 1A65     		str	r2, [r3, #80]
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1974              		.loc 1 1004 7
 1975 0086 03E0     		b	.L89
 1976              	.L79:
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
 1977              		.loc 1 1013 12
 1978 0088 0123     		movs	r3, #1
 1979 008a FB75     		strb	r3, [r7, #23]
 1980 008c 00E0     		b	.L89
 1981              	.L90:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1982              		.loc 1 1007 7
 1983 008e 00BF     		nop
 1984              	.L89:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1985              		.loc 1 1017 3
 1986 0090 FB68     		ldr	r3, [r7, #12]
 1987 0092 0022     		movs	r2, #0
 1988 0094 83F83420 		strb	r2, [r3, #52]
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1989              		.loc 1 1019 10
 1990 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1991              	.L78:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1992              		.loc 1 1020 1
 1993 009a 1846     		mov	r0, r3
 1994 009c 1C37     		adds	r7, r7, #28
 1995              	.LCFI44:
 1996              		.cfi_def_cfa_offset 4
 1997 009e BD46     		mov	sp, r7
 1998              	.LCFI45:
ARM GAS  /tmp/ccdGnCH8.s 			page 54


 1999              		.cfi_def_cfa_register 13
 2000              		@ sp needed
 2001 00a0 5DF8047B 		ldr	r7, [sp], #4
 2002              	.LCFI46:
 2003              		.cfi_restore 7
 2004              		.cfi_def_cfa_offset 0
 2005 00a4 7047     		bx	lr
 2006              		.cfi_endproc
 2007              	.LFE149:
 2009 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 2010              		.align	1
 2011              		.global	HAL_DMA_UnRegisterCallback
 2012              		.syntax unified
 2013              		.thumb
 2014              		.thumb_func
 2015              		.fpu fpv5-d16
 2017              	HAL_DMA_UnRegisterCallback:
 2018              	.LFB150:
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifier
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2019              		.loc 1 1031 1
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 16
 2022              		@ frame_needed = 1, uses_anonymous_args = 0
 2023              		@ link register save eliminated.
 2024 0000 80B4     		push	{r7}
 2025              	.LCFI47:
 2026              		.cfi_def_cfa_offset 4
 2027              		.cfi_offset 7, -4
 2028 0002 85B0     		sub	sp, sp, #20
 2029              	.LCFI48:
 2030              		.cfi_def_cfa_offset 24
 2031 0004 00AF     		add	r7, sp, #0
 2032              	.LCFI49:
 2033              		.cfi_def_cfa_register 7
 2034 0006 7860     		str	r0, [r7, #4]
 2035 0008 0B46     		mov	r3, r1
 2036 000a FB70     		strb	r3, [r7, #3]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2037              		.loc 1 1032 21
 2038 000c 0023     		movs	r3, #0
 2039 000e FB73     		strb	r3, [r7, #15]
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 2040              		.loc 1 1035 3
 2041 0010 7B68     		ldr	r3, [r7, #4]
 2042 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
ARM GAS  /tmp/ccdGnCH8.s 			page 55


 2043 0016 012B     		cmp	r3, #1
 2044 0018 01D1     		bne	.L92
 2045              		.loc 1 1035 3 is_stmt 0 discriminator 1
 2046 001a 0223     		movs	r3, #2
 2047 001c 53E0     		b	.L93
 2048              	.L92:
 2049              		.loc 1 1035 3 discriminator 2
 2050 001e 7B68     		ldr	r3, [r7, #4]
 2051 0020 0122     		movs	r2, #1
 2052 0022 83F83420 		strb	r2, [r3, #52]
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 2053              		.loc 1 1037 33 is_stmt 1 discriminator 2
 2054 0026 7B68     		ldr	r3, [r7, #4]
 2055 0028 93F83530 		ldrb	r3, [r3, #53]
 2056 002c DBB2     		uxtb	r3, r3
 2057              		.loc 1 1037 5 discriminator 2
 2058 002e 012B     		cmp	r3, #1
 2059 0030 42D1     		bne	.L94
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 2060              		.loc 1 1039 5
 2061 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2062 0034 062B     		cmp	r3, #6
 2063 0036 3CD8     		bhi	.L95
 2064 0038 01A2     		adr	r2, .L97
 2065 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2066 003e 00BF     		.p2align 2
 2067              	.L97:
 2068 0040 5D000000 		.word	.L103+1
 2069 0044 65000000 		.word	.L102+1
 2070 0048 6D000000 		.word	.L101+1
 2071 004c 75000000 		.word	.L100+1
 2072 0050 7D000000 		.word	.L99+1
 2073 0054 85000000 		.word	.L98+1
 2074 0058 8D000000 		.word	.L96+1
 2075              		.p2align 1
 2076              	.L103:
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 2077              		.loc 1 1042 30
 2078 005c 7B68     		ldr	r3, [r7, #4]
 2079 005e 0022     		movs	r2, #0
 2080 0060 DA63     		str	r2, [r3, #60]
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2081              		.loc 1 1043 7
 2082 0062 2BE0     		b	.L105
 2083              	.L102:
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 2084              		.loc 1 1046 34
 2085 0064 7B68     		ldr	r3, [r7, #4]
 2086 0066 0022     		movs	r2, #0
 2087 0068 1A64     		str	r2, [r3, #64]
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
ARM GAS  /tmp/ccdGnCH8.s 			page 56


 2088              		.loc 1 1047 7
 2089 006a 27E0     		b	.L105
 2090              	.L101:
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 2091              		.loc 1 1050 32
 2092 006c 7B68     		ldr	r3, [r7, #4]
 2093 006e 0022     		movs	r2, #0
 2094 0070 5A64     		str	r2, [r3, #68]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2095              		.loc 1 1051 7
 2096 0072 23E0     		b	.L105
 2097              	.L100:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 2098              		.loc 1 1054 36
 2099 0074 7B68     		ldr	r3, [r7, #4]
 2100 0076 0022     		movs	r2, #0
 2101 0078 9A64     		str	r2, [r3, #72]
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2102              		.loc 1 1055 7
 2103 007a 1FE0     		b	.L105
 2104              	.L99:
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 2105              		.loc 1 1058 31
 2106 007c 7B68     		ldr	r3, [r7, #4]
 2107 007e 0022     		movs	r2, #0
 2108 0080 DA64     		str	r2, [r3, #76]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2109              		.loc 1 1059 7
 2110 0082 1BE0     		b	.L105
 2111              	.L98:
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 2112              		.loc 1 1062 31
 2113 0084 7B68     		ldr	r3, [r7, #4]
 2114 0086 0022     		movs	r2, #0
 2115 0088 1A65     		str	r2, [r3, #80]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 2116              		.loc 1 1063 7
 2117 008a 17E0     		b	.L105
 2118              	.L96:
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 2119              		.loc 1 1066 30
 2120 008c 7B68     		ldr	r3, [r7, #4]
 2121 008e 0022     		movs	r2, #0
 2122 0090 DA63     		str	r2, [r3, #60]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 2123              		.loc 1 1067 34
 2124 0092 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccdGnCH8.s 			page 57


 2125 0094 0022     		movs	r2, #0
 2126 0096 1A64     		str	r2, [r3, #64]
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 2127              		.loc 1 1068 32
 2128 0098 7B68     		ldr	r3, [r7, #4]
 2129 009a 0022     		movs	r2, #0
 2130 009c 5A64     		str	r2, [r3, #68]
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 2131              		.loc 1 1069 36
 2132 009e 7B68     		ldr	r3, [r7, #4]
 2133 00a0 0022     		movs	r2, #0
 2134 00a2 9A64     		str	r2, [r3, #72]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 2135              		.loc 1 1070 31
 2136 00a4 7B68     		ldr	r3, [r7, #4]
 2137 00a6 0022     		movs	r2, #0
 2138 00a8 DA64     		str	r2, [r3, #76]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 2139              		.loc 1 1071 31
 2140 00aa 7B68     		ldr	r3, [r7, #4]
 2141 00ac 0022     		movs	r2, #0
 2142 00ae 1A65     		str	r2, [r3, #80]
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 2143              		.loc 1 1072 7
 2144 00b0 04E0     		b	.L105
 2145              	.L95:
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
 2146              		.loc 1 1075 14
 2147 00b2 0123     		movs	r3, #1
 2148 00b4 FB73     		strb	r3, [r7, #15]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2149              		.loc 1 1076 7
 2150 00b6 01E0     		b	.L105
 2151              	.L94:
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
 2152              		.loc 1 1081 12
 2153 00b8 0123     		movs	r3, #1
 2154 00ba FB73     		strb	r3, [r7, #15]
 2155              	.L105:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 2156              		.loc 1 1085 3
 2157 00bc 7B68     		ldr	r3, [r7, #4]
 2158 00be 0022     		movs	r2, #0
 2159 00c0 83F83420 		strb	r2, [r3, #52]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 2160              		.loc 1 1087 10
 2161 00c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccdGnCH8.s 			page 58


 2162              	.L93:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2163              		.loc 1 1088 1
 2164 00c6 1846     		mov	r0, r3
 2165 00c8 1437     		adds	r7, r7, #20
 2166              	.LCFI50:
 2167              		.cfi_def_cfa_offset 4
 2168 00ca BD46     		mov	sp, r7
 2169              	.LCFI51:
 2170              		.cfi_def_cfa_register 13
 2171              		@ sp needed
 2172 00cc 5DF8047B 		ldr	r7, [sp], #4
 2173              	.LCFI52:
 2174              		.cfi_restore 7
 2175              		.cfi_def_cfa_offset 0
 2176 00d0 7047     		bx	lr
 2177              		.cfi_endproc
 2178              	.LFE150:
 2180 00d2 00BF     		.section	.text.HAL_DMA_GetState,"ax",%progbits
 2181              		.align	1
 2182              		.global	HAL_DMA_GetState
 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2186              		.fpu fpv5-d16
 2188              	HAL_DMA_GetState:
 2189              	.LFB151:
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2190              		.loc 1 1116 1
 2191              		.cfi_startproc
ARM GAS  /tmp/ccdGnCH8.s 			page 59


 2192              		@ args = 0, pretend = 0, frame = 8
 2193              		@ frame_needed = 1, uses_anonymous_args = 0
 2194              		@ link register save eliminated.
 2195 0000 80B4     		push	{r7}
 2196              	.LCFI53:
 2197              		.cfi_def_cfa_offset 4
 2198              		.cfi_offset 7, -4
 2199 0002 83B0     		sub	sp, sp, #12
 2200              	.LCFI54:
 2201              		.cfi_def_cfa_offset 16
 2202 0004 00AF     		add	r7, sp, #0
 2203              	.LCFI55:
 2204              		.cfi_def_cfa_register 7
 2205 0006 7860     		str	r0, [r7, #4]
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 2206              		.loc 1 1117 14
 2207 0008 7B68     		ldr	r3, [r7, #4]
 2208 000a 93F83530 		ldrb	r3, [r3, #53]
 2209 000e DBB2     		uxtb	r3, r3
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2210              		.loc 1 1118 1
 2211 0010 1846     		mov	r0, r3
 2212 0012 0C37     		adds	r7, r7, #12
 2213              	.LCFI56:
 2214              		.cfi_def_cfa_offset 4
 2215 0014 BD46     		mov	sp, r7
 2216              	.LCFI57:
 2217              		.cfi_def_cfa_register 13
 2218              		@ sp needed
 2219 0016 5DF8047B 		ldr	r7, [sp], #4
 2220              	.LCFI58:
 2221              		.cfi_restore 7
 2222              		.cfi_def_cfa_offset 0
 2223 001a 7047     		bx	lr
 2224              		.cfi_endproc
 2225              	.LFE151:
 2227              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 2228              		.align	1
 2229              		.global	HAL_DMA_GetError
 2230              		.syntax unified
 2231              		.thumb
 2232              		.thumb_func
 2233              		.fpu fpv5-d16
 2235              	HAL_DMA_GetError:
 2236              	.LFB152:
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2237              		.loc 1 1127 1
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccdGnCH8.s 			page 60


 2240              		@ frame_needed = 1, uses_anonymous_args = 0
 2241              		@ link register save eliminated.
 2242 0000 80B4     		push	{r7}
 2243              	.LCFI59:
 2244              		.cfi_def_cfa_offset 4
 2245              		.cfi_offset 7, -4
 2246 0002 83B0     		sub	sp, sp, #12
 2247              	.LCFI60:
 2248              		.cfi_def_cfa_offset 16
 2249 0004 00AF     		add	r7, sp, #0
 2250              	.LCFI61:
 2251              		.cfi_def_cfa_register 7
 2252 0006 7860     		str	r0, [r7, #4]
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 2253              		.loc 1 1128 14
 2254 0008 7B68     		ldr	r3, [r7, #4]
 2255 000a 5B6D     		ldr	r3, [r3, #84]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2256              		.loc 1 1129 1
 2257 000c 1846     		mov	r0, r3
 2258 000e 0C37     		adds	r7, r7, #12
 2259              	.LCFI62:
 2260              		.cfi_def_cfa_offset 4
 2261 0010 BD46     		mov	sp, r7
 2262              	.LCFI63:
 2263              		.cfi_def_cfa_register 13
 2264              		@ sp needed
 2265 0012 5DF8047B 		ldr	r7, [sp], #4
 2266              	.LCFI64:
 2267              		.cfi_restore 7
 2268              		.cfi_def_cfa_offset 0
 2269 0016 7047     		bx	lr
 2270              		.cfi_endproc
 2271              	.LFE152:
 2273              		.section	.text.DMA_SetConfig,"ax",%progbits
 2274              		.align	1
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu fpv5-d16
 2280              	DMA_SetConfig:
 2281              	.LFB153:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
ARM GAS  /tmp/ccdGnCH8.s 			page 61


1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2282              		.loc 1 1153 1
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 16
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287 0000 80B4     		push	{r7}
 2288              	.LCFI65:
 2289              		.cfi_def_cfa_offset 4
 2290              		.cfi_offset 7, -4
 2291 0002 85B0     		sub	sp, sp, #20
 2292              	.LCFI66:
 2293              		.cfi_def_cfa_offset 24
 2294 0004 00AF     		add	r7, sp, #0
 2295              	.LCFI67:
 2296              		.cfi_def_cfa_register 7
 2297 0006 F860     		str	r0, [r7, #12]
 2298 0008 B960     		str	r1, [r7, #8]
 2299 000a 7A60     		str	r2, [r7, #4]
 2300 000c 3B60     		str	r3, [r7]
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2301              		.loc 1 1155 7
 2302 000e FB68     		ldr	r3, [r7, #12]
 2303 0010 1B68     		ldr	r3, [r3]
 2304              		.loc 1 1155 22
 2305 0012 1A68     		ldr	r2, [r3]
 2306              		.loc 1 1155 7
 2307 0014 FB68     		ldr	r3, [r7, #12]
 2308 0016 1B68     		ldr	r3, [r3]
 2309              		.loc 1 1155 22
 2310 0018 22F48022 		bic	r2, r2, #262144
 2311 001c 1A60     		str	r2, [r3]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2312              		.loc 1 1158 7
 2313 001e FB68     		ldr	r3, [r7, #12]
 2314 0020 1B68     		ldr	r3, [r3]
 2315              		.loc 1 1158 24
 2316 0022 3A68     		ldr	r2, [r7]
 2317 0024 5A60     		str	r2, [r3, #4]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2318              		.loc 1 1161 17
 2319 0026 FB68     		ldr	r3, [r7, #12]
 2320 0028 9B68     		ldr	r3, [r3, #8]
 2321              		.loc 1 1161 5
ARM GAS  /tmp/ccdGnCH8.s 			page 62


 2322 002a 402B     		cmp	r3, #64
 2323 002c 08D1     		bne	.L111
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2324              		.loc 1 1164 9
 2325 002e FB68     		ldr	r3, [r7, #12]
 2326 0030 1B68     		ldr	r3, [r3]
 2327              		.loc 1 1164 25
 2328 0032 7A68     		ldr	r2, [r7, #4]
 2329 0034 9A60     		str	r2, [r3, #8]
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2330              		.loc 1 1167 9
 2331 0036 FB68     		ldr	r3, [r7, #12]
 2332 0038 1B68     		ldr	r3, [r3]
 2333              		.loc 1 1167 26
 2334 003a BA68     		ldr	r2, [r7, #8]
 2335 003c DA60     		str	r2, [r3, #12]
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2336              		.loc 1 1178 1
 2337 003e 07E0     		b	.L113
 2338              	.L111:
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 2339              		.loc 1 1173 9
 2340 0040 FB68     		ldr	r3, [r7, #12]
 2341 0042 1B68     		ldr	r3, [r3]
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 2342              		.loc 1 1173 25
 2343 0044 BA68     		ldr	r2, [r7, #8]
 2344 0046 9A60     		str	r2, [r3, #8]
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 2345              		.loc 1 1176 9
 2346 0048 FB68     		ldr	r3, [r7, #12]
 2347 004a 1B68     		ldr	r3, [r3]
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 2348              		.loc 1 1176 26
 2349 004c 7A68     		ldr	r2, [r7, #4]
 2350 004e DA60     		str	r2, [r3, #12]
 2351              	.L113:
 2352              		.loc 1 1178 1
 2353 0050 00BF     		nop
 2354 0052 1437     		adds	r7, r7, #20
 2355              	.LCFI68:
 2356              		.cfi_def_cfa_offset 4
 2357 0054 BD46     		mov	sp, r7
ARM GAS  /tmp/ccdGnCH8.s 			page 63


 2358              	.LCFI69:
 2359              		.cfi_def_cfa_register 13
 2360              		@ sp needed
 2361 0056 5DF8047B 		ldr	r7, [sp], #4
 2362              	.LCFI70:
 2363              		.cfi_restore 7
 2364              		.cfi_def_cfa_offset 0
 2365 005a 7047     		bx	lr
 2366              		.cfi_endproc
 2367              	.LFE153:
 2369              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2370              		.align	1
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2374              		.fpu fpv5-d16
 2376              	DMA_CalcBaseAndBitshift:
 2377              	.LFB154:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2378              		.loc 1 1187 1
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 16
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
 2383 0000 80B4     		push	{r7}
 2384              	.LCFI71:
 2385              		.cfi_def_cfa_offset 4
 2386              		.cfi_offset 7, -4
 2387 0002 85B0     		sub	sp, sp, #20
 2388              	.LCFI72:
 2389              		.cfi_def_cfa_offset 24
 2390 0004 00AF     		add	r7, sp, #0
 2391              	.LCFI73:
 2392              		.cfi_def_cfa_register 7
 2393 0006 7860     		str	r0, [r7, #4]
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2394              		.loc 1 1188 44
 2395 0008 7B68     		ldr	r3, [r7, #4]
 2396 000a 1B68     		ldr	r3, [r3]
 2397              		.loc 1 1188 55
 2398 000c DBB2     		uxtb	r3, r3
 2399              		.loc 1 1188 64
 2400 000e 103B     		subs	r3, r3, #16
 2401              		.loc 1 1188 12
 2402 0010 134A     		ldr	r2, .L118
 2403 0012 A2FB0323 		umull	r2, r3, r2, r3
 2404 0016 1B09     		lsrs	r3, r3, #4
 2405 0018 FB60     		str	r3, [r7, #12]
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
ARM GAS  /tmp/ccdGnCH8.s 			page 64


1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2406              		.loc 1 1192 41
 2407 001a 124A     		ldr	r2, .L118+4
 2408 001c FB68     		ldr	r3, [r7, #12]
 2409 001e 1344     		add	r3, r3, r2
 2410 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2411 0022 1A46     		mov	r2, r3
 2412              		.loc 1 1192 21
 2413 0024 7B68     		ldr	r3, [r7, #4]
 2414 0026 DA65     		str	r2, [r3, #92]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 2415              		.loc 1 1194 6
 2416 0028 FB68     		ldr	r3, [r7, #12]
 2417 002a 032B     		cmp	r3, #3
 2418 002c 08D9     		bls	.L115
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2419              		.loc 1 1197 47
 2420 002e 7B68     		ldr	r3, [r7, #4]
 2421 0030 1B68     		ldr	r3, [r3]
 2422              		.loc 1 1197 33
 2423 0032 1A46     		mov	r2, r3
 2424              		.loc 1 1197 58
 2425 0034 0C4B     		ldr	r3, .L118+8
 2426 0036 1340     		ands	r3, r3, r2
 2427              		.loc 1 1197 81
 2428 0038 1A1D     		adds	r2, r3, #4
 2429              		.loc 1 1197 29
 2430 003a 7B68     		ldr	r3, [r7, #4]
 2431 003c 9A65     		str	r2, [r3, #88]
 2432 003e 06E0     		b	.L116
 2433              	.L115:
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2434              		.loc 1 1202 46
 2435 0040 7B68     		ldr	r3, [r7, #4]
 2436 0042 1B68     		ldr	r3, [r3]
 2437              		.loc 1 1202 32
 2438 0044 1A46     		mov	r2, r3
 2439              		.loc 1 1202 57
 2440 0046 084B     		ldr	r3, .L118+8
 2441 0048 1340     		ands	r3, r3, r2
 2442              		.loc 1 1202 29
 2443 004a 7A68     		ldr	r2, [r7, #4]
 2444 004c 9365     		str	r3, [r2, #88]
 2445              	.L116:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2446              		.loc 1 1205 14
ARM GAS  /tmp/ccdGnCH8.s 			page 65


 2447 004e 7B68     		ldr	r3, [r7, #4]
 2448 0050 9B6D     		ldr	r3, [r3, #88]
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2449              		.loc 1 1206 1
 2450 0052 1846     		mov	r0, r3
 2451 0054 1437     		adds	r7, r7, #20
 2452              	.LCFI74:
 2453              		.cfi_def_cfa_offset 4
 2454 0056 BD46     		mov	sp, r7
 2455              	.LCFI75:
 2456              		.cfi_def_cfa_register 13
 2457              		@ sp needed
 2458 0058 5DF8047B 		ldr	r7, [sp], #4
 2459              	.LCFI76:
 2460              		.cfi_restore 7
 2461              		.cfi_def_cfa_offset 0
 2462 005c 7047     		bx	lr
 2463              	.L119:
 2464 005e 00BF     		.align	2
 2465              	.L118:
 2466 0060 ABAAAAAA 		.word	-1431655765
 2467 0064 00000000 		.word	flagBitshiftOffset.8826
 2468 0068 00FCFFFF 		.word	-1024
 2469              		.cfi_endproc
 2470              	.LFE154:
 2472              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2473              		.align	1
 2474              		.syntax unified
 2475              		.thumb
 2476              		.thumb_func
 2477              		.fpu fpv5-d16
 2479              	DMA_CheckFifoParam:
 2480              	.LFB155:
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2481              		.loc 1 1215 1
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 16
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485              		@ link register save eliminated.
 2486 0000 80B4     		push	{r7}
 2487              	.LCFI77:
 2488              		.cfi_def_cfa_offset 4
 2489              		.cfi_offset 7, -4
 2490 0002 85B0     		sub	sp, sp, #20
 2491              	.LCFI78:
 2492              		.cfi_def_cfa_offset 24
 2493 0004 00AF     		add	r7, sp, #0
 2494              	.LCFI79:
 2495              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccdGnCH8.s 			page 66


 2496 0006 7860     		str	r0, [r7, #4]
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2497              		.loc 1 1216 21
 2498 0008 0023     		movs	r3, #0
 2499 000a FB73     		strb	r3, [r7, #15]
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2500              		.loc 1 1217 12
 2501 000c 7B68     		ldr	r3, [r7, #4]
 2502 000e 9B6A     		ldr	r3, [r3, #40]
 2503 0010 BB60     		str	r3, [r7, #8]
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2504              		.loc 1 1220 16
 2505 0012 7B68     		ldr	r3, [r7, #4]
 2506 0014 9B69     		ldr	r3, [r3, #24]
 2507              		.loc 1 1220 5
 2508 0016 002B     		cmp	r3, #0
 2509 0018 1FD1     		bne	.L121
 2510 001a BB68     		ldr	r3, [r7, #8]
 2511 001c 032B     		cmp	r3, #3
 2512 001e 56D8     		bhi	.L145
 2513 0020 01A2     		adr	r2, .L124
 2514 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2515 0026 00BF     		.p2align 2
 2516              	.L124:
 2517 0028 39000000 		.word	.L125+1
 2518 002c 4B000000 		.word	.L126+1
 2519 0030 39000000 		.word	.L125+1
 2520 0034 CF000000 		.word	.L145+1
 2521              		.p2align 1
 2522              	.L125:
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2523              		.loc 1 1226 22
 2524 0038 7B68     		ldr	r3, [r7, #4]
 2525 003a DB6A     		ldr	r3, [r3, #44]
 2526              		.loc 1 1226 32
 2527 003c 03F08073 		and	r3, r3, #16777216
 2528              		.loc 1 1226 10
 2529 0040 002B     		cmp	r3, #0
 2530 0042 46D0     		beq	.L146
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2531              		.loc 1 1228 16
 2532 0044 0123     		movs	r3, #1
 2533 0046 FB73     		strb	r3, [r7, #15]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2534              		.loc 1 1230 7
 2535 0048 43E0     		b	.L146
 2536              	.L126:
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
ARM GAS  /tmp/ccdGnCH8.s 			page 67


1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2537              		.loc 1 1232 21
 2538 004a 7B68     		ldr	r3, [r7, #4]
 2539 004c DB6A     		ldr	r3, [r3, #44]
 2540              		.loc 1 1232 10
 2541 004e B3F1C07F 		cmp	r3, #25165824
 2542 0052 40D1     		bne	.L147
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2543              		.loc 1 1234 16
 2544 0054 0123     		movs	r3, #1
 2545 0056 FB73     		strb	r3, [r7, #15]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2546              		.loc 1 1236 7
 2547 0058 3DE0     		b	.L147
 2548              	.L121:
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2549              		.loc 1 1245 22
 2550 005a 7B68     		ldr	r3, [r7, #4]
 2551 005c 9B69     		ldr	r3, [r3, #24]
 2552              		.loc 1 1245 11
 2553 005e B3F5005F 		cmp	r3, #8192
 2554 0062 21D1     		bne	.L131
 2555 0064 BB68     		ldr	r3, [r7, #8]
 2556 0066 032B     		cmp	r3, #3
 2557 0068 37D8     		bhi	.L148
 2558 006a 01A2     		adr	r2, .L134
 2559 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2560              		.p2align 2
 2561              	.L134:
 2562 0070 81000000 		.word	.L135+1
 2563 0074 87000000 		.word	.L136+1
 2564 0078 81000000 		.word	.L135+1
 2565 007c 99000000 		.word	.L133+1
 2566              		.p2align 1
 2567              	.L135:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
 2568              		.loc 1 1251 14
 2569 0080 0123     		movs	r3, #1
 2570 0082 FB73     		strb	r3, [r7, #15]
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2571              		.loc 1 1252 7
 2572 0084 30E0     		b	.L130
ARM GAS  /tmp/ccdGnCH8.s 			page 68


 2573              	.L136:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2574              		.loc 1 1254 22
 2575 0086 7B68     		ldr	r3, [r7, #4]
 2576 0088 DB6A     		ldr	r3, [r3, #44]
 2577              		.loc 1 1254 32
 2578 008a 03F08073 		and	r3, r3, #16777216
 2579              		.loc 1 1254 10
 2580 008e 002B     		cmp	r3, #0
 2581 0090 25D0     		beq	.L149
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2582              		.loc 1 1256 16
 2583 0092 0123     		movs	r3, #1
 2584 0094 FB73     		strb	r3, [r7, #15]
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2585              		.loc 1 1258 7
 2586 0096 22E0     		b	.L149
 2587              	.L133:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2588              		.loc 1 1260 21
 2589 0098 7B68     		ldr	r3, [r7, #4]
 2590 009a DB6A     		ldr	r3, [r3, #44]
 2591              		.loc 1 1260 10
 2592 009c B3F1C07F 		cmp	r3, #25165824
 2593 00a0 1FD1     		bne	.L150
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2594              		.loc 1 1262 16
 2595 00a2 0123     		movs	r3, #1
 2596 00a4 FB73     		strb	r3, [r7, #15]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;   
 2597              		.loc 1 1264 7
 2598 00a6 1CE0     		b	.L150
 2599              	.L131:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2600              		.loc 1 1273 5
 2601 00a8 BB68     		ldr	r3, [r7, #8]
 2602 00aa 022B     		cmp	r3, #2
 2603 00ac 03D9     		bls	.L140
 2604 00ae BB68     		ldr	r3, [r7, #8]
 2605 00b0 032B     		cmp	r3, #3
 2606 00b2 03D0     		beq	.L141
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
ARM GAS  /tmp/ccdGnCH8.s 			page 69


1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2607              		.loc 1 1287 7
 2608 00b4 18E0     		b	.L130
 2609              	.L140:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 2610              		.loc 1 1278 14
 2611 00b6 0123     		movs	r3, #1
 2612 00b8 FB73     		strb	r3, [r7, #15]
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2613              		.loc 1 1279 7
 2614 00ba 15E0     		b	.L130
 2615              	.L141:
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 2616              		.loc 1 1281 22
 2617 00bc 7B68     		ldr	r3, [r7, #4]
 2618 00be DB6A     		ldr	r3, [r3, #44]
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 2619              		.loc 1 1281 32
 2620 00c0 03F08073 		and	r3, r3, #16777216
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 2621              		.loc 1 1281 10
 2622 00c4 002B     		cmp	r3, #0
 2623 00c6 0ED0     		beq	.L151
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 2624              		.loc 1 1283 16
 2625 00c8 0123     		movs	r3, #1
 2626 00ca FB73     		strb	r3, [r7, #15]
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2627              		.loc 1 1285 7
 2628 00cc 0BE0     		b	.L151
 2629              	.L145:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 2630              		.loc 1 1240 7
 2631 00ce 00BF     		nop
 2632 00d0 0AE0     		b	.L130
 2633              	.L146:
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
 2634              		.loc 1 1230 7
 2635 00d2 00BF     		nop
 2636 00d4 08E0     		b	.L130
 2637              	.L147:
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2638              		.loc 1 1236 7
 2639 00d6 00BF     		nop
 2640 00d8 06E0     		b	.L130
 2641              	.L148:
ARM GAS  /tmp/ccdGnCH8.s 			page 70


1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 2642              		.loc 1 1266 7
 2643 00da 00BF     		nop
 2644 00dc 04E0     		b	.L130
 2645              	.L149:
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2646              		.loc 1 1258 7
 2647 00de 00BF     		nop
 2648 00e0 02E0     		b	.L130
 2649              	.L150:
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2650              		.loc 1 1264 7
 2651 00e2 00BF     		nop
 2652 00e4 00E0     		b	.L130
 2653              	.L151:
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
 2654              		.loc 1 1285 7
 2655 00e6 00BF     		nop
 2656              	.L130:
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 2657              		.loc 1 1291 10
 2658 00e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2659              		.loc 1 1292 1
 2660 00ea 1846     		mov	r0, r3
 2661 00ec 1437     		adds	r7, r7, #20
 2662              	.LCFI80:
 2663              		.cfi_def_cfa_offset 4
 2664 00ee BD46     		mov	sp, r7
 2665              	.LCFI81:
 2666              		.cfi_def_cfa_register 13
 2667              		@ sp needed
 2668 00f0 5DF8047B 		ldr	r7, [sp], #4
 2669              	.LCFI82:
 2670              		.cfi_restore 7
 2671              		.cfi_def_cfa_offset 0
 2672 00f4 7047     		bx	lr
 2673              		.cfi_endproc
 2674              	.LFE155:
 2676 00f6 00BF     		.section	.rodata.flagBitshiftOffset.8826,"a"
 2677              		.align	2
 2680              	flagBitshiftOffset.8826:
 2681 0000 00061016 		.ascii	"\000\006\020\026\000\006\020\026"
 2681      00061016 
 2682              		.text
 2683              	.Letext0:
 2684              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2685              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 2686              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2687              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f765xx.h"
 2688              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2689              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2690              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2691              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccdGnCH8.s 			page 71


ARM GAS  /tmp/ccdGnCH8.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma.c
     /tmp/ccdGnCH8.s:17     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccdGnCH8.s:25     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccdGnCH8.s:2479   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccdGnCH8.s:2376   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccdGnCH8.s:286    .text.HAL_DMA_Init:0000000000000158 $d
     /tmp/ccdGnCH8.s:291    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccdGnCH8.s:298    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccdGnCH8.s:447    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccdGnCH8.s:454    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccdGnCH8.s:2280   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccdGnCH8.s:547    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccdGnCH8.s:554    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccdGnCH8.s:701    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccdGnCH8.s:708    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccdGnCH8.s:880    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccdGnCH8.s:887    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccdGnCH8.s:953    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccdGnCH8.s:960    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccdGnCH8.s:1284   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccdGnCH8.s:1291   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccdGnCH8.s:1731   .text.HAL_DMA_IRQHandler:0000000000000258 $d
     /tmp/ccdGnCH8.s:1735   .text.HAL_DMA_IRQHandler:0000000000000260 $t
     /tmp/ccdGnCH8.s:1868   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccdGnCH8.s:1875   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccdGnCH8.s:1927   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/ccdGnCH8.s:1933   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/ccdGnCH8.s:2010   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccdGnCH8.s:2017   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccdGnCH8.s:2068   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/ccdGnCH8.s:2075   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/ccdGnCH8.s:2181   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccdGnCH8.s:2188   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccdGnCH8.s:2228   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccdGnCH8.s:2235   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccdGnCH8.s:2274   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccdGnCH8.s:2370   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccdGnCH8.s:2466   .text.DMA_CalcBaseAndBitshift:0000000000000060 $d
     /tmp/ccdGnCH8.s:2680   .rodata.flagBitshiftOffset.8826:0000000000000000 flagBitshiftOffset.8826
     /tmp/ccdGnCH8.s:2473   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccdGnCH8.s:2517   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/ccdGnCH8.s:2521   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/ccdGnCH8.s:2562   .text.DMA_CheckFifoParam:0000000000000070 $d
     /tmp/ccdGnCH8.s:2566   .text.DMA_CheckFifoParam:0000000000000080 $t
     /tmp/ccdGnCH8.s:2677   .rodata.flagBitshiftOffset.8826:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
