ARM GAS  /tmp/cc1rYgmV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"heap_4.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.bss.ucHeap,"aw",%nobits
  17              		.align	2
  20              	ucHeap:
  21 0000 00000000 		.space	15360
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.rodata.xHeapStructSize,"a"
  23              		.align	2
  26              	xHeapStructSize:
  27 0000 08000000 		.word	8
  28              		.section	.bss.xStart,"aw",%nobits
  29              		.align	2
  32              	xStart:
  33 0000 00000000 		.space	8
  33      00000000 
  34              		.section	.bss.pxEnd,"aw",%nobits
  35              		.align	2
  38              	pxEnd:
  39 0000 00000000 		.space	4
  40              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
  41              		.align	2
  44              	xFreeBytesRemaining:
  45 0000 00000000 		.space	4
  46              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
  47              		.align	2
  50              	xMinimumEverFreeBytesRemaining:
  51 0000 00000000 		.space	4
  52              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
  53              		.align	2
  56              	xBlockAllocatedBit:
  57 0000 00000000 		.space	4
  58              		.section	.text.pvPortMalloc,"ax",%progbits
  59              		.align	1
  60              		.global	pvPortMalloc
  61              		.arch armv7e-m
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-d16
  67              	pvPortMalloc:
ARM GAS  /tmp/cc1rYgmV.s 			page 2


  68              	.LFB5:
  69              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
ARM GAS  /tmp/cc1rYgmV.s 			page 3


  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** fragmentation. */
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  /tmp/cc1rYgmV.s 			page 4


 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  70              		.loc 1 114 1
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 40
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 8AB0     		sub	sp, sp, #40
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 48
  82 0004 00AF     		add	r7, sp, #0
  83              	.LCFI2:
  84              		.cfi_def_cfa_register 7
  85 0006 7860     		str	r0, [r7, #4]
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
  86              		.loc 1 116 7
  87 0008 0023     		movs	r3, #0
  88 000a FB61     		str	r3, [r7, #28]
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
  89              		.loc 1 118 2
  90 000c FFF7FEFF 		bl	vTaskSuspendAll
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
  91              		.loc 1 122 13
  92 0010 5B4B     		ldr	r3, .L16
  93 0012 1B68     		ldr	r3, [r3]
  94              		.loc 1 122 5
  95 0014 002B     		cmp	r3, #0
  96 0016 01D1     		bne	.L2
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
  97              		.loc 1 124 4
  98 0018 FFF7FEFF 		bl	prvHeapInit
  99              	.L2:
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 100              		.loc 1 135 21
 101 001c 594B     		ldr	r3, .L16+4
 102 001e 1A68     		ldr	r2, [r3]
 103 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc1rYgmV.s 			page 5


 104 0022 1340     		ands	r3, r3, r2
 105              		.loc 1 135 5
 106 0024 002B     		cmp	r3, #0
 107 0026 40F09280 		bne	.L3
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 108              		.loc 1 139 6
 109 002a 7B68     		ldr	r3, [r7, #4]
 110 002c 002B     		cmp	r3, #0
 111 002e 1FD0     		beq	.L4
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 112              		.loc 1 141 17
 113 0030 0822     		movs	r2, #8
 114 0032 7B68     		ldr	r3, [r7, #4]
 115 0034 1344     		add	r3, r3, r2
 116 0036 7B60     		str	r3, [r7, #4]
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 117              		.loc 1 145 23
 118 0038 7B68     		ldr	r3, [r7, #4]
 119 003a 03F00703 		and	r3, r3, #7
 120              		.loc 1 145 7
 121 003e 002B     		cmp	r3, #0
 122 0040 16D0     		beq	.L4
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 123              		.loc 1 148 18
 124 0042 7B68     		ldr	r3, [r7, #4]
 125 0044 23F00703 		bic	r3, r3, #7
 126 0048 0833     		adds	r3, r3, #8
 127 004a 7B60     		str	r3, [r7, #4]
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 128              		.loc 1 149 6
 129 004c 7B68     		ldr	r3, [r7, #4]
 130 004e 03F00703 		and	r3, r3, #7
 131 0052 002B     		cmp	r3, #0
 132 0054 0CD0     		beq	.L4
 133              	.LBB12:
 134              	.LBB13:
 135              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
ARM GAS  /tmp/cc1rYgmV.s 			page 6


  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  /tmp/cc1rYgmV.s 			page 7


  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
ARM GAS  /tmp/cc1rYgmV.s 			page 8


 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
ARM GAS  /tmp/cc1rYgmV.s 			page 9


 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 136              		.loc 2 195 2
 137              		.syntax unified
 138              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 139 0056 4FF05003 			mov r3, #80												
 140 005a 72B6     		cpsid i													
 141 005c 83F31188 		msr basepri, r3											
 142 0060 BFF36F8F 		isb														
 143 0064 BFF34F8F 		dsb														
 144 0068 62B6     		cpsie i													
 145              	
 146              	@ 0 "" 2
 147              		.thumb
 148              		.syntax unified
 149 006a 7B61     		str	r3, [r7, #20]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 150              		.loc 2 205 1
 151 006c 00BF     		nop
 152              	.L5:
 153              	.LBE13:
 154              	.LBE12:
 155              		.loc 1 149 6 discriminator 1
 156 006e FEE7     		b	.L5
 157              	.L4:
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
ARM GAS  /tmp/cc1rYgmV.s 			page 10


 158              		.loc 1 161 6
 159 0070 7B68     		ldr	r3, [r7, #4]
 160 0072 002B     		cmp	r3, #0
 161 0074 6BD0     		beq	.L3
 162              		.loc 1 161 45 discriminator 1
 163 0076 444B     		ldr	r3, .L16+8
 164 0078 1B68     		ldr	r3, [r3]
 165              		.loc 1 161 28 discriminator 1
 166 007a 7A68     		ldr	r2, [r7, #4]
 167 007c 9A42     		cmp	r2, r3
 168 007e 66D8     		bhi	.L3
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 169              		.loc 1 165 21
 170 0080 424B     		ldr	r3, .L16+12
 171 0082 3B62     		str	r3, [r7, #32]
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 172              		.loc 1 166 13
 173 0084 414B     		ldr	r3, .L16+12
 174 0086 1B68     		ldr	r3, [r3]
 175 0088 7B62     		str	r3, [r7, #36]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 176              		.loc 1 167 10
 177 008a 04E0     		b	.L6
 178              	.L8:
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 179              		.loc 1 169 22
 180 008c 7B6A     		ldr	r3, [r7, #36]
 181 008e 3B62     		str	r3, [r7, #32]
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 182              		.loc 1 170 14
 183 0090 7B6A     		ldr	r3, [r7, #36]
 184 0092 1B68     		ldr	r3, [r3]
 185 0094 7B62     		str	r3, [r7, #36]
 186              	.L6:
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 187              		.loc 1 167 21
 188 0096 7B6A     		ldr	r3, [r7, #36]
 189 0098 5B68     		ldr	r3, [r3, #4]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 190              		.loc 1 167 10
 191 009a 7A68     		ldr	r2, [r7, #4]
 192 009c 9A42     		cmp	r2, r3
 193 009e 03D9     		bls	.L7
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 194              		.loc 1 167 62 discriminator 1
 195 00a0 7B6A     		ldr	r3, [r7, #36]
 196 00a2 1B68     		ldr	r3, [r3]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 197              		.loc 1 167 50 discriminator 1
 198 00a4 002B     		cmp	r3, #0
 199 00a6 F1D1     		bne	.L8
 200              	.L7:
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
ARM GAS  /tmp/cc1rYgmV.s 			page 11


 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 201              		.loc 1 175 17
 202 00a8 354B     		ldr	r3, .L16
 203 00aa 1B68     		ldr	r3, [r3]
 204              		.loc 1 175 7
 205 00ac 7A6A     		ldr	r2, [r7, #36]
 206 00ae 9A42     		cmp	r2, r3
 207 00b0 4DD0     		beq	.L3
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 208              		.loc 1 179 61
 209 00b2 3B6A     		ldr	r3, [r7, #32]
 210 00b4 1B68     		ldr	r3, [r3]
 211              		.loc 1 179 17
 212 00b6 0822     		movs	r2, #8
 213              		.loc 1 179 15
 214 00b8 1344     		add	r3, r3, r2
 215 00ba FB61     		str	r3, [r7, #28]
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 216              		.loc 1 183 48
 217 00bc 7B6A     		ldr	r3, [r7, #36]
 218 00be 1A68     		ldr	r2, [r3]
 219              		.loc 1 183 39
 220 00c0 3B6A     		ldr	r3, [r7, #32]
 221 00c2 1A60     		str	r2, [r3]
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 222              		.loc 1 187 19
 223 00c4 7B6A     		ldr	r3, [r7, #36]
 224 00c6 5A68     		ldr	r2, [r3, #4]
 225              		.loc 1 187 32
 226 00c8 7B68     		ldr	r3, [r7, #4]
 227 00ca D21A     		subs	r2, r2, r3
 228              		.loc 1 187 50
 229 00cc 0823     		movs	r3, #8
 230 00ce 5B00     		lsls	r3, r3, #1
 231              		.loc 1 187 8
 232 00d0 9A42     		cmp	r2, r3
 233 00d2 21D9     		bls	.L9
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 234              		.loc 1 193 22
 235 00d4 7A6A     		ldr	r2, [r7, #36]
ARM GAS  /tmp/cc1rYgmV.s 			page 12


 236 00d6 7B68     		ldr	r3, [r7, #4]
 237 00d8 1344     		add	r3, r3, r2
 238 00da BB61     		str	r3, [r7, #24]
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 239              		.loc 1 194 7
 240 00dc BB69     		ldr	r3, [r7, #24]
 241 00de 03F00703 		and	r3, r3, #7
 242 00e2 002B     		cmp	r3, #0
 243 00e4 0CD0     		beq	.L10
 244              	.LBB14:
 245              	.LBB15:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 246              		.loc 2 195 2
 247              		.syntax unified
 248              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 249 00e6 4FF05003 			mov r3, #80												
 250 00ea 72B6     		cpsid i													
 251 00ec 83F31188 		msr basepri, r3											
 252 00f0 BFF36F8F 		isb														
 253 00f4 BFF34F8F 		dsb														
 254 00f8 62B6     		cpsie i													
 255              	
 256              	@ 0 "" 2
 257              		.thumb
 258              		.syntax unified
 259 00fa 3B61     		str	r3, [r7, #16]
 260              		.loc 2 205 1
 261 00fc 00BF     		nop
 262              	.L11:
 263              	.LBE15:
 264              	.LBE14:
 265              		.loc 1 194 7 discriminator 3
 266 00fe FEE7     		b	.L11
 267              	.L10:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 268              		.loc 1 198 43
 269 0100 7B6A     		ldr	r3, [r7, #36]
 270 0102 5A68     		ldr	r2, [r3, #4]
 271              		.loc 1 198 56
 272 0104 7B68     		ldr	r3, [r7, #4]
 273 0106 D21A     		subs	r2, r2, r3
 274              		.loc 1 198 34
 275 0108 BB69     		ldr	r3, [r7, #24]
 276 010a 5A60     		str	r2, [r3, #4]
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 277              		.loc 1 199 27
 278 010c 7B6A     		ldr	r3, [r7, #36]
 279 010e 7A68     		ldr	r2, [r7, #4]
 280 0110 5A60     		str	r2, [r3, #4]
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 281              		.loc 1 202 7
 282 0112 B869     		ldr	r0, [r7, #24]
ARM GAS  /tmp/cc1rYgmV.s 			page 13


 283 0114 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 284              	.L9:
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 285              		.loc 1 209 26
 286 0118 1B4B     		ldr	r3, .L16+8
 287 011a 1A68     		ldr	r2, [r3]
 288              		.loc 1 209 36
 289 011c 7B6A     		ldr	r3, [r7, #36]
 290 011e 5B68     		ldr	r3, [r3, #4]
 291              		.loc 1 209 26
 292 0120 D31A     		subs	r3, r2, r3
 293 0122 194A     		ldr	r2, .L16+8
 294 0124 1360     		str	r3, [r2]
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 295              		.loc 1 211 30
 296 0126 184B     		ldr	r3, .L16+8
 297 0128 1A68     		ldr	r2, [r3]
 298 012a 194B     		ldr	r3, .L16+16
 299 012c 1B68     		ldr	r3, [r3]
 300              		.loc 1 211 8
 301 012e 9A42     		cmp	r2, r3
 302 0130 03D2     		bcs	.L12
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 303              		.loc 1 213 38
 304 0132 154B     		ldr	r3, .L16+8
 305 0134 1B68     		ldr	r3, [r3]
 306 0136 164A     		ldr	r2, .L16+16
 307 0138 1360     		str	r3, [r2]
 308              	.L12:
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 309              		.loc 1 222 26
 310 013a 7B6A     		ldr	r3, [r7, #36]
 311 013c 5A68     		ldr	r2, [r3, #4]
 312 013e 114B     		ldr	r3, .L16+4
 313 0140 1B68     		ldr	r3, [r3]
 314 0142 1A43     		orrs	r2, r2, r3
 315 0144 7B6A     		ldr	r3, [r7, #36]
 316 0146 5A60     		str	r2, [r3, #4]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 317              		.loc 1 223 31
 318 0148 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/cc1rYgmV.s 			page 14


 319 014a 0022     		movs	r2, #0
 320 014c 1A60     		str	r2, [r3]
 321              	.L3:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 322              		.loc 1 242 11
 323 014e FFF7FEFF 		bl	xTaskResumeAll
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 324              		.loc 1 258 2
 325 0152 FB69     		ldr	r3, [r7, #28]
 326 0154 03F00703 		and	r3, r3, #7
 327 0158 002B     		cmp	r3, #0
 328 015a 0CD0     		beq	.L13
 329              	.LBB16:
 330              	.LBB17:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 331              		.loc 2 195 2
 332              		.syntax unified
 333              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 334 015c 4FF05003 			mov r3, #80												
 335 0160 72B6     		cpsid i													
 336 0162 83F31188 		msr basepri, r3											
 337 0166 BFF36F8F 		isb														
 338 016a BFF34F8F 		dsb														
 339 016e 62B6     		cpsie i													
ARM GAS  /tmp/cc1rYgmV.s 			page 15


 340              	
 341              	@ 0 "" 2
 342              		.thumb
 343              		.syntax unified
 344 0170 FB60     		str	r3, [r7, #12]
 345              		.loc 2 205 1
 346 0172 00BF     		nop
 347              	.L14:
 348              	.LBE17:
 349              	.LBE16:
 350              		.loc 1 258 2 discriminator 5
 351 0174 FEE7     		b	.L14
 352              	.L13:
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 353              		.loc 1 259 9
 354 0176 FB69     		ldr	r3, [r7, #28]
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 355              		.loc 1 260 1
 356 0178 1846     		mov	r0, r3
 357 017a 2837     		adds	r7, r7, #40
 358              	.LCFI3:
 359              		.cfi_def_cfa_offset 8
 360 017c BD46     		mov	sp, r7
 361              	.LCFI4:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 017e 80BD     		pop	{r7, pc}
 365              	.L17:
 366              		.align	2
 367              	.L16:
 368 0180 00000000 		.word	pxEnd
 369 0184 00000000 		.word	xBlockAllocatedBit
 370 0188 00000000 		.word	xFreeBytesRemaining
 371 018c 00000000 		.word	xStart
 372 0190 00000000 		.word	xMinimumEverFreeBytesRemaining
 373              		.cfi_endproc
 374              	.LFE5:
 376              		.section	.text.vPortFree,"ax",%progbits
 377              		.align	1
 378              		.global	vPortFree
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	vPortFree:
 385              	.LFB6:
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 386              		.loc 1 264 1
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 24
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              	.LCFI5:
 392              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc1rYgmV.s 			page 16


 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 86B0     		sub	sp, sp, #24
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 32
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI7:
 400              		.cfi_def_cfa_register 7
 401 0006 7860     		str	r0, [r7, #4]
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 402              		.loc 1 265 10
 403 0008 7B68     		ldr	r3, [r7, #4]
 404 000a 7B61     		str	r3, [r7, #20]
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 405              		.loc 1 268 4
 406 000c 7B68     		ldr	r3, [r7, #4]
 407 000e 002B     		cmp	r3, #0
 408 0010 4CD0     		beq	.L24
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 409              		.loc 1 272 7
 410 0012 0823     		movs	r3, #8
 411 0014 5B42     		rsbs	r3, r3, #0
 412 0016 7A69     		ldr	r2, [r7, #20]
 413 0018 1344     		add	r3, r3, r2
 414 001a 7B61     		str	r3, [r7, #20]
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 415              		.loc 1 275 10
 416 001c 7B69     		ldr	r3, [r7, #20]
 417 001e 3B61     		str	r3, [r7, #16]
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 418              		.loc 1 278 3
 419 0020 3B69     		ldr	r3, [r7, #16]
 420 0022 5A68     		ldr	r2, [r3, #4]
 421 0024 234B     		ldr	r3, .L25
 422 0026 1B68     		ldr	r3, [r3]
 423 0028 1340     		ands	r3, r3, r2
 424 002a 002B     		cmp	r3, #0
 425 002c 0CD1     		bne	.L20
 426              	.LBB18:
 427              	.LBB19:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 428              		.loc 2 195 2
 429              		.syntax unified
 430              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 431 002e 4FF05003 			mov r3, #80												
 432 0032 72B6     		cpsid i													
 433 0034 83F31188 		msr basepri, r3											
 434 0038 BFF36F8F 		isb														
ARM GAS  /tmp/cc1rYgmV.s 			page 17


 435 003c BFF34F8F 		dsb														
 436 0040 62B6     		cpsie i													
 437              	
 438              	@ 0 "" 2
 439              		.thumb
 440              		.syntax unified
 441 0042 FB60     		str	r3, [r7, #12]
 442              		.loc 2 205 1
 443 0044 00BF     		nop
 444              	.L21:
 445              	.LBE19:
 446              	.LBE18:
 447              		.loc 1 278 3 discriminator 1
 448 0046 FEE7     		b	.L21
 449              	.L20:
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 450              		.loc 1 279 3
 451 0048 3B69     		ldr	r3, [r7, #16]
 452 004a 1B68     		ldr	r3, [r3]
 453 004c 002B     		cmp	r3, #0
 454 004e 0CD0     		beq	.L22
 455              	.LBB20:
 456              	.LBB21:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 457              		.loc 2 195 2
 458              		.syntax unified
 459              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 460 0050 4FF05003 			mov r3, #80												
 461 0054 72B6     		cpsid i													
 462 0056 83F31188 		msr basepri, r3											
 463 005a BFF36F8F 		isb														
 464 005e BFF34F8F 		dsb														
 465 0062 62B6     		cpsie i													
 466              	
 467              	@ 0 "" 2
 468              		.thumb
 469              		.syntax unified
 470 0064 BB60     		str	r3, [r7, #8]
 471              		.loc 2 205 1
 472 0066 00BF     		nop
 473              	.L23:
 474              	.LBE21:
 475              	.LBE20:
 476              		.loc 1 279 3 discriminator 2
 477 0068 FEE7     		b	.L23
 478              	.L22:
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 479              		.loc 1 281 15
 480 006a 3B69     		ldr	r3, [r7, #16]
 481 006c 5A68     		ldr	r2, [r3, #4]
 482              		.loc 1 281 28
 483 006e 114B     		ldr	r3, .L25
 484 0070 1B68     		ldr	r3, [r3]
 485 0072 1340     		ands	r3, r3, r2
 486              		.loc 1 281 5
 487 0074 002B     		cmp	r3, #0
ARM GAS  /tmp/cc1rYgmV.s 			page 18


 488 0076 19D0     		beq	.L24
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 489              		.loc 1 283 14
 490 0078 3B69     		ldr	r3, [r7, #16]
 491 007a 1B68     		ldr	r3, [r3]
 492              		.loc 1 283 6
 493 007c 002B     		cmp	r3, #0
 494 007e 15D1     		bne	.L24
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 495              		.loc 1 287 24
 496 0080 3B69     		ldr	r3, [r7, #16]
 497 0082 5A68     		ldr	r2, [r3, #4]
 498              		.loc 1 287 27
 499 0084 0B4B     		ldr	r3, .L25
 500 0086 1B68     		ldr	r3, [r3]
 501 0088 DB43     		mvns	r3, r3
 502              		.loc 1 287 24
 503 008a 1A40     		ands	r2, r2, r3
 504 008c 3B69     		ldr	r3, [r7, #16]
 505 008e 5A60     		str	r2, [r3, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 506              		.loc 1 289 5
 507 0090 FFF7FEFF 		bl	vTaskSuspendAll
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 508              		.loc 1 292 35
 509 0094 3B69     		ldr	r3, [r7, #16]
 510 0096 5A68     		ldr	r2, [r3, #4]
 511              		.loc 1 292 26
 512 0098 074B     		ldr	r3, .L25+4
 513 009a 1B68     		ldr	r3, [r3]
 514 009c 1344     		add	r3, r3, r2
 515 009e 064A     		ldr	r2, .L25+4
 516 00a0 1360     		str	r3, [r2]
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 517              		.loc 1 294 6
 518 00a2 3869     		ldr	r0, [r7, #16]
 519 00a4 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 520              		.loc 1 296 14
 521 00a8 FFF7FEFF 		bl	xTaskResumeAll
 522              	.L24:
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
ARM GAS  /tmp/cc1rYgmV.s 			page 19


 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 523              		.loc 1 308 1
 524 00ac 00BF     		nop
 525 00ae 1837     		adds	r7, r7, #24
 526              	.LCFI8:
 527              		.cfi_def_cfa_offset 8
 528 00b0 BD46     		mov	sp, r7
 529              	.LCFI9:
 530              		.cfi_def_cfa_register 13
 531              		@ sp needed
 532 00b2 80BD     		pop	{r7, pc}
 533              	.L26:
 534              		.align	2
 535              	.L25:
 536 00b4 00000000 		.word	xBlockAllocatedBit
 537 00b8 00000000 		.word	xFreeBytesRemaining
 538              		.cfi_endproc
 539              	.LFE6:
 541              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 542              		.align	1
 543              		.global	xPortGetFreeHeapSize
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv5-d16
 549              	xPortGetFreeHeapSize:
 550              	.LFB7:
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 551              		.loc 1 312 1
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556 0000 80B4     		push	{r7}
 557              	.LCFI10:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0002 00AF     		add	r7, sp, #0
 561              	.LCFI11:
 562              		.cfi_def_cfa_register 7
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 563              		.loc 1 313 9
 564 0004 034B     		ldr	r3, .L29
 565 0006 1B68     		ldr	r3, [r3]
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 566              		.loc 1 314 1
 567 0008 1846     		mov	r0, r3
 568 000a BD46     		mov	sp, r7
 569              	.LCFI12:
 570              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc1rYgmV.s 			page 20


 571              		@ sp needed
 572 000c 5DF8047B 		ldr	r7, [sp], #4
 573              	.LCFI13:
 574              		.cfi_restore 7
 575              		.cfi_def_cfa_offset 0
 576 0010 7047     		bx	lr
 577              	.L30:
 578 0012 00BF     		.align	2
 579              	.L29:
 580 0014 00000000 		.word	xFreeBytesRemaining
 581              		.cfi_endproc
 582              	.LFE7:
 584              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 585              		.align	1
 586              		.global	xPortGetMinimumEverFreeHeapSize
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv5-d16
 592              	xPortGetMinimumEverFreeHeapSize:
 593              	.LFB8:
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 594              		.loc 1 318 1
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI14:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 00AF     		add	r7, sp, #0
 604              	.LCFI15:
 605              		.cfi_def_cfa_register 7
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 606              		.loc 1 319 9
 607 0004 034B     		ldr	r3, .L33
 608 0006 1B68     		ldr	r3, [r3]
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 609              		.loc 1 320 1
 610 0008 1846     		mov	r0, r3
 611 000a BD46     		mov	sp, r7
 612              	.LCFI16:
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 000c 5DF8047B 		ldr	r7, [sp], #4
 616              	.LCFI17:
 617              		.cfi_restore 7
 618              		.cfi_def_cfa_offset 0
 619 0010 7047     		bx	lr
 620              	.L34:
 621 0012 00BF     		.align	2
 622              	.L33:
 623 0014 00000000 		.word	xMinimumEverFreeBytesRemaining
ARM GAS  /tmp/cc1rYgmV.s 			page 21


 624              		.cfi_endproc
 625              	.LFE8:
 627              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 628              		.align	1
 629              		.global	vPortInitialiseBlocks
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-d16
 635              	vPortInitialiseBlocks:
 636              	.LFB9:
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 637              		.loc 1 324 1
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642 0000 80B4     		push	{r7}
 643              	.LCFI18:
 644              		.cfi_def_cfa_offset 4
 645              		.cfi_offset 7, -4
 646 0002 00AF     		add	r7, sp, #0
 647              	.LCFI19:
 648              		.cfi_def_cfa_register 7
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 649              		.loc 1 326 1
 650 0004 00BF     		nop
 651 0006 BD46     		mov	sp, r7
 652              	.LCFI20:
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0008 5DF8047B 		ldr	r7, [sp], #4
 656              	.LCFI21:
 657              		.cfi_restore 7
 658              		.cfi_def_cfa_offset 0
 659 000c 7047     		bx	lr
 660              		.cfi_endproc
 661              	.LFE9:
 663              		.section	.text.prvHeapInit,"ax",%progbits
 664              		.align	1
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-d16
 670              	prvHeapInit:
 671              	.LFB10:
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 672              		.loc 1 330 1
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc1rYgmV.s 			page 22


 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              	.LCFI22:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 85B0     		sub	sp, sp, #20
 682              	.LCFI23:
 683              		.cfi_def_cfa_offset 24
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI24:
 686              		.cfi_def_cfa_register 7
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 687              		.loc 1 334 8
 688 0006 4FF47053 		mov	r3, #15360
 689 000a BB60     		str	r3, [r7, #8]
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
 690              		.loc 1 337 12
 691 000c 274B     		ldr	r3, .L38
 692 000e FB60     		str	r3, [r7, #12]
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 693              		.loc 1 339 18
 694 0010 FB68     		ldr	r3, [r7, #12]
 695 0012 03F00703 		and	r3, r3, #7
 696              		.loc 1 339 4
 697 0016 002B     		cmp	r3, #0
 698 0018 0CD0     		beq	.L37
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 699              		.loc 1 341 13
 700 001a FB68     		ldr	r3, [r7, #12]
 701 001c 0733     		adds	r3, r3, #7
 702 001e FB60     		str	r3, [r7, #12]
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 703              		.loc 1 342 13
 704 0020 FB68     		ldr	r3, [r7, #12]
 705 0022 23F00703 		bic	r3, r3, #7
 706 0026 FB60     		str	r3, [r7, #12]
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 707              		.loc 1 343 18
 708 0028 BA68     		ldr	r2, [r7, #8]
 709 002a FB68     		ldr	r3, [r7, #12]
 710 002c D31A     		subs	r3, r2, r3
 711              		.loc 1 343 33
 712 002e 1F4A     		ldr	r2, .L38
 713              		.loc 1 343 18
 714 0030 1344     		add	r3, r3, r2
 715 0032 BB60     		str	r3, [r7, #8]
 716              	.L37:
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  /tmp/cc1rYgmV.s 			page 23


 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 717              		.loc 1 346 17
 718 0034 FB68     		ldr	r3, [r7, #12]
 719 0036 7B60     		str	r3, [r7, #4]
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 720              		.loc 1 350 25
 721 0038 1D4A     		ldr	r2, .L38+4
 722 003a 7B68     		ldr	r3, [r7, #4]
 723 003c 1360     		str	r3, [r2]
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
 724              		.loc 1 351 20
 725 003e 1C4B     		ldr	r3, .L38+4
 726 0040 0022     		movs	r2, #0
 727 0042 5A60     		str	r2, [r3, #4]
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 728              		.loc 1 355 16
 729 0044 7B68     		ldr	r3, [r7, #4]
 730              		.loc 1 355 12
 731 0046 BA68     		ldr	r2, [r7, #8]
 732 0048 1344     		add	r3, r3, r2
 733 004a FB60     		str	r3, [r7, #12]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
 734              		.loc 1 356 12
 735 004c 0822     		movs	r2, #8
 736 004e FB68     		ldr	r3, [r7, #12]
 737 0050 9B1A     		subs	r3, r3, r2
 738 0052 FB60     		str	r3, [r7, #12]
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 739              		.loc 1 357 12
 740 0054 FB68     		ldr	r3, [r7, #12]
 741 0056 23F00703 		bic	r3, r3, #7
 742 005a FB60     		str	r3, [r7, #12]
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
 743              		.loc 1 358 10
 744 005c FB68     		ldr	r3, [r7, #12]
 745              		.loc 1 358 8
 746 005e 154A     		ldr	r2, .L38+8
 747 0060 1360     		str	r3, [r2]
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
 748              		.loc 1 359 7
 749 0062 144B     		ldr	r3, .L38+8
 750 0064 1B68     		ldr	r3, [r3]
 751              		.loc 1 359 20
 752 0066 0022     		movs	r2, #0
 753 0068 5A60     		str	r2, [r3, #4]
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
 754              		.loc 1 360 7
 755 006a 124B     		ldr	r3, .L38+8
 756 006c 1B68     		ldr	r3, [r3]
 757              		.loc 1 360 25
 758 006e 0022     		movs	r2, #0
ARM GAS  /tmp/cc1rYgmV.s 			page 24


 759 0070 1A60     		str	r2, [r3]
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 760              		.loc 1 364 19
 761 0072 7B68     		ldr	r3, [r7, #4]
 762 0074 3B60     		str	r3, [r7]
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 763              		.loc 1 365 45
 764 0076 3B68     		ldr	r3, [r7]
 765              		.loc 1 365 43
 766 0078 FA68     		ldr	r2, [r7, #12]
 767 007a D21A     		subs	r2, r2, r3
 768              		.loc 1 365 31
 769 007c 3B68     		ldr	r3, [r7]
 770 007e 5A60     		str	r2, [r3, #4]
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 771              		.loc 1 366 36
 772 0080 0C4B     		ldr	r3, .L38+8
 773 0082 1A68     		ldr	r2, [r3]
 774 0084 3B68     		ldr	r3, [r7]
 775 0086 1A60     		str	r2, [r3]
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 776              		.loc 1 369 51
 777 0088 3B68     		ldr	r3, [r7]
 778 008a 5B68     		ldr	r3, [r3, #4]
 779              		.loc 1 369 33
 780 008c 0A4A     		ldr	r2, .L38+12
 781 008e 1360     		str	r3, [r2]
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 782              		.loc 1 370 40
 783 0090 3B68     		ldr	r3, [r7]
 784 0092 5B68     		ldr	r3, [r3, #4]
 785              		.loc 1 370 22
 786 0094 094A     		ldr	r2, .L38+16
 787 0096 1360     		str	r3, [r2]
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 788              		.loc 1 373 21
 789 0098 094B     		ldr	r3, .L38+20
 790 009a 4FF00042 		mov	r2, #-2147483648
 791 009e 1A60     		str	r2, [r3]
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 792              		.loc 1 374 1
 793 00a0 00BF     		nop
 794 00a2 1437     		adds	r7, r7, #20
 795              	.LCFI25:
 796              		.cfi_def_cfa_offset 4
 797 00a4 BD46     		mov	sp, r7
 798              	.LCFI26:
 799              		.cfi_def_cfa_register 13
 800              		@ sp needed
 801 00a6 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cc1rYgmV.s 			page 25


 802              	.LCFI27:
 803              		.cfi_restore 7
 804              		.cfi_def_cfa_offset 0
 805 00aa 7047     		bx	lr
 806              	.L39:
 807              		.align	2
 808              	.L38:
 809 00ac 00000000 		.word	ucHeap
 810 00b0 00000000 		.word	xStart
 811 00b4 00000000 		.word	pxEnd
 812 00b8 00000000 		.word	xMinimumEverFreeBytesRemaining
 813 00bc 00000000 		.word	xFreeBytesRemaining
 814 00c0 00000000 		.word	xBlockAllocatedBit
 815              		.cfi_endproc
 816              	.LFE10:
 818              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 819              		.align	1
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 823              		.fpu fpv5-d16
 825              	prvInsertBlockIntoFreeList:
 826              	.LFB11:
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 827              		.loc 1 378 1
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 16
 830              		@ frame_needed = 1, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 832 0000 80B4     		push	{r7}
 833              	.LCFI28:
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 85B0     		sub	sp, sp, #20
 837              	.LCFI29:
 838              		.cfi_def_cfa_offset 24
 839 0004 00AF     		add	r7, sp, #0
 840              	.LCFI30:
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 843              		.loc 1 384 18
 844 0008 284B     		ldr	r3, .L49
 845 000a FB60     		str	r3, [r7, #12]
 846              		.loc 1 384 2
 847 000c 02E0     		b	.L41
 848              	.L42:
 849              		.loc 1 384 87 discriminator 3
 850 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc1rYgmV.s 			page 26


 851 0010 1B68     		ldr	r3, [r3]
 852 0012 FB60     		str	r3, [r7, #12]
 853              	.L41:
 854              		.loc 1 384 39 discriminator 1
 855 0014 FB68     		ldr	r3, [r7, #12]
 856 0016 1B68     		ldr	r3, [r3]
 857              		.loc 1 384 2 discriminator 1
 858 0018 7A68     		ldr	r2, [r7, #4]
 859 001a 9A42     		cmp	r2, r3
 860 001c F7D8     		bhi	.L42
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 861              		.loc 1 391 6
 862 001e FB68     		ldr	r3, [r7, #12]
 863 0020 BB60     		str	r3, [r7, #8]
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 864              		.loc 1 392 24
 865 0022 FB68     		ldr	r3, [r7, #12]
 866 0024 5B68     		ldr	r3, [r3, #4]
 867              		.loc 1 392 12
 868 0026 BA68     		ldr	r2, [r7, #8]
 869 0028 1344     		add	r3, r3, r2
 870              		.loc 1 392 4
 871 002a 7A68     		ldr	r2, [r7, #4]
 872 002c 9A42     		cmp	r2, r3
 873 002e 08D1     		bne	.L43
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 874              		.loc 1 394 26
 875 0030 FB68     		ldr	r3, [r7, #12]
 876 0032 5A68     		ldr	r2, [r3, #4]
 877              		.loc 1 394 44
 878 0034 7B68     		ldr	r3, [r7, #4]
 879 0036 5B68     		ldr	r3, [r3, #4]
 880              		.loc 1 394 26
 881 0038 1A44     		add	r2, r2, r3
 882 003a FB68     		ldr	r3, [r7, #12]
 883 003c 5A60     		str	r2, [r3, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 884              		.loc 1 395 19
 885 003e FB68     		ldr	r3, [r7, #12]
 886 0040 7B60     		str	r3, [r7, #4]
 887              	.L43:
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
ARM GAS  /tmp/cc1rYgmV.s 			page 27


 888              		.loc 1 404 6
 889 0042 7B68     		ldr	r3, [r7, #4]
 890 0044 BB60     		str	r3, [r7, #8]
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 891              		.loc 1 405 29
 892 0046 7B68     		ldr	r3, [r7, #4]
 893 0048 5B68     		ldr	r3, [r3, #4]
 894              		.loc 1 405 12
 895 004a BA68     		ldr	r2, [r7, #8]
 896 004c 1A44     		add	r2, r2, r3
 897              		.loc 1 405 71
 898 004e FB68     		ldr	r3, [r7, #12]
 899 0050 1B68     		ldr	r3, [r3]
 900              		.loc 1 405 4
 901 0052 9A42     		cmp	r2, r3
 902 0054 18D1     		bne	.L44
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 903              		.loc 1 407 17
 904 0056 FB68     		ldr	r3, [r7, #12]
 905 0058 1A68     		ldr	r2, [r3]
 906              		.loc 1 407 35
 907 005a 154B     		ldr	r3, .L49+4
 908 005c 1B68     		ldr	r3, [r3]
 909              		.loc 1 407 5
 910 005e 9A42     		cmp	r2, r3
 911 0060 0DD0     		beq	.L45
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 912              		.loc 1 410 32
 913 0062 7B68     		ldr	r3, [r7, #4]
 914 0064 5A68     		ldr	r2, [r3, #4]
 915              		.loc 1 410 45
 916 0066 FB68     		ldr	r3, [r7, #12]
 917 0068 1B68     		ldr	r3, [r3]
 918              		.loc 1 410 62
 919 006a 5B68     		ldr	r3, [r3, #4]
 920              		.loc 1 410 32
 921 006c 1A44     		add	r2, r2, r3
 922 006e 7B68     		ldr	r3, [r7, #4]
 923 0070 5A60     		str	r2, [r3, #4]
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 924              		.loc 1 411 49
 925 0072 FB68     		ldr	r3, [r7, #12]
 926 0074 1B68     		ldr	r3, [r3]
 927              		.loc 1 411 66
 928 0076 1A68     		ldr	r2, [r3]
 929              		.loc 1 411 37
 930 0078 7B68     		ldr	r3, [r7, #4]
 931 007a 1A60     		str	r2, [r3]
 932 007c 08E0     		b	.L46
 933              	.L45:
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
ARM GAS  /tmp/cc1rYgmV.s 			page 28


 934              		.loc 1 415 37
 935 007e 0C4B     		ldr	r3, .L49+4
 936 0080 1A68     		ldr	r2, [r3]
 937 0082 7B68     		ldr	r3, [r7, #4]
 938 0084 1A60     		str	r2, [r3]
 939 0086 03E0     		b	.L46
 940              	.L44:
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 941              		.loc 1 420 48
 942 0088 FB68     		ldr	r3, [r7, #12]
 943 008a 1A68     		ldr	r2, [r3]
 944              		.loc 1 420 36
 945 008c 7B68     		ldr	r3, [r7, #4]
 946 008e 1A60     		str	r2, [r3]
 947              	.L46:
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 948              		.loc 1 427 4
 949 0090 FA68     		ldr	r2, [r7, #12]
 950 0092 7B68     		ldr	r3, [r7, #4]
 951 0094 9A42     		cmp	r2, r3
 952 0096 02D0     		beq	.L48
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 953              		.loc 1 429 31
 954 0098 FB68     		ldr	r3, [r7, #12]
 955 009a 7A68     		ldr	r2, [r7, #4]
 956 009c 1A60     		str	r2, [r3]
 957              	.L48:
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 958              		.loc 1 435 1
 959 009e 00BF     		nop
 960 00a0 1437     		adds	r7, r7, #20
 961              	.LCFI31:
 962              		.cfi_def_cfa_offset 4
 963 00a2 BD46     		mov	sp, r7
 964              	.LCFI32:
 965              		.cfi_def_cfa_register 13
 966              		@ sp needed
 967 00a4 5DF8047B 		ldr	r7, [sp], #4
 968              	.LCFI33:
 969              		.cfi_restore 7
 970              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc1rYgmV.s 			page 29


 971 00a8 7047     		bx	lr
 972              	.L50:
 973 00aa 00BF     		.align	2
 974              	.L49:
 975 00ac 00000000 		.word	xStart
 976 00b0 00000000 		.word	pxEnd
 977              		.cfi_endproc
 978              	.LFE11:
 980              		.text
 981              	.Letext0:
 982              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 983              		.file 4 "/usr/include/newlib/sys/_types.h"
 984              		.file 5 "/usr/include/newlib/sys/reent.h"
 985              		.file 6 "/usr/include/newlib/sys/lock.h"
 986              		.file 7 "/usr/include/newlib/stdlib.h"
 987              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 988              		.file 9 "Core/Inc/FreeRTOSConfig.h"
ARM GAS  /tmp/cc1rYgmV.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_4.c
     /tmp/cc1rYgmV.s:17     .bss.ucHeap:0000000000000000 $d
     /tmp/cc1rYgmV.s:20     .bss.ucHeap:0000000000000000 ucHeap
     /tmp/cc1rYgmV.s:23     .rodata.xHeapStructSize:0000000000000000 $d
     /tmp/cc1rYgmV.s:26     .rodata.xHeapStructSize:0000000000000000 xHeapStructSize
     /tmp/cc1rYgmV.s:29     .bss.xStart:0000000000000000 $d
     /tmp/cc1rYgmV.s:32     .bss.xStart:0000000000000000 xStart
     /tmp/cc1rYgmV.s:35     .bss.pxEnd:0000000000000000 $d
     /tmp/cc1rYgmV.s:38     .bss.pxEnd:0000000000000000 pxEnd
     /tmp/cc1rYgmV.s:41     .bss.xFreeBytesRemaining:0000000000000000 $d
     /tmp/cc1rYgmV.s:44     .bss.xFreeBytesRemaining:0000000000000000 xFreeBytesRemaining
     /tmp/cc1rYgmV.s:47     .bss.xMinimumEverFreeBytesRemaining:0000000000000000 $d
     /tmp/cc1rYgmV.s:50     .bss.xMinimumEverFreeBytesRemaining:0000000000000000 xMinimumEverFreeBytesRemaining
     /tmp/cc1rYgmV.s:53     .bss.xBlockAllocatedBit:0000000000000000 $d
     /tmp/cc1rYgmV.s:56     .bss.xBlockAllocatedBit:0000000000000000 xBlockAllocatedBit
     /tmp/cc1rYgmV.s:59     .text.pvPortMalloc:0000000000000000 $t
     /tmp/cc1rYgmV.s:67     .text.pvPortMalloc:0000000000000000 pvPortMalloc
     /tmp/cc1rYgmV.s:670    .text.prvHeapInit:0000000000000000 prvHeapInit
     /tmp/cc1rYgmV.s:825    .text.prvInsertBlockIntoFreeList:0000000000000000 prvInsertBlockIntoFreeList
     /tmp/cc1rYgmV.s:368    .text.pvPortMalloc:0000000000000180 $d
     /tmp/cc1rYgmV.s:377    .text.vPortFree:0000000000000000 $t
     /tmp/cc1rYgmV.s:384    .text.vPortFree:0000000000000000 vPortFree
     /tmp/cc1rYgmV.s:536    .text.vPortFree:00000000000000b4 $d
     /tmp/cc1rYgmV.s:542    .text.xPortGetFreeHeapSize:0000000000000000 $t
     /tmp/cc1rYgmV.s:549    .text.xPortGetFreeHeapSize:0000000000000000 xPortGetFreeHeapSize
     /tmp/cc1rYgmV.s:580    .text.xPortGetFreeHeapSize:0000000000000014 $d
     /tmp/cc1rYgmV.s:585    .text.xPortGetMinimumEverFreeHeapSize:0000000000000000 $t
     /tmp/cc1rYgmV.s:592    .text.xPortGetMinimumEverFreeHeapSize:0000000000000000 xPortGetMinimumEverFreeHeapSize
     /tmp/cc1rYgmV.s:623    .text.xPortGetMinimumEverFreeHeapSize:0000000000000014 $d
     /tmp/cc1rYgmV.s:628    .text.vPortInitialiseBlocks:0000000000000000 $t
     /tmp/cc1rYgmV.s:635    .text.vPortInitialiseBlocks:0000000000000000 vPortInitialiseBlocks
     /tmp/cc1rYgmV.s:664    .text.prvHeapInit:0000000000000000 $t
     /tmp/cc1rYgmV.s:809    .text.prvHeapInit:00000000000000ac $d
     /tmp/cc1rYgmV.s:819    .text.prvInsertBlockIntoFreeList:0000000000000000 $t
     /tmp/cc1rYgmV.s:975    .text.prvInsertBlockIntoFreeList:00000000000000ac $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
