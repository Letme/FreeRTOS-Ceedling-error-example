ARM GAS  /tmp/ccGNfTzm.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"queue.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	xQueueRegistry,64,4
  17              		.section	.text.xQueueGenericReset,"ax",%progbits
  18              		.align	1
  19              		.global	xQueueGenericReset
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	xQueueGenericReset:
  27              	.LFB5:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  /tmp/ccGNfTzm.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  /tmp/ccGNfTzm.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  29              		.loc 1 256 1
  30              		.cfi_startproc
ARM GAS  /tmp/ccGNfTzm.s 			page 6


  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
  46              		.loc 1 257 17
  47 000a 7B68     		ldr	r3, [r7, #4]
  48 000c FB60     		str	r3, [r7, #12]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
  49              		.loc 1 259 2
  50 000e FB68     		ldr	r3, [r7, #12]
  51 0010 002B     		cmp	r3, #0
  52 0012 0CD1     		bne	.L2
  53              	.LBB104:
  54              	.LBB105:
  55              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
ARM GAS  /tmp/ccGNfTzm.s 			page 7


  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
ARM GAS  /tmp/ccGNfTzm.s 			page 8


  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
ARM GAS  /tmp/ccGNfTzm.s 			page 9


 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
  56              		.loc 2 195 2
  57              		.syntax unified
  58              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
  59 0014 4FF05003 			mov r3, #80												
  60 0018 72B6     		cpsid i													
ARM GAS  /tmp/ccGNfTzm.s 			page 10


  61 001a 83F31188 		msr basepri, r3											
  62 001e BFF36F8F 		isb														
  63 0022 BFF34F8F 		dsb														
  64 0026 62B6     		cpsie i													
  65              	
  66              	@ 0 "" 2
  67              		.thumb
  68              		.syntax unified
  69 0028 BB60     		str	r3, [r7, #8]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
  70              		.loc 2 205 1
  71 002a 00BF     		nop
  72              	.L3:
  73              	.LBE105:
  74              	.LBE104:
  75              		.loc 1 259 2 discriminator 1
  76 002c FEE7     		b	.L3
  77              	.L2:
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  78              		.loc 1 261 2
  79 002e FFF7FEFF 		bl	vPortEnterCritical
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
  80              		.loc 1 263 37
  81 0032 FB68     		ldr	r3, [r7, #12]
  82 0034 1A68     		ldr	r2, [r3]
  83              		.loc 1 263 57
  84 0036 FB68     		ldr	r3, [r7, #12]
  85 0038 DB6B     		ldr	r3, [r3, #60]
  86              		.loc 1 263 77
  87 003a F968     		ldr	r1, [r7, #12]
  88 003c 096C     		ldr	r1, [r1, #64]
  89              		.loc 1 263 68
  90 003e 01FB03F3 		mul	r3, r1, r3
  91              		.loc 1 263 46
  92 0042 1A44     		add	r2, r2, r3
  93              		.loc 1 263 28
  94 0044 FB68     		ldr	r3, [r7, #12]
  95 0046 9A60     		str	r2, [r3, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  96              		.loc 1 264 30
  97 0048 FB68     		ldr	r3, [r7, #12]
  98 004a 0022     		movs	r2, #0
  99 004c 9A63     		str	r2, [r3, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 100              		.loc 1 265 31
 101 004e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccGNfTzm.s 			page 11


 102 0050 1A68     		ldr	r2, [r3]
 103              		.loc 1 265 22
 104 0052 FB68     		ldr	r3, [r7, #12]
 105 0054 5A60     		str	r2, [r3, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 106              		.loc 1 266 41
 107 0056 FB68     		ldr	r3, [r7, #12]
 108 0058 1A68     		ldr	r2, [r3]
 109              		.loc 1 266 63
 110 005a FB68     		ldr	r3, [r7, #12]
 111 005c DB6B     		ldr	r3, [r3, #60]
 112              		.loc 1 266 74
 113 005e 013B     		subs	r3, r3, #1
 114              		.loc 1 266 90
 115 0060 F968     		ldr	r1, [r7, #12]
 116 0062 096C     		ldr	r1, [r1, #64]
 117              		.loc 1 266 81
 118 0064 01FB03F3 		mul	r3, r1, r3
 119              		.loc 1 266 50
 120 0068 1A44     		add	r2, r2, r3
 121              		.loc 1 266 32
 122 006a FB68     		ldr	r3, [r7, #12]
 123 006c DA60     		str	r2, [r3, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 124              		.loc 1 267 20
 125 006e FB68     		ldr	r3, [r7, #12]
 126 0070 FF22     		movs	r2, #255
 127 0072 83F84420 		strb	r2, [r3, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 128              		.loc 1 268 20
 129 0076 FB68     		ldr	r3, [r7, #12]
 130 0078 FF22     		movs	r2, #255
 131 007a 83F84520 		strb	r2, [r3, #69]
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 132              		.loc 1 270 5
 133 007e 3B68     		ldr	r3, [r7]
 134 0080 002B     		cmp	r3, #0
 135 0082 14D1     		bne	.L4
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 136              		.loc 1 277 8
 137 0084 FB68     		ldr	r3, [r7, #12]
 138 0086 1B69     		ldr	r3, [r3, #16]
 139              		.loc 1 277 6
 140 0088 002B     		cmp	r3, #0
 141 008a 1AD0     		beq	.L5
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 142              		.loc 1 279 35
 143 008c FB68     		ldr	r3, [r7, #12]
 144 008e 1033     		adds	r3, r3, #16
ARM GAS  /tmp/ccGNfTzm.s 			page 12


 145              		.loc 1 279 9
 146 0090 1846     		mov	r0, r3
 147 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 148 0096 0346     		mov	r3, r0
 149              		.loc 1 279 7
 150 0098 002B     		cmp	r3, #0
 151 009a 12D0     		beq	.L5
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 152              		.loc 1 281 6
 153 009c 0C4B     		ldr	r3, .L7
 154 009e 4FF08052 		mov	r2, #268435456
 155 00a2 1A60     		str	r2, [r3]
 156              		.syntax unified
 157              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 158 00a4 BFF34F8F 		dsb
 159              	@ 0 "" 2
 160              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 161 00a8 BFF36F8F 		isb
 162              	@ 0 "" 2
 163              		.thumb
 164              		.syntax unified
 165 00ac 09E0     		b	.L5
 166              	.L4:
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 167              		.loc 1 296 4
 168 00ae FB68     		ldr	r3, [r7, #12]
 169 00b0 1033     		adds	r3, r3, #16
 170 00b2 1846     		mov	r0, r3
 171 00b4 FFF7FEFF 		bl	vListInitialise
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 172              		.loc 1 297 4
 173 00b8 FB68     		ldr	r3, [r7, #12]
 174 00ba 2433     		adds	r3, r3, #36
 175 00bc 1846     		mov	r0, r3
 176 00be FFF7FEFF 		bl	vListInitialise
 177              	.L5:
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 178              		.loc 1 300 2
 179 00c2 FFF7FEFF 		bl	vPortExitCritical
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 13


 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 180              		.loc 1 304 9
 181 00c6 0123     		movs	r3, #1
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 182              		.loc 1 305 1
 183 00c8 1846     		mov	r0, r3
 184 00ca 1037     		adds	r7, r7, #16
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
 187 00cc BD46     		mov	sp, r7
 188              	.LCFI4:
 189              		.cfi_def_cfa_register 13
 190              		@ sp needed
 191 00ce 80BD     		pop	{r7, pc}
 192              	.L8:
 193              		.align	2
 194              	.L7:
 195 00d0 04ED00E0 		.word	-536810236
 196              		.cfi_endproc
 197              	.LFE5:
 199              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 200              		.align	1
 201              		.global	xQueueGenericCreateStatic
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-d16
 207              	xQueueGenericCreateStatic:
 208              	.LFB6:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 209              		.loc 1 311 2
 210              		.cfi_startproc
 211              		@ args = 4, pretend = 0, frame = 48
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 8EB0     		sub	sp, sp, #56
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 64
 221 0004 02AF     		add	r7, sp, #8
 222              	.LCFI7:
 223              		.cfi_def_cfa 7, 56
 224 0006 F860     		str	r0, [r7, #12]
 225 0008 B960     		str	r1, [r7, #8]
 226 000a 7A60     		str	r2, [r7, #4]
 227 000c 3B60     		str	r3, [r7]
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
ARM GAS  /tmp/ccGNfTzm.s 			page 14


 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 228              		.loc 1 314 3
 229 000e FB68     		ldr	r3, [r7, #12]
 230 0010 002B     		cmp	r3, #0
 231 0012 0CD1     		bne	.L10
 232              	.LBB106:
 233              	.LBB107:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 234              		.loc 2 195 2
 235              		.syntax unified
 236              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 237 0014 4FF05003 			mov r3, #80												
 238 0018 72B6     		cpsid i													
 239 001a 83F31188 		msr basepri, r3											
 240 001e BFF36F8F 		isb														
 241 0022 BFF34F8F 		dsb														
 242 0026 62B6     		cpsie i													
 243              	
 244              	@ 0 "" 2
 245              		.thumb
 246              		.syntax unified
 247 0028 BB62     		str	r3, [r7, #40]
 248              		.loc 2 205 1
 249 002a 00BF     		nop
 250              	.L11:
 251              	.LBE107:
 252              	.LBE106:
 253              		.loc 1 314 3 discriminator 1
 254 002c FEE7     		b	.L11
 255              	.L10:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 256              		.loc 1 318 3
 257 002e 3B68     		ldr	r3, [r7]
 258 0030 002B     		cmp	r3, #0
 259 0032 0CD1     		bne	.L12
 260              	.LBB108:
 261              	.LBB109:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 262              		.loc 2 195 2
 263              		.syntax unified
 264              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 265 0034 4FF05003 			mov r3, #80												
 266 0038 72B6     		cpsid i													
 267 003a 83F31188 		msr basepri, r3											
 268 003e BFF36F8F 		isb														
 269 0042 BFF34F8F 		dsb														
 270 0046 62B6     		cpsie i													
 271              	
 272              	@ 0 "" 2
 273              		.thumb
 274              		.syntax unified
 275 0048 7B62     		str	r3, [r7, #36]
 276              		.loc 2 205 1
ARM GAS  /tmp/ccGNfTzm.s 			page 15


 277 004a 00BF     		nop
 278              	.L13:
 279              	.LBE109:
 280              	.LBE108:
 281              		.loc 1 318 3 discriminator 2
 282 004c FEE7     		b	.L13
 283              	.L12:
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 284              		.loc 1 322 3
 285 004e 7B68     		ldr	r3, [r7, #4]
 286 0050 002B     		cmp	r3, #0
 287 0052 02D0     		beq	.L14
 288              		.loc 1 322 3 is_stmt 0 discriminator 2
 289 0054 BB68     		ldr	r3, [r7, #8]
 290 0056 002B     		cmp	r3, #0
 291 0058 01D0     		beq	.L15
 292              	.L14:
 293              		.loc 1 322 3 discriminator 3
 294 005a 0123     		movs	r3, #1
 295 005c 00E0     		b	.L16
 296              	.L15:
 297              		.loc 1 322 3 discriminator 4
 298 005e 0023     		movs	r3, #0
 299              	.L16:
 300              		.loc 1 322 3 discriminator 6
 301 0060 002B     		cmp	r3, #0
 302 0062 0CD1     		bne	.L17
 303              	.LBB110:
 304              	.LBB111:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 305              		.loc 2 195 2 is_stmt 1
 306              		.syntax unified
 307              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 308 0064 4FF05003 			mov r3, #80												
 309 0068 72B6     		cpsid i													
 310 006a 83F31188 		msr basepri, r3											
 311 006e BFF36F8F 		isb														
 312 0072 BFF34F8F 		dsb														
 313 0076 62B6     		cpsie i													
 314              	
 315              	@ 0 "" 2
 316              		.thumb
 317              		.syntax unified
 318 0078 3B62     		str	r3, [r7, #32]
 319              		.loc 2 205 1
 320 007a 00BF     		nop
 321              	.L18:
 322              	.LBE111:
 323              	.LBE110:
 324              		.loc 1 322 3 discriminator 3
 325 007c FEE7     		b	.L18
 326              	.L17:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 327              		.loc 1 323 3
ARM GAS  /tmp/ccGNfTzm.s 			page 16


 328 007e 7B68     		ldr	r3, [r7, #4]
 329 0080 002B     		cmp	r3, #0
 330 0082 02D1     		bne	.L19
 331              		.loc 1 323 3 is_stmt 0 discriminator 2
 332 0084 BB68     		ldr	r3, [r7, #8]
 333 0086 002B     		cmp	r3, #0
 334 0088 01D1     		bne	.L20
 335              	.L19:
 336              		.loc 1 323 3 discriminator 3
 337 008a 0123     		movs	r3, #1
 338 008c 00E0     		b	.L21
 339              	.L20:
 340              		.loc 1 323 3 discriminator 4
 341 008e 0023     		movs	r3, #0
 342              	.L21:
 343              		.loc 1 323 3 discriminator 6
 344 0090 002B     		cmp	r3, #0
 345 0092 0CD1     		bne	.L22
 346              	.LBB112:
 347              	.LBB113:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 348              		.loc 2 195 2 is_stmt 1
 349              		.syntax unified
 350              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 351 0094 4FF05003 			mov r3, #80												
 352 0098 72B6     		cpsid i													
 353 009a 83F31188 		msr basepri, r3											
 354 009e BFF36F8F 		isb														
 355 00a2 BFF34F8F 		dsb														
 356 00a6 62B6     		cpsie i													
 357              	
 358              	@ 0 "" 2
 359              		.thumb
 360              		.syntax unified
 361 00a8 FB61     		str	r3, [r7, #28]
 362              		.loc 2 205 1
 363 00aa 00BF     		nop
 364              	.L23:
 365              	.LBE113:
 366              	.LBE112:
 367              		.loc 1 323 3 discriminator 4
 368 00ac FEE7     		b	.L23
 369              	.L22:
 370              	.LBB114:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 371              		.loc 1 330 20
 372 00ae 4823     		movs	r3, #72
 373 00b0 7B61     		str	r3, [r7, #20]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 374              		.loc 1 331 4
 375 00b2 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccGNfTzm.s 			page 17


 376 00b4 482B     		cmp	r3, #72
 377 00b6 0CD0     		beq	.L24
 378              	.LBB115:
 379              	.LBB116:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 380              		.loc 2 195 2
 381              		.syntax unified
 382              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 383 00b8 4FF05003 			mov r3, #80												
 384 00bc 72B6     		cpsid i													
 385 00be 83F31188 		msr basepri, r3											
 386 00c2 BFF36F8F 		isb														
 387 00c6 BFF34F8F 		dsb														
 388 00ca 62B6     		cpsie i													
 389              	
 390              	@ 0 "" 2
 391              		.thumb
 392              		.syntax unified
 393 00cc BB61     		str	r3, [r7, #24]
 394              		.loc 2 205 1
 395 00ce 00BF     		nop
 396              	.L25:
 397              	.LBE116:
 398              	.LBE115:
 399              		.loc 1 331 4 discriminator 5
 400 00d0 FEE7     		b	.L25
 401              	.L24:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 402              		.loc 1 332 4
 403 00d2 7B69     		ldr	r3, [r7, #20]
 404              	.LBE114:
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 405              		.loc 1 339 14
 406 00d4 3B68     		ldr	r3, [r7]
 407 00d6 FB62     		str	r3, [r7, #44]
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 408              		.loc 1 341 5
 409 00d8 FB6A     		ldr	r3, [r7, #44]
 410 00da 002B     		cmp	r3, #0
 411 00dc 0DD0     		beq	.L26
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 412              		.loc 1 348 39
 413 00de FB6A     		ldr	r3, [r7, #44]
 414 00e0 0122     		movs	r2, #1
ARM GAS  /tmp/ccGNfTzm.s 			page 18


 415 00e2 83F84620 		strb	r2, [r3, #70]
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 416              		.loc 1 352 4
 417 00e6 97F83820 		ldrb	r2, [r7, #56]	@ zero_extendqisi2
 418 00ea FB6A     		ldr	r3, [r7, #44]
 419 00ec 0093     		str	r3, [sp]
 420 00ee 1346     		mov	r3, r2
 421 00f0 7A68     		ldr	r2, [r7, #4]
 422 00f2 B968     		ldr	r1, [r7, #8]
 423 00f4 F868     		ldr	r0, [r7, #12]
 424 00f6 FFF7FEFF 		bl	prvInitialiseNewQueue
 425              	.L26:
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 426              		.loc 1 360 10
 427 00fa FB6A     		ldr	r3, [r7, #44]
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 428              		.loc 1 361 2
 429 00fc 1846     		mov	r0, r3
 430 00fe 3037     		adds	r7, r7, #48
 431              	.LCFI8:
 432              		.cfi_def_cfa_offset 8
 433 0100 BD46     		mov	sp, r7
 434              	.LCFI9:
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 0102 80BD     		pop	{r7, pc}
 438              		.cfi_endproc
 439              	.LFE6:
 441              		.section	.text.xQueueGenericCreate,"ax",%progbits
 442              		.align	1
 443              		.global	xQueueGenericCreate
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv5-d16
 449              	xQueueGenericCreate:
 450              	.LFB7:
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 451              		.loc 1 369 2
 452              		.cfi_startproc
ARM GAS  /tmp/ccGNfTzm.s 			page 19


 453              		@ args = 0, pretend = 0, frame = 32
 454              		@ frame_needed = 1, uses_anonymous_args = 0
 455 0000 80B5     		push	{r7, lr}
 456              	.LCFI10:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 8AB0     		sub	sp, sp, #40
 461              	.LCFI11:
 462              		.cfi_def_cfa_offset 48
 463 0004 02AF     		add	r7, sp, #8
 464              	.LCFI12:
 465              		.cfi_def_cfa 7, 40
 466 0006 F860     		str	r0, [r7, #12]
 467 0008 B960     		str	r1, [r7, #8]
 468 000a 1346     		mov	r3, r2
 469 000c FB71     		strb	r3, [r7, #7]
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 470              		.loc 1 374 3
 471 000e FB68     		ldr	r3, [r7, #12]
 472 0010 002B     		cmp	r3, #0
 473 0012 0CD1     		bne	.L29
 474              	.LBB117:
 475              	.LBB118:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 476              		.loc 2 195 2
 477              		.syntax unified
 478              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 479 0014 4FF05003 			mov r3, #80												
 480 0018 72B6     		cpsid i													
 481 001a 83F31188 		msr basepri, r3											
 482 001e BFF36F8F 		isb														
 483 0022 BFF34F8F 		dsb														
 484 0026 62B6     		cpsie i													
 485              	
 486              	@ 0 "" 2
 487              		.thumb
 488              		.syntax unified
 489 0028 3B61     		str	r3, [r7, #16]
 490              		.loc 2 205 1
 491 002a 00BF     		nop
 492              	.L30:
 493              	.LBE118:
 494              	.LBE117:
 495              		.loc 1 374 3 discriminator 1
 496 002c FEE7     		b	.L30
 497              	.L29:
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 498              		.loc 1 376 5
 499 002e BB68     		ldr	r3, [r7, #8]
 500 0030 002B     		cmp	r3, #0
 501 0032 02D1     		bne	.L31
ARM GAS  /tmp/ccGNfTzm.s 			page 20


 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 502              		.loc 1 379 22
 503 0034 0023     		movs	r3, #0
 504 0036 FB61     		str	r3, [r7, #28]
 505 0038 04E0     		b	.L32
 506              	.L31:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 507              		.loc 1 385 22
 508 003a FB68     		ldr	r3, [r7, #12]
 509 003c BA68     		ldr	r2, [r7, #8]
 510 003e 02FB03F3 		mul	r3, r2, r3
 511 0042 FB61     		str	r3, [r7, #28]
 512              	.L32:
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 513              		.loc 1 397 30
 514 0044 FB69     		ldr	r3, [r7, #28]
 515 0046 4833     		adds	r3, r3, #72
 516 0048 1846     		mov	r0, r3
 517 004a FFF7FEFF 		bl	pvPortMalloc
 518 004e B861     		str	r0, [r7, #24]
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 519              		.loc 1 399 5
 520 0050 BB69     		ldr	r3, [r7, #24]
 521 0052 002B     		cmp	r3, #0
 522 0054 11D0     		beq	.L33
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 523              		.loc 1 403 20
 524 0056 BB69     		ldr	r3, [r7, #24]
 525 0058 7B61     		str	r3, [r7, #20]
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 526              		.loc 1 404 20
 527 005a 7B69     		ldr	r3, [r7, #20]
 528 005c 4833     		adds	r3, r3, #72
 529 005e 7B61     		str	r3, [r7, #20]
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 21


 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 530              		.loc 1 411 39
 531 0060 BB69     		ldr	r3, [r7, #24]
 532 0062 0022     		movs	r2, #0
 533 0064 83F84620 		strb	r2, [r3, #70]
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 534              		.loc 1 415 4
 535 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 536 006a BB69     		ldr	r3, [r7, #24]
 537 006c 0093     		str	r3, [sp]
 538 006e 1346     		mov	r3, r2
 539 0070 7A69     		ldr	r2, [r7, #20]
 540 0072 B968     		ldr	r1, [r7, #8]
 541 0074 F868     		ldr	r0, [r7, #12]
 542 0076 FFF7FEFF 		bl	prvInitialiseNewQueue
 543              	.L33:
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 544              		.loc 1 423 10
 545 007a BB69     		ldr	r3, [r7, #24]
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 546              		.loc 1 424 2
 547 007c 1846     		mov	r0, r3
 548 007e 2037     		adds	r7, r7, #32
 549              	.LCFI13:
 550              		.cfi_def_cfa_offset 8
 551 0080 BD46     		mov	sp, r7
 552              	.LCFI14:
 553              		.cfi_def_cfa_register 13
 554              		@ sp needed
 555 0082 80BD     		pop	{r7, pc}
 556              		.cfi_endproc
 557              	.LFE7:
 559              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 560              		.align	1
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv5-d16
 566              	prvInitialiseNewQueue:
 567              	.LFB8:
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
ARM GAS  /tmp/ccGNfTzm.s 			page 22


 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 568              		.loc 1 430 1
 569              		.cfi_startproc
 570              		@ args = 4, pretend = 0, frame = 16
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 80B5     		push	{r7, lr}
 573              	.LCFI15:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 84B0     		sub	sp, sp, #16
 578              	.LCFI16:
 579              		.cfi_def_cfa_offset 24
 580 0004 00AF     		add	r7, sp, #0
 581              	.LCFI17:
 582              		.cfi_def_cfa_register 7
 583 0006 F860     		str	r0, [r7, #12]
 584 0008 B960     		str	r1, [r7, #8]
 585 000a 7A60     		str	r2, [r7, #4]
 586 000c FB70     		strb	r3, [r7, #3]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 587              		.loc 1 435 4
 588 000e BB68     		ldr	r3, [r7, #8]
 589 0010 002B     		cmp	r3, #0
 590 0012 03D1     		bne	.L36
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 591              		.loc 1 441 22
 592 0014 BB69     		ldr	r3, [r7, #24]
 593 0016 BA69     		ldr	r2, [r7, #24]
 594 0018 1A60     		str	r2, [r3]
 595 001a 02E0     		b	.L37
 596              	.L36:
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 597              		.loc 1 446 22
 598 001c BB69     		ldr	r3, [r7, #24]
 599 001e 7A68     		ldr	r2, [r7, #4]
 600 0020 1A60     		str	r2, [r3]
 601              	.L37:
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
ARM GAS  /tmp/ccGNfTzm.s 			page 23


 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 602              		.loc 1 451 23
 603 0022 BB69     		ldr	r3, [r7, #24]
 604 0024 FA68     		ldr	r2, [r7, #12]
 605 0026 DA63     		str	r2, [r3, #60]
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 606              		.loc 1 452 25
 607 0028 BB69     		ldr	r3, [r7, #24]
 608 002a BA68     		ldr	r2, [r7, #8]
 609 002c 1A64     		str	r2, [r3, #64]
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 610              		.loc 1 453 11
 611 002e 0121     		movs	r1, #1
 612 0030 B869     		ldr	r0, [r7, #24]
 613 0032 FFF7FEFF 		bl	xQueueGenericReset
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 614              		.loc 1 468 1
 615 0036 00BF     		nop
 616 0038 1037     		adds	r7, r7, #16
 617              	.LCFI18:
 618              		.cfi_def_cfa_offset 8
 619 003a BD46     		mov	sp, r7
 620              	.LCFI19:
 621              		.cfi_def_cfa_register 13
 622              		@ sp needed
 623 003c 80BD     		pop	{r7, pc}
 624              		.cfi_endproc
 625              	.LFE8:
 627              		.section	.text.prvInitialiseMutex,"ax",%progbits
 628              		.align	1
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 632              		.fpu fpv5-d16
 634              	prvInitialiseMutex:
 635              	.LFB9:
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/ccGNfTzm.s 			page 24


 636              		.loc 1 474 2
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 8
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              	.LCFI20:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 82B0     		sub	sp, sp, #8
 646              	.LCFI21:
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              	.LCFI22:
 650              		.cfi_def_cfa_register 7
 651 0006 7860     		str	r0, [r7, #4]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 652              		.loc 1 475 5
 653 0008 7B68     		ldr	r3, [r7, #4]
 654 000a 002B     		cmp	r3, #0
 655 000c 0ED0     		beq	.L40
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 656              		.loc 1 481 42
 657 000e 7B68     		ldr	r3, [r7, #4]
 658 0010 0022     		movs	r2, #0
 659 0012 9A60     		str	r2, [r3, #8]
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 660              		.loc 1 482 28
 661 0014 7B68     		ldr	r3, [r7, #4]
 662 0016 0022     		movs	r2, #0
 663 0018 1A60     		str	r2, [r3]
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 664              		.loc 1 485 50
 665 001a 7B68     		ldr	r3, [r7, #4]
 666 001c 0022     		movs	r2, #0
 667 001e DA60     		str	r2, [r3, #12]
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 668              		.loc 1 490 13
 669 0020 0023     		movs	r3, #0
 670 0022 0022     		movs	r2, #0
 671 0024 0021     		movs	r1, #0
 672 0026 7868     		ldr	r0, [r7, #4]
 673 0028 FFF7FEFF 		bl	xQueueGenericSend
 674              	.L40:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  /tmp/ccGNfTzm.s 			page 25


 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 675              		.loc 1 496 2
 676 002c 00BF     		nop
 677 002e 0837     		adds	r7, r7, #8
 678              	.LCFI23:
 679              		.cfi_def_cfa_offset 8
 680 0030 BD46     		mov	sp, r7
 681              	.LCFI24:
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 0032 80BD     		pop	{r7, pc}
 685              		.cfi_endproc
 686              	.LFE9:
 688              		.section	.text.xQueueCreateMutex,"ax",%progbits
 689              		.align	1
 690              		.global	xQueueCreateMutex
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv5-d16
 696              	xQueueCreateMutex:
 697              	.LFB10:
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 698              		.loc 1 504 2
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 24
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 80B5     		push	{r7, lr}
 703              	.LCFI25:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 86B0     		sub	sp, sp, #24
 708              	.LCFI26:
 709              		.cfi_def_cfa_offset 32
 710 0004 00AF     		add	r7, sp, #0
 711              	.LCFI27:
 712              		.cfi_def_cfa_register 7
 713 0006 0346     		mov	r3, r0
 714 0008 FB71     		strb	r3, [r7, #7]
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 715              		.loc 1 506 20
 716 000a 0123     		movs	r3, #1
 717 000c 7B61     		str	r3, [r7, #20]
 718              		.loc 1 506 55
 719 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccGNfTzm.s 			page 26


 720 0010 3B61     		str	r3, [r7, #16]
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 721              		.loc 1 508 15
 722 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723 0014 1A46     		mov	r2, r3
 724 0016 3969     		ldr	r1, [r7, #16]
 725 0018 7869     		ldr	r0, [r7, #20]
 726 001a FFF7FEFF 		bl	xQueueGenericCreate
 727 001e F860     		str	r0, [r7, #12]
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 728              		.loc 1 509 3
 729 0020 F868     		ldr	r0, [r7, #12]
 730 0022 FFF7FEFF 		bl	prvInitialiseMutex
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 731              		.loc 1 511 10
 732 0026 FB68     		ldr	r3, [r7, #12]
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 733              		.loc 1 512 2
 734 0028 1846     		mov	r0, r3
 735 002a 1837     		adds	r7, r7, #24
 736              	.LCFI28:
 737              		.cfi_def_cfa_offset 8
 738 002c BD46     		mov	sp, r7
 739              	.LCFI29:
 740              		.cfi_def_cfa_register 13
 741              		@ sp needed
 742 002e 80BD     		pop	{r7, pc}
 743              		.cfi_endproc
 744              	.LFE10:
 746              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 747              		.align	1
 748              		.global	xQueueCreateMutexStatic
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu fpv5-d16
 754              	xQueueCreateMutexStatic:
 755              	.LFB11:
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 756              		.loc 1 520 2
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 24
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 80B5     		push	{r7, lr}
 761              	.LCFI30:
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
ARM GAS  /tmp/ccGNfTzm.s 			page 27


 765 0002 88B0     		sub	sp, sp, #32
 766              	.LCFI31:
 767              		.cfi_def_cfa_offset 40
 768 0004 02AF     		add	r7, sp, #8
 769              	.LCFI32:
 770              		.cfi_def_cfa 7, 32
 771 0006 0346     		mov	r3, r0
 772 0008 3960     		str	r1, [r7]
 773 000a FB71     		strb	r3, [r7, #7]
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 774              		.loc 1 522 20
 775 000c 0123     		movs	r3, #1
 776 000e 7B61     		str	r3, [r7, #20]
 777              		.loc 1 522 55
 778 0010 0023     		movs	r3, #0
 779 0012 3B61     		str	r3, [r7, #16]
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 780              		.loc 1 528 15
 781 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 782 0016 0093     		str	r3, [sp]
 783 0018 3B68     		ldr	r3, [r7]
 784 001a 0022     		movs	r2, #0
 785 001c 3969     		ldr	r1, [r7, #16]
 786 001e 7869     		ldr	r0, [r7, #20]
 787 0020 FFF7FEFF 		bl	xQueueGenericCreateStatic
 788 0024 F860     		str	r0, [r7, #12]
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 789              		.loc 1 529 3
 790 0026 F868     		ldr	r0, [r7, #12]
 791 0028 FFF7FEFF 		bl	prvInitialiseMutex
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 792              		.loc 1 531 10
 793 002c FB68     		ldr	r3, [r7, #12]
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 794              		.loc 1 532 2
 795 002e 1846     		mov	r0, r3
 796 0030 1837     		adds	r7, r7, #24
 797              	.LCFI33:
 798              		.cfi_def_cfa_offset 8
 799 0032 BD46     		mov	sp, r7
 800              	.LCFI34:
 801              		.cfi_def_cfa_register 13
 802              		@ sp needed
 803 0034 80BD     		pop	{r7, pc}
 804              		.cfi_endproc
 805              	.LFE11:
 807              		.section	.text.xQueueGenericSend,"ax",%progbits
 808              		.align	1
 809              		.global	xQueueGenericSend
 810              		.syntax unified
ARM GAS  /tmp/ccGNfTzm.s 			page 28


 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv5-d16
 815              	xQueueGenericSend:
 816              	.LFB12:
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccGNfTzm.s 			page 29


 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccGNfTzm.s 			page 30


 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
ARM GAS  /tmp/ccGNfTzm.s 			page 31


 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 817              		.loc 1 748 1
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 56
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              	.LCFI35:
 823              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccGNfTzm.s 			page 32


 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 8EB0     		sub	sp, sp, #56
 827              	.LCFI36:
 828              		.cfi_def_cfa_offset 64
 829 0004 00AF     		add	r7, sp, #0
 830              	.LCFI37:
 831              		.cfi_def_cfa_register 7
 832 0006 F860     		str	r0, [r7, #12]
 833 0008 B960     		str	r1, [r7, #8]
 834 000a 7A60     		str	r2, [r7, #4]
 835 000c 3B60     		str	r3, [r7]
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 836              		.loc 1 749 12
 837 000e 0023     		movs	r3, #0
 838 0010 7B63     		str	r3, [r7, #52]
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 839              		.loc 1 751 17
 840 0012 FB68     		ldr	r3, [r7, #12]
 841 0014 3B63     		str	r3, [r7, #48]
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 842              		.loc 1 753 2
 843 0016 3B6B     		ldr	r3, [r7, #48]
 844 0018 002B     		cmp	r3, #0
 845 001a 0CD1     		bne	.L46
 846              	.LBB119:
 847              	.LBB120:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 848              		.loc 2 195 2
 849              		.syntax unified
 850              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 851 001c 4FF05003 			mov r3, #80												
 852 0020 72B6     		cpsid i													
 853 0022 83F31188 		msr basepri, r3											
 854 0026 BFF36F8F 		isb														
 855 002a BFF34F8F 		dsb														
 856 002e 62B6     		cpsie i													
 857              	
 858              	@ 0 "" 2
 859              		.thumb
 860              		.syntax unified
 861 0030 BB62     		str	r3, [r7, #40]
 862              		.loc 2 205 1
 863 0032 00BF     		nop
 864              	.L47:
 865              	.LBE120:
 866              	.LBE119:
 867              		.loc 1 753 2 discriminator 1
 868 0034 FEE7     		b	.L47
 869              	.L46:
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 870              		.loc 1 754 2
 871 0036 BB68     		ldr	r3, [r7, #8]
 872 0038 002B     		cmp	r3, #0
 873 003a 03D1     		bne	.L48
ARM GAS  /tmp/ccGNfTzm.s 			page 33


 874              		.loc 1 754 2 is_stmt 0 discriminator 2
 875 003c 3B6B     		ldr	r3, [r7, #48]
 876 003e 1B6C     		ldr	r3, [r3, #64]
 877 0040 002B     		cmp	r3, #0
 878 0042 01D1     		bne	.L49
 879              	.L48:
 880              		.loc 1 754 2 discriminator 3
 881 0044 0123     		movs	r3, #1
 882 0046 00E0     		b	.L50
 883              	.L49:
 884              		.loc 1 754 2 discriminator 4
 885 0048 0023     		movs	r3, #0
 886              	.L50:
 887              		.loc 1 754 2 discriminator 6
 888 004a 002B     		cmp	r3, #0
 889 004c 0CD1     		bne	.L51
 890              	.LBB121:
 891              	.LBB122:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 892              		.loc 2 195 2 is_stmt 1
 893              		.syntax unified
 894              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 895 004e 4FF05003 			mov r3, #80												
 896 0052 72B6     		cpsid i													
 897 0054 83F31188 		msr basepri, r3											
 898 0058 BFF36F8F 		isb														
 899 005c BFF34F8F 		dsb														
 900 0060 62B6     		cpsie i													
 901              	
 902              	@ 0 "" 2
 903              		.thumb
 904              		.syntax unified
 905 0062 7B62     		str	r3, [r7, #36]
 906              		.loc 2 205 1
 907 0064 00BF     		nop
 908              	.L52:
 909              	.LBE122:
 910              	.LBE121:
 911              		.loc 1 754 2 discriminator 2
 912 0066 FEE7     		b	.L52
 913              	.L51:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 914              		.loc 1 755 2
 915 0068 3B68     		ldr	r3, [r7]
 916 006a 022B     		cmp	r3, #2
 917 006c 03D1     		bne	.L53
 918              		.loc 1 755 2 is_stmt 0 discriminator 2
 919 006e 3B6B     		ldr	r3, [r7, #48]
 920 0070 DB6B     		ldr	r3, [r3, #60]
 921 0072 012B     		cmp	r3, #1
 922 0074 01D1     		bne	.L54
 923              	.L53:
 924              		.loc 1 755 2 discriminator 3
 925 0076 0123     		movs	r3, #1
 926 0078 00E0     		b	.L55
 927              	.L54:
 928              		.loc 1 755 2 discriminator 4
ARM GAS  /tmp/ccGNfTzm.s 			page 34


 929 007a 0023     		movs	r3, #0
 930              	.L55:
 931              		.loc 1 755 2 discriminator 6
 932 007c 002B     		cmp	r3, #0
 933 007e 0CD1     		bne	.L56
 934              	.LBB123:
 935              	.LBB124:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 936              		.loc 2 195 2 is_stmt 1
 937              		.syntax unified
 938              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 939 0080 4FF05003 			mov r3, #80												
 940 0084 72B6     		cpsid i													
 941 0086 83F31188 		msr basepri, r3											
 942 008a BFF36F8F 		isb														
 943 008e BFF34F8F 		dsb														
 944 0092 62B6     		cpsie i													
 945              	
 946              	@ 0 "" 2
 947              		.thumb
 948              		.syntax unified
 949 0094 3B62     		str	r3, [r7, #32]
 950              		.loc 2 205 1
 951 0096 00BF     		nop
 952              	.L57:
 953              	.LBE124:
 954              	.LBE123:
 955              		.loc 1 755 2 discriminator 3
 956 0098 FEE7     		b	.L57
 957              	.L56:
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 958              		.loc 1 758 3
 959 009a FFF7FEFF 		bl	xTaskGetSchedulerState
 960 009e 0346     		mov	r3, r0
 961 00a0 002B     		cmp	r3, #0
 962 00a2 02D1     		bne	.L58
 963              		.loc 1 758 3 is_stmt 0 discriminator 2
 964 00a4 7B68     		ldr	r3, [r7, #4]
 965 00a6 002B     		cmp	r3, #0
 966 00a8 01D1     		bne	.L59
 967              	.L58:
 968              		.loc 1 758 3 discriminator 3
 969 00aa 0123     		movs	r3, #1
 970 00ac 00E0     		b	.L60
 971              	.L59:
 972              		.loc 1 758 3 discriminator 4
 973 00ae 0023     		movs	r3, #0
 974              	.L60:
 975              		.loc 1 758 3 discriminator 6
 976 00b0 002B     		cmp	r3, #0
 977 00b2 0CD1     		bne	.L61
 978              	.LBB125:
 979              	.LBB126:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 980              		.loc 2 195 2 is_stmt 1
ARM GAS  /tmp/ccGNfTzm.s 			page 35


 981              		.syntax unified
 982              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 983 00b4 4FF05003 			mov r3, #80												
 984 00b8 72B6     		cpsid i													
 985 00ba 83F31188 		msr basepri, r3											
 986 00be BFF36F8F 		isb														
 987 00c2 BFF34F8F 		dsb														
 988 00c6 62B6     		cpsie i													
 989              	
 990              	@ 0 "" 2
 991              		.thumb
 992              		.syntax unified
 993 00c8 FB61     		str	r3, [r7, #28]
 994              		.loc 2 205 1
 995 00ca 00BF     		nop
 996              	.L62:
 997              	.LBE126:
 998              	.LBE125:
 999              		.loc 1 758 3 discriminator 4
 1000 00cc FEE7     		b	.L62
 1001              	.L61:
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 1002              		.loc 1 768 3
 1003 00ce FFF7FEFF 		bl	vPortEnterCritical
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1004              		.loc 1 774 17
 1005 00d2 3B6B     		ldr	r3, [r7, #48]
 1006 00d4 9A6B     		ldr	r2, [r3, #56]
 1007              		.loc 1 774 46
 1008 00d6 3B6B     		ldr	r3, [r7, #48]
 1009 00d8 DB6B     		ldr	r3, [r3, #60]
 1010              		.loc 1 774 6
 1011 00da 9A42     		cmp	r2, r3
 1012 00dc 02D3     		bcc	.L63
 1013              		.loc 1 774 59 discriminator 1
 1014 00de 3B68     		ldr	r3, [r7]
 1015 00e0 022B     		cmp	r3, #2
 1016 00e2 29D1     		bne	.L64
 1017              	.L63:
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  /tmp/ccGNfTzm.s 			page 36


 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/ccGNfTzm.s 			page 37


 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1018              		.loc 1 840 23
 1019 00e4 3A68     		ldr	r2, [r7]
 1020 00e6 B968     		ldr	r1, [r7, #8]
 1021 00e8 386B     		ldr	r0, [r7, #48]
 1022 00ea FFF7FEFF 		bl	prvCopyDataToQueue
 1023 00ee F862     		str	r0, [r7, #44]
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1024              		.loc 1 844 10
 1025 00f0 3B6B     		ldr	r3, [r7, #48]
 1026 00f2 5B6A     		ldr	r3, [r3, #36]
 1027              		.loc 1 844 8
 1028 00f4 002B     		cmp	r3, #0
 1029 00f6 10D0     		beq	.L65
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1030              		.loc 1 846 37
 1031 00f8 3B6B     		ldr	r3, [r7, #48]
 1032 00fa 2433     		adds	r3, r3, #36
 1033              		.loc 1 846 11
 1034 00fc 1846     		mov	r0, r3
 1035 00fe FFF7FEFF 		bl	xTaskRemoveFromEventList
 1036 0102 0346     		mov	r3, r0
 1037              		.loc 1 846 9
 1038 0104 002B     		cmp	r3, #0
 1039 0106 13D0     		beq	.L66
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1040              		.loc 1 852 8
 1041 0108 3F4B     		ldr	r3, .L76
 1042 010a 4FF08052 		mov	r2, #268435456
 1043 010e 1A60     		str	r2, [r3]
 1044              		.syntax unified
 1045              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1046 0110 BFF34F8F 		dsb
 1047              	@ 0 "" 2
 1048              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1049 0114 BFF36F8F 		isb
 1050              	@ 0 "" 2
 1051              		.thumb
 1052              		.syntax unified
 1053 0118 0AE0     		b	.L66
 1054              	.L65:
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/ccGNfTzm.s 			page 38


 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 1055              		.loc 1 859 13
 1056 011a FB6A     		ldr	r3, [r7, #44]
 1057 011c 002B     		cmp	r3, #0
 1058 011e 07D0     		beq	.L66
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 1059              		.loc 1 865 7
 1060 0120 394B     		ldr	r3, .L76
 1061 0122 4FF08052 		mov	r2, #268435456
 1062 0126 1A60     		str	r2, [r3]
 1063              		.syntax unified
 1064              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1065 0128 BFF34F8F 		dsb
 1066              	@ 0 "" 2
 1067              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1068 012c BFF36F8F 		isb
 1069              	@ 0 "" 2
 1070              		.thumb
 1071              		.syntax unified
 1072              	.L66:
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 1073              		.loc 1 874 5
 1074 0130 FFF7FEFF 		bl	vPortExitCritical
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1075              		.loc 1 875 12
 1076 0134 0123     		movs	r3, #1
 1077 0136 63E0     		b	.L75
 1078              	.L64:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1079              		.loc 1 879 22
 1080 0138 7B68     		ldr	r3, [r7, #4]
 1081              		.loc 1 879 7
 1082 013a 002B     		cmp	r3, #0
 1083 013c 03D1     		bne	.L68
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
ARM GAS  /tmp/ccGNfTzm.s 			page 39


 1084              		.loc 1 883 6
 1085 013e FFF7FEFF 		bl	vPortExitCritical
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 1086              		.loc 1 888 13
 1087 0142 0023     		movs	r3, #0
 1088 0144 5CE0     		b	.L75
 1089              	.L68:
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1090              		.loc 1 890 12
 1091 0146 7B6B     		ldr	r3, [r7, #52]
 1092 0148 002B     		cmp	r3, #0
 1093 014a 06D1     		bne	.L69
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 1094              		.loc 1 894 6
 1095 014c 07F11403 		add	r3, r7, #20
 1096 0150 1846     		mov	r0, r3
 1097 0152 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1098              		.loc 1 895 20
 1099 0156 0123     		movs	r3, #1
 1100 0158 7B63     		str	r3, [r7, #52]
 1101              	.L69:
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 1102              		.loc 1 904 3
 1103 015a FFF7FEFF 		bl	vPortExitCritical
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 1104              		.loc 1 909 3
 1105 015e FFF7FEFF 		bl	vTaskSuspendAll
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1106              		.loc 1 910 3
 1107 0162 FFF7FEFF 		bl	vPortEnterCritical
 1108 0166 3B6B     		ldr	r3, [r7, #48]
 1109 0168 93F84430 		ldrb	r3, [r3, #68]
 1110 016c 5BB2     		sxtb	r3, r3
 1111 016e B3F1FF3F 		cmp	r3, #-1
 1112 0172 03D1     		bne	.L70
 1113              		.loc 1 910 3 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccGNfTzm.s 			page 40


 1114 0174 3B6B     		ldr	r3, [r7, #48]
 1115 0176 0022     		movs	r2, #0
 1116 0178 83F84420 		strb	r2, [r3, #68]
 1117              	.L70:
 1118              		.loc 1 910 3 discriminator 3
 1119 017c 3B6B     		ldr	r3, [r7, #48]
 1120 017e 93F84530 		ldrb	r3, [r3, #69]
 1121 0182 5BB2     		sxtb	r3, r3
 1122 0184 B3F1FF3F 		cmp	r3, #-1
 1123 0188 03D1     		bne	.L71
 1124              		.loc 1 910 3 discriminator 4
 1125 018a 3B6B     		ldr	r3, [r7, #48]
 1126 018c 0022     		movs	r2, #0
 1127 018e 83F84520 		strb	r2, [r3, #69]
 1128              	.L71:
 1129              		.loc 1 910 3 discriminator 6
 1130 0192 FFF7FEFF 		bl	vPortExitCritical
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1131              		.loc 1 913 7 is_stmt 1 discriminator 6
 1132 0196 3A1D     		adds	r2, r7, #4
 1133 0198 07F11403 		add	r3, r7, #20
 1134 019c 1146     		mov	r1, r2
 1135 019e 1846     		mov	r0, r3
 1136 01a0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1137 01a4 0346     		mov	r3, r0
 1138              		.loc 1 913 5 discriminator 6
 1139 01a6 002B     		cmp	r3, #0
 1140 01a8 24D1     		bne	.L72
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 1141              		.loc 1 915 8
 1142 01aa 386B     		ldr	r0, [r7, #48]
 1143 01ac FFF7FEFF 		bl	prvIsQueueFull
 1144 01b0 0346     		mov	r3, r0
 1145              		.loc 1 915 6
 1146 01b2 002B     		cmp	r3, #0
 1147 01b4 18D0     		beq	.L73
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1148              		.loc 1 918 5
 1149 01b6 3B6B     		ldr	r3, [r7, #48]
 1150 01b8 1033     		adds	r3, r3, #16
 1151 01ba 7A68     		ldr	r2, [r7, #4]
 1152 01bc 1146     		mov	r1, r2
 1153 01be 1846     		mov	r0, r3
 1154 01c0 FFF7FEFF 		bl	vTaskPlaceOnEventList
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1155              		.loc 1 925 5
ARM GAS  /tmp/ccGNfTzm.s 			page 41


 1156 01c4 386B     		ldr	r0, [r7, #48]
 1157 01c6 FFF7FEFF 		bl	prvUnlockQueue
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1158              		.loc 1 932 9
 1159 01ca FFF7FEFF 		bl	xTaskResumeAll
 1160 01ce 0346     		mov	r3, r0
 1161              		.loc 1 932 7
 1162 01d0 002B     		cmp	r3, #0
 1163 01d2 7FF47CAF 		bne	.L61
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 1164              		.loc 1 934 6
 1165 01d6 0C4B     		ldr	r3, .L76
 1166 01d8 4FF08052 		mov	r2, #268435456
 1167 01dc 1A60     		str	r2, [r3]
 1168              		.syntax unified
 1169              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1170 01de BFF34F8F 		dsb
 1171              	@ 0 "" 2
 1172              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1173 01e2 BFF36F8F 		isb
 1174              	@ 0 "" 2
 1175              		.thumb
 1176              		.syntax unified
 1177 01e6 72E7     		b	.L61
 1178              	.L73:
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1179              		.loc 1 940 5
 1180 01e8 386B     		ldr	r0, [r7, #48]
 1181 01ea FFF7FEFF 		bl	prvUnlockQueue
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1182              		.loc 1 941 14
 1183 01ee FFF7FEFF 		bl	xTaskResumeAll
 1184 01f2 6CE7     		b	.L61
 1185              	.L72:
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 1186              		.loc 1 947 4
 1187 01f4 386B     		ldr	r0, [r7, #48]
 1188 01f6 FFF7FEFF 		bl	prvUnlockQueue
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1189              		.loc 1 948 13
ARM GAS  /tmp/ccGNfTzm.s 			page 42


 1190 01fa FFF7FEFF 		bl	xTaskResumeAll
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 1191              		.loc 1 951 11
 1192 01fe 0023     		movs	r3, #0
 1193              	.L75:
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1194              		.loc 1 954 1 discriminator 7
 1195 0200 1846     		mov	r0, r3
 1196 0202 3837     		adds	r7, r7, #56
 1197              	.LCFI38:
 1198              		.cfi_def_cfa_offset 8
 1199 0204 BD46     		mov	sp, r7
 1200              	.LCFI39:
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
 1203 0206 80BD     		pop	{r7, pc}
 1204              	.L77:
 1205              		.align	2
 1206              	.L76:
 1207 0208 04ED00E0 		.word	-536810236
 1208              		.cfi_endproc
 1209              	.LFE12:
 1211              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1212              		.align	1
 1213              		.global	xQueueGenericSendFromISR
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv5-d16
 1219              	xQueueGenericSendFromISR:
 1220              	.LFB13:
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1221              		.loc 1 958 1
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 56
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              	.LCFI40:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 8EB0     		sub	sp, sp, #56
 1231              	.LCFI41:
 1232              		.cfi_def_cfa_offset 64
 1233 0004 00AF     		add	r7, sp, #0
 1234              	.LCFI42:
 1235              		.cfi_def_cfa_register 7
 1236 0006 F860     		str	r0, [r7, #12]
 1237 0008 B960     		str	r1, [r7, #8]
 1238 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/ccGNfTzm.s 			page 43


 1239 000c 3B60     		str	r3, [r7]
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1240              		.loc 1 961 17
 1241 000e FB68     		ldr	r3, [r7, #12]
 1242 0010 3B63     		str	r3, [r7, #48]
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1243              		.loc 1 963 2
 1244 0012 3B6B     		ldr	r3, [r7, #48]
 1245 0014 002B     		cmp	r3, #0
 1246 0016 0CD1     		bne	.L79
 1247              	.LBB127:
 1248              	.LBB128:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1249              		.loc 2 195 2
 1250              		.syntax unified
 1251              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1252 0018 4FF05003 			mov r3, #80												
 1253 001c 72B6     		cpsid i													
 1254 001e 83F31188 		msr basepri, r3											
 1255 0022 BFF36F8F 		isb														
 1256 0026 BFF34F8F 		dsb														
 1257 002a 62B6     		cpsie i													
 1258              	
 1259              	@ 0 "" 2
 1260              		.thumb
 1261              		.syntax unified
 1262 002c 7B62     		str	r3, [r7, #36]
 1263              		.loc 2 205 1
 1264 002e 00BF     		nop
 1265              	.L80:
 1266              	.LBE128:
 1267              	.LBE127:
 1268              		.loc 1 963 2 discriminator 1
 1269 0030 FEE7     		b	.L80
 1270              	.L79:
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1271              		.loc 1 964 2
 1272 0032 BB68     		ldr	r3, [r7, #8]
 1273 0034 002B     		cmp	r3, #0
 1274 0036 03D1     		bne	.L81
 1275              		.loc 1 964 2 is_stmt 0 discriminator 2
 1276 0038 3B6B     		ldr	r3, [r7, #48]
 1277 003a 1B6C     		ldr	r3, [r3, #64]
 1278 003c 002B     		cmp	r3, #0
 1279 003e 01D1     		bne	.L82
 1280              	.L81:
 1281              		.loc 1 964 2 discriminator 3
 1282 0040 0123     		movs	r3, #1
 1283 0042 00E0     		b	.L83
 1284              	.L82:
 1285              		.loc 1 964 2 discriminator 4
 1286 0044 0023     		movs	r3, #0
 1287              	.L83:
 1288              		.loc 1 964 2 discriminator 6
ARM GAS  /tmp/ccGNfTzm.s 			page 44


 1289 0046 002B     		cmp	r3, #0
 1290 0048 0CD1     		bne	.L84
 1291              	.LBB129:
 1292              	.LBB130:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1293              		.loc 2 195 2 is_stmt 1
 1294              		.syntax unified
 1295              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1296 004a 4FF05003 			mov r3, #80												
 1297 004e 72B6     		cpsid i													
 1298 0050 83F31188 		msr basepri, r3											
 1299 0054 BFF36F8F 		isb														
 1300 0058 BFF34F8F 		dsb														
 1301 005c 62B6     		cpsie i													
 1302              	
 1303              	@ 0 "" 2
 1304              		.thumb
 1305              		.syntax unified
 1306 005e 3B62     		str	r3, [r7, #32]
 1307              		.loc 2 205 1
 1308 0060 00BF     		nop
 1309              	.L85:
 1310              	.LBE130:
 1311              	.LBE129:
 1312              		.loc 1 964 2 discriminator 2
 1313 0062 FEE7     		b	.L85
 1314              	.L84:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1315              		.loc 1 965 2
 1316 0064 3B68     		ldr	r3, [r7]
 1317 0066 022B     		cmp	r3, #2
 1318 0068 03D1     		bne	.L86
 1319              		.loc 1 965 2 is_stmt 0 discriminator 2
 1320 006a 3B6B     		ldr	r3, [r7, #48]
 1321 006c DB6B     		ldr	r3, [r3, #60]
 1322 006e 012B     		cmp	r3, #1
 1323 0070 01D1     		bne	.L87
 1324              	.L86:
 1325              		.loc 1 965 2 discriminator 3
 1326 0072 0123     		movs	r3, #1
 1327 0074 00E0     		b	.L88
 1328              	.L87:
 1329              		.loc 1 965 2 discriminator 4
 1330 0076 0023     		movs	r3, #0
 1331              	.L88:
 1332              		.loc 1 965 2 discriminator 6
 1333 0078 002B     		cmp	r3, #0
 1334 007a 0CD1     		bne	.L89
 1335              	.LBB131:
 1336              	.LBB132:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1337              		.loc 2 195 2 is_stmt 1
 1338              		.syntax unified
 1339              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1340 007c 4FF05003 			mov r3, #80												
 1341 0080 72B6     		cpsid i													
 1342 0082 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccGNfTzm.s 			page 45


 1343 0086 BFF36F8F 		isb														
 1344 008a BFF34F8F 		dsb														
 1345 008e 62B6     		cpsie i													
 1346              	
 1347              	@ 0 "" 2
 1348              		.thumb
 1349              		.syntax unified
 1350 0090 FB61     		str	r3, [r7, #28]
 1351              		.loc 2 205 1
 1352 0092 00BF     		nop
 1353              	.L90:
 1354              	.LBE132:
 1355              	.LBE131:
 1356              		.loc 1 965 2 discriminator 3
 1357 0094 FEE7     		b	.L90
 1358              	.L89:
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1359              		.loc 1 981 2
 1360 0096 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1361              	.LBB133:
 1362              	.LBB134:
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1363              		.loc 2 213 2
 1364              		.syntax unified
 1365              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1366 009a EFF31182 			mrs r2, basepri											
 1367 009e 4FF05003 		mov r3, #80												
 1368 00a2 72B6     		cpsid i													
 1369 00a4 83F31188 		msr basepri, r3											
 1370 00a8 BFF36F8F 		isb														
 1371 00ac BFF34F8F 		dsb														
 1372 00b0 62B6     		cpsie i													
 1373              	
 1374              	@ 0 "" 2
 1375              		.thumb
ARM GAS  /tmp/ccGNfTzm.s 			page 46


 1376              		.syntax unified
 1377 00b2 BA61     		str	r2, [r7, #24]
 1378 00b4 7B61     		str	r3, [r7, #20]
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %1, %2												\n"	\
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %1											\n" \
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	warnings. */
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return ulOriginalBASEPRI;
 1379              		.loc 2 227 9
 1380 00b6 BB69     		ldr	r3, [r7, #24]
 1381              	.LBE134:
 1382              	.LBE133:
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1383              		.loc 1 988 27
 1384 00b8 FB62     		str	r3, [r7, #44]
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1385              		.loc 1 990 16
 1386 00ba 3B6B     		ldr	r3, [r7, #48]
 1387 00bc 9A6B     		ldr	r2, [r3, #56]
 1388              		.loc 1 990 45
 1389 00be 3B6B     		ldr	r3, [r7, #48]
 1390 00c0 DB6B     		ldr	r3, [r3, #60]
 1391              		.loc 1 990 5
 1392 00c2 9A42     		cmp	r2, r3
 1393 00c4 02D3     		bcc	.L92
 1394              		.loc 1 990 58 discriminator 1
 1395 00c6 3B68     		ldr	r3, [r7]
 1396 00c8 022B     		cmp	r3, #2
 1397 00ca 2CD1     		bne	.L93
 1398              	.L92:
 1399              	.LBB135:
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1400              		.loc 1 992 17
 1401 00cc 3B6B     		ldr	r3, [r7, #48]
 1402 00ce 93F84530 		ldrb	r3, [r3, #69]
 1403 00d2 87F82B30 		strb	r3, [r7, #43]
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
ARM GAS  /tmp/ccGNfTzm.s 			page 47


 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1404              		.loc 1 1001 13
 1405 00d6 3A68     		ldr	r2, [r7]
 1406 00d8 B968     		ldr	r1, [r7, #8]
 1407 00da 386B     		ldr	r0, [r7, #48]
 1408 00dc FFF7FEFF 		bl	prvCopyDataToQueue
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1409              		.loc 1 1005 6
 1410 00e0 97F92B30 		ldrsb	r3, [r7, #43]
 1411 00e4 B3F1FF3F 		cmp	r3, #-1
 1412 00e8 12D1     		bne	.L94
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccGNfTzm.s 			page 48


1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1413              		.loc 1 1060 10
 1414 00ea 3B6B     		ldr	r3, [r7, #48]
 1415 00ec 5B6A     		ldr	r3, [r3, #36]
 1416              		.loc 1 1060 8
 1417 00ee 002B     		cmp	r3, #0
 1418 00f0 16D0     		beq	.L95
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1419              		.loc 1 1062 37
 1420 00f2 3B6B     		ldr	r3, [r7, #48]
 1421 00f4 2433     		adds	r3, r3, #36
 1422              		.loc 1 1062 11
 1423 00f6 1846     		mov	r0, r3
 1424 00f8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1425 00fc 0346     		mov	r3, r0
 1426              		.loc 1 1062 9
 1427 00fe 002B     		cmp	r3, #0
 1428 0100 0ED0     		beq	.L95
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1429              		.loc 1 1066 10
 1430 0102 7B68     		ldr	r3, [r7, #4]
 1431 0104 002B     		cmp	r3, #0
 1432 0106 0BD0     		beq	.L95
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1433              		.loc 1 1068 36
 1434 0108 7B68     		ldr	r3, [r7, #4]
 1435 010a 0122     		movs	r2, #1
 1436 010c 1A60     		str	r2, [r3]
 1437 010e 07E0     		b	.L95
 1438              	.L94:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
ARM GAS  /tmp/ccGNfTzm.s 			page 49


1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1439              		.loc 1 1091 45
 1440 0110 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1441 0114 0133     		adds	r3, r3, #1
 1442 0116 DBB2     		uxtb	r3, r3
 1443              		.loc 1 1091 24
 1444 0118 5AB2     		sxtb	r2, r3
 1445              		.loc 1 1091 22
 1446 011a 3B6B     		ldr	r3, [r7, #48]
 1447 011c 83F84520 		strb	r2, [r3, #69]
 1448              	.L95:
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1449              		.loc 1 1094 12
 1450 0120 0123     		movs	r3, #1
 1451 0122 7B63     		str	r3, [r7, #52]
 1452              	.LBE135:
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1453              		.loc 1 991 3
 1454 0124 01E0     		b	.L96
 1455              	.L93:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1456              		.loc 1 1099 12
 1457 0126 0023     		movs	r3, #0
 1458 0128 7B63     		str	r3, [r7, #52]
 1459              	.L96:
 1460 012a FB6A     		ldr	r3, [r7, #44]
 1461 012c 3B61     		str	r3, [r7, #16]
 1462              	.LBB136:
 1463              	.LBB137:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1464              		.loc 2 233 2
ARM GAS  /tmp/ccGNfTzm.s 			page 50


 1465 012e 3B69     		ldr	r3, [r7, #16]
 1466              		.syntax unified
 1467              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1468 0130 83F31188 			msr basepri, r3	
 1469              	@ 0 "" 2
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 1470              		.loc 2 237 1
 1471              		.thumb
 1472              		.syntax unified
 1473 0134 00BF     		nop
 1474              	.LBE137:
 1475              	.LBE136:
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1476              		.loc 1 1104 9
 1477 0136 7B6B     		ldr	r3, [r7, #52]
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1478              		.loc 1 1105 1
 1479 0138 1846     		mov	r0, r3
 1480 013a 3837     		adds	r7, r7, #56
 1481              	.LCFI43:
 1482              		.cfi_def_cfa_offset 8
 1483 013c BD46     		mov	sp, r7
 1484              	.LCFI44:
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 013e 80BD     		pop	{r7, pc}
 1488              		.cfi_endproc
 1489              	.LFE13:
 1491              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1492              		.align	1
 1493              		.global	xQueueGiveFromISR
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1497              		.fpu fpv5-d16
 1499              	xQueueGiveFromISR:
 1500              	.LFB14:
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1501              		.loc 1 1109 1
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 56
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              	.LCFI45:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
ARM GAS  /tmp/ccGNfTzm.s 			page 51


 1510 0002 8EB0     		sub	sp, sp, #56
 1511              	.LCFI46:
 1512              		.cfi_def_cfa_offset 64
 1513 0004 00AF     		add	r7, sp, #0
 1514              	.LCFI47:
 1515              		.cfi_def_cfa_register 7
 1516 0006 7860     		str	r0, [r7, #4]
 1517 0008 3960     		str	r1, [r7]
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1518              		.loc 1 1112 17
 1519 000a 7B68     		ldr	r3, [r7, #4]
 1520 000c 3B63     		str	r3, [r7, #48]
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 1521              		.loc 1 1120 2
 1522 000e 3B6B     		ldr	r3, [r7, #48]
 1523 0010 002B     		cmp	r3, #0
 1524 0012 0CD1     		bne	.L99
 1525              	.LBB138:
 1526              	.LBB139:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1527              		.loc 2 195 2
 1528              		.syntax unified
 1529              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1530 0014 4FF05003 			mov r3, #80												
 1531 0018 72B6     		cpsid i													
 1532 001a 83F31188 		msr basepri, r3											
 1533 001e BFF36F8F 		isb														
 1534 0022 BFF34F8F 		dsb														
 1535 0026 62B6     		cpsie i													
 1536              	
 1537              	@ 0 "" 2
 1538              		.thumb
 1539              		.syntax unified
 1540 0028 3B62     		str	r3, [r7, #32]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1541              		.loc 2 205 1
 1542 002a 00BF     		nop
 1543              	.L100:
 1544              	.LBE139:
 1545              	.LBE138:
 1546              		.loc 1 1120 2 discriminator 1
 1547 002c FEE7     		b	.L100
 1548              	.L99:
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 1549              		.loc 1 1124 2
ARM GAS  /tmp/ccGNfTzm.s 			page 52


 1550 002e 3B6B     		ldr	r3, [r7, #48]
 1551 0030 1B6C     		ldr	r3, [r3, #64]
 1552 0032 002B     		cmp	r3, #0
 1553 0034 0CD0     		beq	.L101
 1554              	.LBB140:
 1555              	.LBB141:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1556              		.loc 2 195 2
 1557              		.syntax unified
 1558              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1559 0036 4FF05003 			mov r3, #80												
 1560 003a 72B6     		cpsid i													
 1561 003c 83F31188 		msr basepri, r3											
 1562 0040 BFF36F8F 		isb														
 1563 0044 BFF34F8F 		dsb														
 1564 0048 62B6     		cpsie i													
 1565              	
 1566              	@ 0 "" 2
 1567              		.thumb
 1568              		.syntax unified
 1569 004a FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1570              		.loc 2 205 1
 1571 004c 00BF     		nop
 1572              	.L102:
 1573              	.LBE141:
 1574              	.LBE140:
 1575              		.loc 1 1124 2 discriminator 2
 1576 004e FEE7     		b	.L102
 1577              	.L101:
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
 1578              		.loc 1 1129 2
 1579 0050 3B6B     		ldr	r3, [r7, #48]
 1580 0052 1B68     		ldr	r3, [r3]
 1581 0054 002B     		cmp	r3, #0
 1582 0056 03D1     		bne	.L103
 1583              		.loc 1 1129 2 is_stmt 0 discriminator 2
 1584 0058 3B6B     		ldr	r3, [r7, #48]
 1585 005a 9B68     		ldr	r3, [r3, #8]
 1586 005c 002B     		cmp	r3, #0
 1587 005e 01D1     		bne	.L104
 1588              	.L103:
 1589              		.loc 1 1129 2 discriminator 3
 1590 0060 0123     		movs	r3, #1
 1591 0062 00E0     		b	.L105
 1592              	.L104:
 1593              		.loc 1 1129 2 discriminator 4
 1594 0064 0023     		movs	r3, #0
 1595              	.L105:
 1596              		.loc 1 1129 2 discriminator 6
 1597 0066 002B     		cmp	r3, #0
 1598 0068 0CD1     		bne	.L106
 1599              	.LBB142:
ARM GAS  /tmp/ccGNfTzm.s 			page 53


 1600              	.LBB143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1601              		.loc 2 195 2 is_stmt 1
 1602              		.syntax unified
 1603              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1604 006a 4FF05003 			mov r3, #80												
 1605 006e 72B6     		cpsid i													
 1606 0070 83F31188 		msr basepri, r3											
 1607 0074 BFF36F8F 		isb														
 1608 0078 BFF34F8F 		dsb														
 1609 007c 62B6     		cpsie i													
 1610              	
 1611              	@ 0 "" 2
 1612              		.thumb
 1613              		.syntax unified
 1614 007e BB61     		str	r3, [r7, #24]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1615              		.loc 2 205 1
 1616 0080 00BF     		nop
 1617              	.L107:
 1618              	.LBE143:
 1619              	.LBE142:
 1620              		.loc 1 1129 2 discriminator 3
 1621 0082 FEE7     		b	.L107
 1622              	.L106:
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1623              		.loc 1 1145 2
 1624 0084 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1625              	.LBB144:
 1626              	.LBB145:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1627              		.loc 2 213 2
 1628              		.syntax unified
 1629              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1630 0088 EFF31182 			mrs r2, basepri											
 1631 008c 4FF05003 		mov r3, #80												
 1632 0090 72B6     		cpsid i													
 1633 0092 83F31188 		msr basepri, r3											
 1634 0096 BFF36F8F 		isb														
 1635 009a BFF34F8F 		dsb														
 1636 009e 62B6     		cpsie i													
 1637              	
ARM GAS  /tmp/ccGNfTzm.s 			page 54


 1638              	@ 0 "" 2
 1639              		.thumb
 1640              		.syntax unified
 1641 00a0 7A61     		str	r2, [r7, #20]
 1642 00a2 3B61     		str	r3, [r7, #16]
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 1643              		.loc 2 227 9
 1644 00a4 7B69     		ldr	r3, [r7, #20]
 1645              	.LBE145:
 1646              	.LBE144:
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1647              		.loc 1 1147 27
 1648 00a6 FB62     		str	r3, [r7, #44]
 1649              	.LBB146:
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1650              		.loc 1 1149 21
 1651 00a8 3B6B     		ldr	r3, [r7, #48]
 1652 00aa 9B6B     		ldr	r3, [r3, #56]
 1653 00ac BB62     		str	r3, [r7, #40]
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
 1654              		.loc 1 1154 34
 1655 00ae 3B6B     		ldr	r3, [r7, #48]
 1656 00b0 DB6B     		ldr	r3, [r3, #60]
 1657              		.loc 1 1154 5
 1658 00b2 BA6A     		ldr	r2, [r7, #40]
 1659 00b4 9A42     		cmp	r2, r3
 1660 00b6 2BD2     		bcs	.L109
 1661              	.LBB147:
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 1662              		.loc 1 1156 17
 1663 00b8 3B6B     		ldr	r3, [r7, #48]
 1664 00ba 93F84530 		ldrb	r3, [r3, #69]
 1665 00be 87F82730 		strb	r3, [r7, #39]
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 1666              		.loc 1 1166 51
 1667 00c2 BB6A     		ldr	r3, [r7, #40]
 1668 00c4 5A1C     		adds	r2, r3, #1
 1669              		.loc 1 1166 31
 1670 00c6 3B6B     		ldr	r3, [r7, #48]
 1671 00c8 9A63     		str	r2, [r3, #56]
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 55


1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1672              		.loc 1 1170 6
 1673 00ca 97F92730 		ldrsb	r3, [r7, #39]
 1674 00ce B3F1FF3F 		cmp	r3, #-1
 1675 00d2 12D1     		bne	.L110
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/ccGNfTzm.s 			page 56


1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1676              		.loc 1 1225 10
 1677 00d4 3B6B     		ldr	r3, [r7, #48]
 1678 00d6 5B6A     		ldr	r3, [r3, #36]
 1679              		.loc 1 1225 8
 1680 00d8 002B     		cmp	r3, #0
 1681 00da 16D0     		beq	.L111
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1682              		.loc 1 1227 37
 1683 00dc 3B6B     		ldr	r3, [r7, #48]
 1684 00de 2433     		adds	r3, r3, #36
 1685              		.loc 1 1227 11
 1686 00e0 1846     		mov	r0, r3
 1687 00e2 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1688 00e6 0346     		mov	r3, r0
 1689              		.loc 1 1227 9
 1690 00e8 002B     		cmp	r3, #0
 1691 00ea 0ED0     		beq	.L111
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1692              		.loc 1 1231 10
 1693 00ec 3B68     		ldr	r3, [r7]
 1694 00ee 002B     		cmp	r3, #0
 1695 00f0 0BD0     		beq	.L111
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1696              		.loc 1 1233 36
 1697 00f2 3B68     		ldr	r3, [r7]
 1698 00f4 0122     		movs	r2, #1
 1699 00f6 1A60     		str	r2, [r3]
 1700 00f8 07E0     		b	.L111
 1701              	.L110:
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccGNfTzm.s 			page 57


1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1702              		.loc 1 1256 45
 1703 00fa 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1704 00fe 0133     		adds	r3, r3, #1
 1705 0100 DBB2     		uxtb	r3, r3
 1706              		.loc 1 1256 24
 1707 0102 5AB2     		sxtb	r2, r3
 1708              		.loc 1 1256 22
 1709 0104 3B6B     		ldr	r3, [r7, #48]
 1710 0106 83F84520 		strb	r2, [r3, #69]
 1711              	.L111:
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 1712              		.loc 1 1259 12
 1713 010a 0123     		movs	r3, #1
 1714 010c 7B63     		str	r3, [r7, #52]
 1715              	.LBE147:
 1716 010e 01E0     		b	.L112
 1717              	.L109:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1718              		.loc 1 1264 12
 1719 0110 0023     		movs	r3, #0
 1720 0112 7B63     		str	r3, [r7, #52]
 1721              	.L112:
 1722 0114 FB6A     		ldr	r3, [r7, #44]
 1723 0116 FB60     		str	r3, [r7, #12]
 1724              	.LBE146:
 1725              	.LBB148:
 1726              	.LBB149:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1727              		.loc 2 233 2
 1728 0118 FB68     		ldr	r3, [r7, #12]
 1729              		.syntax unified
 1730              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1731 011a 83F31188 			msr basepri, r3	
 1732              	@ 0 "" 2
 1733              		.loc 2 237 1
 1734              		.thumb
 1735              		.syntax unified
 1736 011e 00BF     		nop
 1737              	.LBE149:
 1738              	.LBE148:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 1739              		.loc 1 1269 9
ARM GAS  /tmp/ccGNfTzm.s 			page 58


 1740 0120 7B6B     		ldr	r3, [r7, #52]
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1741              		.loc 1 1270 1
 1742 0122 1846     		mov	r0, r3
 1743 0124 3837     		adds	r7, r7, #56
 1744              	.LCFI48:
 1745              		.cfi_def_cfa_offset 8
 1746 0126 BD46     		mov	sp, r7
 1747              	.LCFI49:
 1748              		.cfi_def_cfa_register 13
 1749              		@ sp needed
 1750 0128 80BD     		pop	{r7, pc}
 1751              		.cfi_endproc
 1752              	.LFE14:
 1754              		.section	.text.xQueueReceive,"ax",%progbits
 1755              		.align	1
 1756              		.global	xQueueReceive
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv5-d16
 1762              	xQueueReceive:
 1763              	.LFB15:
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 1764              		.loc 1 1274 1
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 48
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768 0000 80B5     		push	{r7, lr}
 1769              	.LCFI50:
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 8CB0     		sub	sp, sp, #48
 1774              	.LCFI51:
 1775              		.cfi_def_cfa_offset 56
 1776 0004 00AF     		add	r7, sp, #0
 1777              	.LCFI52:
 1778              		.cfi_def_cfa_register 7
 1779 0006 F860     		str	r0, [r7, #12]
 1780 0008 B960     		str	r1, [r7, #8]
 1781 000a 7A60     		str	r2, [r7, #4]
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1782              		.loc 1 1275 12
 1783 000c 0023     		movs	r3, #0
 1784 000e FB62     		str	r3, [r7, #44]
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1785              		.loc 1 1277 17
 1786 0010 FB68     		ldr	r3, [r7, #12]
 1787 0012 BB62     		str	r3, [r7, #40]
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
ARM GAS  /tmp/ccGNfTzm.s 			page 59


 1788              		.loc 1 1280 2
 1789 0014 BB6A     		ldr	r3, [r7, #40]
 1790 0016 002B     		cmp	r3, #0
 1791 0018 0CD1     		bne	.L115
 1792              	.LBB150:
 1793              	.LBB151:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1794              		.loc 2 195 2
 1795              		.syntax unified
 1796              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1797 001a 4FF05003 			mov r3, #80												
 1798 001e 72B6     		cpsid i													
 1799 0020 83F31188 		msr basepri, r3											
 1800 0024 BFF36F8F 		isb														
 1801 0028 BFF34F8F 		dsb														
 1802 002c 62B6     		cpsie i													
 1803              	
 1804              	@ 0 "" 2
 1805              		.thumb
 1806              		.syntax unified
 1807 002e 3B62     		str	r3, [r7, #32]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1808              		.loc 2 205 1
 1809 0030 00BF     		nop
 1810              	.L116:
 1811              	.LBE151:
 1812              	.LBE150:
 1813              		.loc 1 1280 2 discriminator 1
 1814 0032 FEE7     		b	.L116
 1815              	.L115:
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1816              		.loc 1 1284 2
 1817 0034 BB68     		ldr	r3, [r7, #8]
 1818 0036 002B     		cmp	r3, #0
 1819 0038 03D1     		bne	.L117
 1820              		.loc 1 1284 2 is_stmt 0 discriminator 2
 1821 003a BB6A     		ldr	r3, [r7, #40]
 1822 003c 1B6C     		ldr	r3, [r3, #64]
 1823 003e 002B     		cmp	r3, #0
 1824 0040 01D1     		bne	.L118
 1825              	.L117:
 1826              		.loc 1 1284 2 discriminator 3
 1827 0042 0123     		movs	r3, #1
 1828 0044 00E0     		b	.L119
 1829              	.L118:
 1830              		.loc 1 1284 2 discriminator 4
 1831 0046 0023     		movs	r3, #0
 1832              	.L119:
 1833              		.loc 1 1284 2 discriminator 6
 1834 0048 002B     		cmp	r3, #0
 1835 004a 0CD1     		bne	.L120
 1836              	.LBB152:
 1837              	.LBB153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
ARM GAS  /tmp/ccGNfTzm.s 			page 60


 1838              		.loc 2 195 2 is_stmt 1
 1839              		.syntax unified
 1840              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1841 004c 4FF05003 			mov r3, #80												
 1842 0050 72B6     		cpsid i													
 1843 0052 83F31188 		msr basepri, r3											
 1844 0056 BFF36F8F 		isb														
 1845 005a BFF34F8F 		dsb														
 1846 005e 62B6     		cpsie i													
 1847              	
 1848              	@ 0 "" 2
 1849              		.thumb
 1850              		.syntax unified
 1851 0060 FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1852              		.loc 2 205 1
 1853 0062 00BF     		nop
 1854              	.L121:
 1855              	.LBE153:
 1856              	.LBE152:
 1857              		.loc 1 1284 2 discriminator 2
 1858 0064 FEE7     		b	.L121
 1859              	.L120:
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1860              		.loc 1 1289 3
 1861 0066 FFF7FEFF 		bl	xTaskGetSchedulerState
 1862 006a 0346     		mov	r3, r0
 1863 006c 002B     		cmp	r3, #0
 1864 006e 02D1     		bne	.L122
 1865              		.loc 1 1289 3 is_stmt 0 discriminator 2
 1866 0070 7B68     		ldr	r3, [r7, #4]
 1867 0072 002B     		cmp	r3, #0
 1868 0074 01D1     		bne	.L123
 1869              	.L122:
 1870              		.loc 1 1289 3 discriminator 3
 1871 0076 0123     		movs	r3, #1
 1872 0078 00E0     		b	.L124
 1873              	.L123:
 1874              		.loc 1 1289 3 discriminator 4
 1875 007a 0023     		movs	r3, #0
 1876              	.L124:
 1877              		.loc 1 1289 3 discriminator 6
 1878 007c 002B     		cmp	r3, #0
 1879 007e 0CD1     		bne	.L125
 1880              	.LBB154:
 1881              	.LBB155:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1882              		.loc 2 195 2 is_stmt 1
 1883              		.syntax unified
 1884              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1885 0080 4FF05003 			mov r3, #80												
 1886 0084 72B6     		cpsid i													
 1887 0086 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccGNfTzm.s 			page 61


 1888 008a BFF36F8F 		isb														
 1889 008e BFF34F8F 		dsb														
 1890 0092 62B6     		cpsie i													
 1891              	
 1892              	@ 0 "" 2
 1893              		.thumb
 1894              		.syntax unified
 1895 0094 BB61     		str	r3, [r7, #24]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 1896              		.loc 2 205 1
 1897 0096 00BF     		nop
 1898              	.L126:
 1899              	.LBE155:
 1900              	.LBE154:
 1901              		.loc 1 1289 3 discriminator 3
 1902 0098 FEE7     		b	.L126
 1903              	.L125:
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 1904              		.loc 1 1299 3
 1905 009a FFF7FEFF 		bl	vPortEnterCritical
 1906              	.LBB156:
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1907              		.loc 1 1301 22
 1908 009e BB6A     		ldr	r3, [r7, #40]
 1909 00a0 9B6B     		ldr	r3, [r3, #56]
 1910 00a2 7B62     		str	r3, [r7, #36]
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1911              		.loc 1 1305 6
 1912 00a4 7B6A     		ldr	r3, [r7, #36]
 1913 00a6 002B     		cmp	r3, #0
 1914 00a8 1FD0     		beq	.L127
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1915              		.loc 1 1308 5
 1916 00aa B968     		ldr	r1, [r7, #8]
 1917 00ac B86A     		ldr	r0, [r7, #40]
 1918 00ae FFF7FEFF 		bl	prvCopyDataFromQueue
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 1919              		.loc 1 1310 52
 1920 00b2 7B6A     		ldr	r3, [r7, #36]
 1921 00b4 5A1E     		subs	r2, r3, #1
 1922              		.loc 1 1310 32
ARM GAS  /tmp/ccGNfTzm.s 			page 62


 1923 00b6 BB6A     		ldr	r3, [r7, #40]
 1924 00b8 9A63     		str	r2, [r3, #56]
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1925              		.loc 1 1315 9
 1926 00ba BB6A     		ldr	r3, [r7, #40]
 1927 00bc 1B69     		ldr	r3, [r3, #16]
 1928              		.loc 1 1315 7
 1929 00be 002B     		cmp	r3, #0
 1930 00c0 0FD0     		beq	.L128
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1931              		.loc 1 1317 36
 1932 00c2 BB6A     		ldr	r3, [r7, #40]
 1933 00c4 1033     		adds	r3, r3, #16
 1934              		.loc 1 1317 10
 1935 00c6 1846     		mov	r0, r3
 1936 00c8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1937 00cc 0346     		mov	r3, r0
 1938              		.loc 1 1317 8
 1939 00ce 002B     		cmp	r3, #0
 1940 00d0 07D0     		beq	.L128
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 1941              		.loc 1 1319 7
 1942 00d2 3D4B     		ldr	r3, .L138
 1943 00d4 4FF08052 		mov	r2, #268435456
 1944 00d8 1A60     		str	r2, [r3]
 1945              		.syntax unified
 1946              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1947 00da BFF34F8F 		dsb
 1948              	@ 0 "" 2
 1949              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1950 00de BFF36F8F 		isb
 1951              	@ 0 "" 2
 1952              		.thumb
 1953              		.syntax unified
 1954              	.L128:
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 1955              		.loc 1 1331 5
 1956 00e2 FFF7FEFF 		bl	vPortExitCritical
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1957              		.loc 1 1332 12
ARM GAS  /tmp/ccGNfTzm.s 			page 63


 1958 00e6 0123     		movs	r3, #1
 1959 00e8 69E0     		b	.L137
 1960              	.L127:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1961              		.loc 1 1336 22
 1962 00ea 7B68     		ldr	r3, [r7, #4]
 1963              		.loc 1 1336 7
 1964 00ec 002B     		cmp	r3, #0
 1965 00ee 03D1     		bne	.L130
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 1966              		.loc 1 1340 6
 1967 00f0 FFF7FEFF 		bl	vPortExitCritical
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 1968              		.loc 1 1342 13
 1969 00f4 0023     		movs	r3, #0
 1970 00f6 62E0     		b	.L137
 1971              	.L130:
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1972              		.loc 1 1344 12
 1973 00f8 FB6A     		ldr	r3, [r7, #44]
 1974 00fa 002B     		cmp	r3, #0
 1975 00fc 06D1     		bne	.L131
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 1976              		.loc 1 1348 6
 1977 00fe 07F11003 		add	r3, r7, #16
 1978 0102 1846     		mov	r0, r3
 1979 0104 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1980              		.loc 1 1349 20
 1981 0108 0123     		movs	r3, #1
 1982 010a FB62     		str	r3, [r7, #44]
 1983              	.L131:
 1984              	.LBE156:
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 1985              		.loc 1 1358 3
 1986 010c FFF7FEFF 		bl	vPortExitCritical
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
ARM GAS  /tmp/ccGNfTzm.s 			page 64


1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 1987              		.loc 1 1363 3
 1988 0110 FFF7FEFF 		bl	vTaskSuspendAll
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1989              		.loc 1 1364 3
 1990 0114 FFF7FEFF 		bl	vPortEnterCritical
 1991 0118 BB6A     		ldr	r3, [r7, #40]
 1992 011a 93F84430 		ldrb	r3, [r3, #68]
 1993 011e 5BB2     		sxtb	r3, r3
 1994 0120 B3F1FF3F 		cmp	r3, #-1
 1995 0124 03D1     		bne	.L132
 1996              		.loc 1 1364 3 is_stmt 0 discriminator 1
 1997 0126 BB6A     		ldr	r3, [r7, #40]
 1998 0128 0022     		movs	r2, #0
 1999 012a 83F84420 		strb	r2, [r3, #68]
 2000              	.L132:
 2001              		.loc 1 1364 3 discriminator 3
 2002 012e BB6A     		ldr	r3, [r7, #40]
 2003 0130 93F84530 		ldrb	r3, [r3, #69]
 2004 0134 5BB2     		sxtb	r3, r3
 2005 0136 B3F1FF3F 		cmp	r3, #-1
 2006 013a 03D1     		bne	.L133
 2007              		.loc 1 1364 3 discriminator 4
 2008 013c BB6A     		ldr	r3, [r7, #40]
 2009 013e 0022     		movs	r2, #0
 2010 0140 83F84520 		strb	r2, [r3, #69]
 2011              	.L133:
 2012              		.loc 1 1364 3 discriminator 6
 2013 0144 FFF7FEFF 		bl	vPortExitCritical
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2014              		.loc 1 1367 7 is_stmt 1 discriminator 6
 2015 0148 3A1D     		adds	r2, r7, #4
 2016 014a 07F11003 		add	r3, r7, #16
 2017 014e 1146     		mov	r1, r2
 2018 0150 1846     		mov	r0, r3
 2019 0152 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2020 0156 0346     		mov	r3, r0
 2021              		.loc 1 1367 5 discriminator 6
 2022 0158 002B     		cmp	r3, #0
 2023 015a 23D1     		bne	.L134
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2024              		.loc 1 1371 8
 2025 015c B86A     		ldr	r0, [r7, #40]
 2026 015e FFF7FEFF 		bl	prvIsQueueEmpty
 2027 0162 0346     		mov	r3, r0
 2028              		.loc 1 1371 6
 2029 0164 002B     		cmp	r3, #0
 2030 0166 17D0     		beq	.L135
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
ARM GAS  /tmp/ccGNfTzm.s 			page 65


1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2031              		.loc 1 1374 5
 2032 0168 BB6A     		ldr	r3, [r7, #40]
 2033 016a 2433     		adds	r3, r3, #36
 2034 016c 7A68     		ldr	r2, [r7, #4]
 2035 016e 1146     		mov	r1, r2
 2036 0170 1846     		mov	r0, r3
 2037 0172 FFF7FEFF 		bl	vTaskPlaceOnEventList
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2038              		.loc 1 1375 5
 2039 0176 B86A     		ldr	r0, [r7, #40]
 2040 0178 FFF7FEFF 		bl	prvUnlockQueue
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2041              		.loc 1 1376 9
 2042 017c FFF7FEFF 		bl	xTaskResumeAll
 2043 0180 0346     		mov	r3, r0
 2044              		.loc 1 1376 7
 2045 0182 002B     		cmp	r3, #0
 2046 0184 89D1     		bne	.L125
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 2047              		.loc 1 1378 6
 2048 0186 104B     		ldr	r3, .L138
 2049 0188 4FF08052 		mov	r2, #268435456
 2050 018c 1A60     		str	r2, [r3]
 2051              		.syntax unified
 2052              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2053 018e BFF34F8F 		dsb
 2054              	@ 0 "" 2
 2055              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2056 0192 BFF36F8F 		isb
 2057              	@ 0 "" 2
 2058              		.thumb
 2059              		.syntax unified
 2060 0196 80E7     		b	.L125
 2061              	.L135:
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2062              		.loc 1 1389 5
 2063 0198 B86A     		ldr	r0, [r7, #40]
 2064 019a FFF7FEFF 		bl	prvUnlockQueue
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2065              		.loc 1 1390 14
 2066 019e FFF7FEFF 		bl	xTaskResumeAll
 2067 01a2 7AE7     		b	.L125
 2068              	.L134:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccGNfTzm.s 			page 66


1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 2069              		.loc 1 1397 4
 2070 01a4 B86A     		ldr	r0, [r7, #40]
 2071 01a6 FFF7FEFF 		bl	prvUnlockQueue
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2072              		.loc 1 1398 13
 2073 01aa FFF7FEFF 		bl	xTaskResumeAll
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2074              		.loc 1 1400 8
 2075 01ae B86A     		ldr	r0, [r7, #40]
 2076 01b0 FFF7FEFF 		bl	prvIsQueueEmpty
 2077 01b4 0346     		mov	r3, r0
 2078              		.loc 1 1400 6
 2079 01b6 002B     		cmp	r3, #0
 2080 01b8 3FF46FAF 		beq	.L125
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2081              		.loc 1 1403 12
 2082 01bc 0023     		movs	r3, #0
 2083              	.L137:
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2084              		.loc 1 1411 1 discriminator 6
 2085 01be 1846     		mov	r0, r3
 2086 01c0 3037     		adds	r7, r7, #48
 2087              	.LCFI53:
 2088              		.cfi_def_cfa_offset 8
 2089 01c2 BD46     		mov	sp, r7
 2090              	.LCFI54:
 2091              		.cfi_def_cfa_register 13
 2092              		@ sp needed
 2093 01c4 80BD     		pop	{r7, pc}
 2094              	.L139:
 2095 01c6 00BF     		.align	2
 2096              	.L138:
 2097 01c8 04ED00E0 		.word	-536810236
 2098              		.cfi_endproc
 2099              	.LFE15:
 2101              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2102              		.align	1
 2103              		.global	xQueueSemaphoreTake
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2107              		.fpu fpv5-d16
ARM GAS  /tmp/ccGNfTzm.s 			page 67


 2109              	xQueueSemaphoreTake:
 2110              	.LFB16:
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2111              		.loc 1 1415 1
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 56
 2114              		@ frame_needed = 1, uses_anonymous_args = 0
 2115 0000 80B5     		push	{r7, lr}
 2116              	.LCFI55:
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
 2120 0002 8EB0     		sub	sp, sp, #56
 2121              	.LCFI56:
 2122              		.cfi_def_cfa_offset 64
 2123 0004 00AF     		add	r7, sp, #0
 2124              	.LCFI57:
 2125              		.cfi_def_cfa_register 7
 2126 0006 7860     		str	r0, [r7, #4]
 2127 0008 3960     		str	r1, [r7]
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2128              		.loc 1 1416 12
 2129 000a 0023     		movs	r3, #0
 2130 000c 7B63     		str	r3, [r7, #52]
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2131              		.loc 1 1418 17
 2132 000e 7B68     		ldr	r3, [r7, #4]
 2133 0010 FB62     		str	r3, [r7, #44]
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
 2134              		.loc 1 1421 13
 2135 0012 0023     		movs	r3, #0
 2136 0014 3B63     		str	r3, [r7, #48]
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
 2137              		.loc 1 1425 2
 2138 0016 FB6A     		ldr	r3, [r7, #44]
 2139 0018 002B     		cmp	r3, #0
 2140 001a 0CD1     		bne	.L141
 2141              	.LBB157:
 2142              	.LBB158:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2143              		.loc 2 195 2
 2144              		.syntax unified
 2145              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2146 001c 4FF05003 			mov r3, #80												
 2147 0020 72B6     		cpsid i													
 2148 0022 83F31188 		msr basepri, r3											
 2149 0026 BFF36F8F 		isb														
 2150 002a BFF34F8F 		dsb														
ARM GAS  /tmp/ccGNfTzm.s 			page 68


 2151 002e 62B6     		cpsie i													
 2152              	
 2153              	@ 0 "" 2
 2154              		.thumb
 2155              		.syntax unified
 2156 0030 3B62     		str	r3, [r7, #32]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2157              		.loc 2 205 1
 2158 0032 00BF     		nop
 2159              	.L142:
 2160              	.LBE158:
 2161              	.LBE157:
 2162              		.loc 1 1425 2 discriminator 1
 2163 0034 FEE7     		b	.L142
 2164              	.L141:
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 2165              		.loc 1 1429 2
 2166 0036 FB6A     		ldr	r3, [r7, #44]
 2167 0038 1B6C     		ldr	r3, [r3, #64]
 2168 003a 002B     		cmp	r3, #0
 2169 003c 0CD0     		beq	.L143
 2170              	.LBB159:
 2171              	.LBB160:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2172              		.loc 2 195 2
 2173              		.syntax unified
 2174              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2175 003e 4FF05003 			mov r3, #80												
 2176 0042 72B6     		cpsid i													
 2177 0044 83F31188 		msr basepri, r3											
 2178 0048 BFF36F8F 		isb														
 2179 004c BFF34F8F 		dsb														
 2180 0050 62B6     		cpsie i													
 2181              	
 2182              	@ 0 "" 2
 2183              		.thumb
 2184              		.syntax unified
 2185 0052 FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2186              		.loc 2 205 1
 2187 0054 00BF     		nop
 2188              	.L144:
 2189              	.LBE160:
 2190              	.LBE159:
 2191              		.loc 1 1429 2 discriminator 2
 2192 0056 FEE7     		b	.L144
 2193              	.L143:
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 2194              		.loc 1 1434 3
 2195 0058 FFF7FEFF 		bl	xTaskGetSchedulerState
ARM GAS  /tmp/ccGNfTzm.s 			page 69


 2196 005c 0346     		mov	r3, r0
 2197 005e 002B     		cmp	r3, #0
 2198 0060 02D1     		bne	.L145
 2199              		.loc 1 1434 3 is_stmt 0 discriminator 2
 2200 0062 3B68     		ldr	r3, [r7]
 2201 0064 002B     		cmp	r3, #0
 2202 0066 01D1     		bne	.L146
 2203              	.L145:
 2204              		.loc 1 1434 3 discriminator 3
 2205 0068 0123     		movs	r3, #1
 2206 006a 00E0     		b	.L147
 2207              	.L146:
 2208              		.loc 1 1434 3 discriminator 4
 2209 006c 0023     		movs	r3, #0
 2210              	.L147:
 2211              		.loc 1 1434 3 discriminator 6
 2212 006e 002B     		cmp	r3, #0
 2213 0070 0CD1     		bne	.L148
 2214              	.LBB161:
 2215              	.LBB162:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2216              		.loc 2 195 2 is_stmt 1
 2217              		.syntax unified
 2218              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2219 0072 4FF05003 			mov r3, #80												
 2220 0076 72B6     		cpsid i													
 2221 0078 83F31188 		msr basepri, r3											
 2222 007c BFF36F8F 		isb														
 2223 0080 BFF34F8F 		dsb														
 2224 0084 62B6     		cpsie i													
 2225              	
 2226              	@ 0 "" 2
 2227              		.thumb
 2228              		.syntax unified
 2229 0086 BB61     		str	r3, [r7, #24]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2230              		.loc 2 205 1
 2231 0088 00BF     		nop
 2232              	.L149:
 2233              	.LBE162:
 2234              	.LBE161:
 2235              		.loc 1 1434 3 discriminator 3
 2236 008a FEE7     		b	.L149
 2237              	.L148:
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 2238              		.loc 1 1444 3
 2239 008c FFF7FEFF 		bl	vPortEnterCritical
 2240              	.LBB163:
ARM GAS  /tmp/ccGNfTzm.s 			page 70


1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 2241              		.loc 1 1448 22
 2242 0090 FB6A     		ldr	r3, [r7, #44]
 2243 0092 9B6B     		ldr	r3, [r3, #56]
 2244 0094 BB62     		str	r3, [r7, #40]
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 2245              		.loc 1 1452 6
 2246 0096 BB6A     		ldr	r3, [r7, #40]
 2247 0098 002B     		cmp	r3, #0
 2248 009a 24D0     		beq	.L150
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 2249              		.loc 1 1458 51
 2250 009c BB6A     		ldr	r3, [r7, #40]
 2251 009e 5A1E     		subs	r2, r3, #1
 2252              		.loc 1 1458 32
 2253 00a0 FB6A     		ldr	r3, [r7, #44]
 2254 00a2 9A63     		str	r2, [r3, #56]
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2255              		.loc 1 1462 17
 2256 00a4 FB6A     		ldr	r3, [r7, #44]
 2257 00a6 1B68     		ldr	r3, [r3]
 2258              		.loc 1 1462 8
 2259 00a8 002B     		cmp	r3, #0
 2260 00aa 04D1     		bne	.L151
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 2261              		.loc 1 1466 44
 2262 00ac FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2263 00b0 0246     		mov	r2, r0
 2264              		.loc 1 1466 42
 2265 00b2 FB6A     		ldr	r3, [r7, #44]
 2266 00b4 9A60     		str	r2, [r3, #8]
 2267              	.L151:
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 71


1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2268              		.loc 1 1477 9
 2269 00b6 FB6A     		ldr	r3, [r7, #44]
 2270 00b8 1B69     		ldr	r3, [r3, #16]
 2271              		.loc 1 1477 7
 2272 00ba 002B     		cmp	r3, #0
 2273 00bc 0FD0     		beq	.L152
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2274              		.loc 1 1479 36
 2275 00be FB6A     		ldr	r3, [r7, #44]
 2276 00c0 1033     		adds	r3, r3, #16
 2277              		.loc 1 1479 10
 2278 00c2 1846     		mov	r0, r3
 2279 00c4 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2280 00c8 0346     		mov	r3, r0
 2281              		.loc 1 1479 8
 2282 00ca 002B     		cmp	r3, #0
 2283 00cc 07D0     		beq	.L152
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 2284              		.loc 1 1481 7
 2285 00ce 554B     		ldr	r3, .L166
 2286 00d0 4FF08052 		mov	r2, #268435456
 2287 00d4 1A60     		str	r2, [r3]
 2288              		.syntax unified
 2289              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2290 00d6 BFF34F8F 		dsb
 2291              	@ 0 "" 2
 2292              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2293 00da BFF36F8F 		isb
 2294              	@ 0 "" 2
 2295              		.thumb
 2296              		.syntax unified
 2297              	.L152:
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 2298              		.loc 1 1493 5
 2299 00de FFF7FEFF 		bl	vPortExitCritical
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2300              		.loc 1 1494 12
 2301 00e2 0123     		movs	r3, #1
 2302 00e4 99E0     		b	.L165
 2303              	.L150:
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccGNfTzm.s 			page 72


1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 2304              		.loc 1 1498 22
 2305 00e6 3B68     		ldr	r3, [r7]
 2306              		.loc 1 1498 7
 2307 00e8 002B     		cmp	r3, #0
 2308 00ea 13D1     		bne	.L154
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
 2309              		.loc 1 1505 7
 2310 00ec 3B6B     		ldr	r3, [r7, #48]
 2311 00ee 002B     		cmp	r3, #0
 2312 00f0 0CD0     		beq	.L155
 2313              	.LBB164:
 2314              	.LBB165:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2315              		.loc 2 195 2
 2316              		.syntax unified
 2317              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2318 00f2 4FF05003 			mov r3, #80												
 2319 00f6 72B6     		cpsid i													
 2320 00f8 83F31188 		msr basepri, r3											
 2321 00fc BFF36F8F 		isb														
 2322 0100 BFF34F8F 		dsb														
 2323 0104 62B6     		cpsie i													
 2324              	
 2325              	@ 0 "" 2
 2326              		.thumb
 2327              		.syntax unified
 2328 0106 7B61     		str	r3, [r7, #20]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2329              		.loc 2 205 1
 2330 0108 00BF     		nop
 2331              	.L156:
 2332              	.LBE165:
 2333              	.LBE164:
 2334              		.loc 1 1505 7 discriminator 4
 2335 010a FEE7     		b	.L156
 2336              	.L155:
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 2337              		.loc 1 1511 6
 2338 010c FFF7FEFF 		bl	vPortExitCritical
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2339              		.loc 1 1513 13
 2340 0110 0023     		movs	r3, #0
ARM GAS  /tmp/ccGNfTzm.s 			page 73


 2341 0112 82E0     		b	.L165
 2342              	.L154:
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 2343              		.loc 1 1515 12
 2344 0114 7B6B     		ldr	r3, [r7, #52]
 2345 0116 002B     		cmp	r3, #0
 2346 0118 06D1     		bne	.L157
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 2347              		.loc 1 1519 6
 2348 011a 07F10C03 		add	r3, r7, #12
 2349 011e 1846     		mov	r0, r3
 2350 0120 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2351              		.loc 1 1520 20
 2352 0124 0123     		movs	r3, #1
 2353 0126 7B63     		str	r3, [r7, #52]
 2354              	.L157:
 2355              	.LBE163:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 2356              		.loc 1 1529 3
 2357 0128 FFF7FEFF 		bl	vPortExitCritical
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 2358              		.loc 1 1534 3
 2359 012c FFF7FEFF 		bl	vTaskSuspendAll
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2360              		.loc 1 1535 3
 2361 0130 FFF7FEFF 		bl	vPortEnterCritical
 2362 0134 FB6A     		ldr	r3, [r7, #44]
 2363 0136 93F84430 		ldrb	r3, [r3, #68]
 2364 013a 5BB2     		sxtb	r3, r3
 2365 013c B3F1FF3F 		cmp	r3, #-1
 2366 0140 03D1     		bne	.L158
 2367              		.loc 1 1535 3 is_stmt 0 discriminator 1
 2368 0142 FB6A     		ldr	r3, [r7, #44]
 2369 0144 0022     		movs	r2, #0
 2370 0146 83F84420 		strb	r2, [r3, #68]
 2371              	.L158:
 2372              		.loc 1 1535 3 discriminator 3
 2373 014a FB6A     		ldr	r3, [r7, #44]
 2374 014c 93F84530 		ldrb	r3, [r3, #69]
 2375 0150 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/ccGNfTzm.s 			page 74


 2376 0152 B3F1FF3F 		cmp	r3, #-1
 2377 0156 03D1     		bne	.L159
 2378              		.loc 1 1535 3 discriminator 4
 2379 0158 FB6A     		ldr	r3, [r7, #44]
 2380 015a 0022     		movs	r2, #0
 2381 015c 83F84520 		strb	r2, [r3, #69]
 2382              	.L159:
 2383              		.loc 1 1535 3 discriminator 6
 2384 0160 FFF7FEFF 		bl	vPortExitCritical
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2385              		.loc 1 1538 7 is_stmt 1 discriminator 6
 2386 0164 3A46     		mov	r2, r7
 2387 0166 07F10C03 		add	r3, r7, #12
 2388 016a 1146     		mov	r1, r2
 2389 016c 1846     		mov	r0, r3
 2390 016e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2391 0172 0346     		mov	r3, r0
 2392              		.loc 1 1538 5 discriminator 6
 2393 0174 002B     		cmp	r3, #0
 2394 0176 32D1     		bne	.L160
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2395              		.loc 1 1544 8
 2396 0178 F86A     		ldr	r0, [r7, #44]
 2397 017a FFF7FEFF 		bl	prvIsQueueEmpty
 2398 017e 0346     		mov	r3, r0
 2399              		.loc 1 1544 6
 2400 0180 002B     		cmp	r3, #0
 2401 0182 26D0     		beq	.L161
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2402              		.loc 1 1550 17
 2403 0184 FB6A     		ldr	r3, [r7, #44]
 2404 0186 1B68     		ldr	r3, [r3]
 2405              		.loc 1 1550 8
 2406 0188 002B     		cmp	r3, #0
 2407 018a 09D1     		bne	.L162
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
 2408              		.loc 1 1552 7
 2409 018c FFF7FEFF 		bl	vPortEnterCritical
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 2410              		.loc 1 1554 31
 2411 0190 FB6A     		ldr	r3, [r7, #44]
 2412 0192 9B68     		ldr	r3, [r3, #8]
 2413 0194 1846     		mov	r0, r3
ARM GAS  /tmp/ccGNfTzm.s 			page 75


 2414 0196 FFF7FEFF 		bl	xTaskPriorityInherit
 2415 019a 3863     		str	r0, [r7, #48]
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
 2416              		.loc 1 1556 7
 2417 019c FFF7FEFF 		bl	vPortExitCritical
 2418              	.L162:
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2419              		.loc 1 1565 5
 2420 01a0 FB6A     		ldr	r3, [r7, #44]
 2421 01a2 2433     		adds	r3, r3, #36
 2422 01a4 3A68     		ldr	r2, [r7]
 2423 01a6 1146     		mov	r1, r2
 2424 01a8 1846     		mov	r0, r3
 2425 01aa FFF7FEFF 		bl	vTaskPlaceOnEventList
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2426              		.loc 1 1566 5
 2427 01ae F86A     		ldr	r0, [r7, #44]
 2428 01b0 FFF7FEFF 		bl	prvUnlockQueue
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2429              		.loc 1 1567 9
 2430 01b4 FFF7FEFF 		bl	xTaskResumeAll
 2431 01b8 0346     		mov	r3, r0
 2432              		.loc 1 1567 7
 2433 01ba 002B     		cmp	r3, #0
 2434 01bc 7FF466AF 		bne	.L148
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 2435              		.loc 1 1569 6
 2436 01c0 184B     		ldr	r3, .L166
 2437 01c2 4FF08052 		mov	r2, #268435456
 2438 01c6 1A60     		str	r2, [r3]
 2439              		.syntax unified
 2440              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2441 01c8 BFF34F8F 		dsb
 2442              	@ 0 "" 2
 2443              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2444 01cc BFF36F8F 		isb
 2445              	@ 0 "" 2
 2446              		.thumb
 2447              		.syntax unified
 2448 01d0 5CE7     		b	.L148
 2449              	.L161:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccGNfTzm.s 			page 76


1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2450              		.loc 1 1580 5
 2451 01d2 F86A     		ldr	r0, [r7, #44]
 2452 01d4 FFF7FEFF 		bl	prvUnlockQueue
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2453              		.loc 1 1581 14
 2454 01d8 FFF7FEFF 		bl	xTaskResumeAll
 2455 01dc 56E7     		b	.L148
 2456              	.L160:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 2457              		.loc 1 1587 4
 2458 01de F86A     		ldr	r0, [r7, #44]
 2459 01e0 FFF7FEFF 		bl	prvUnlockQueue
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2460              		.loc 1 1588 13
 2461 01e4 FFF7FEFF 		bl	xTaskResumeAll
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2462              		.loc 1 1594 8
 2463 01e8 F86A     		ldr	r0, [r7, #44]
 2464 01ea FFF7FEFF 		bl	prvIsQueueEmpty
 2465 01ee 0346     		mov	r3, r0
 2466              		.loc 1 1594 6
 2467 01f0 002B     		cmp	r3, #0
 2468 01f2 3FF44BAF 		beq	.L148
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
 2469              		.loc 1 1601 8
 2470 01f6 3B6B     		ldr	r3, [r7, #48]
 2471 01f8 002B     		cmp	r3, #0
 2472 01fa 0DD0     		beq	.L164
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
 2473              		.loc 1 1603 7
 2474 01fc FFF7FEFF 		bl	vPortEnterCritical
 2475              	.LBB166:
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 77


1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 2476              		.loc 1 1612 35
 2477 0200 F86A     		ldr	r0, [r7, #44]
 2478 0202 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2479 0206 7862     		str	r0, [r7, #36]
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2480              		.loc 1 1613 8
 2481 0208 FB6A     		ldr	r3, [r7, #44]
 2482 020a 9B68     		ldr	r3, [r3, #8]
 2483 020c 796A     		ldr	r1, [r7, #36]
 2484 020e 1846     		mov	r0, r3
 2485 0210 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2486              	.LBE166:
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
 2487              		.loc 1 1615 7
 2488 0214 FFF7FEFF 		bl	vPortExitCritical
 2489              	.L164:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2490              		.loc 1 1621 12
 2491 0218 0023     		movs	r3, #0
 2492              	.L165:
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2493              		.loc 1 1629 1 discriminator 7
 2494 021a 1846     		mov	r0, r3
 2495 021c 3837     		adds	r7, r7, #56
 2496              	.LCFI58:
 2497              		.cfi_def_cfa_offset 8
 2498 021e BD46     		mov	sp, r7
 2499              	.LCFI59:
 2500              		.cfi_def_cfa_register 13
 2501              		@ sp needed
 2502 0220 80BD     		pop	{r7, pc}
 2503              	.L167:
 2504 0222 00BF     		.align	2
 2505              	.L166:
 2506 0224 04ED00E0 		.word	-536810236
 2507              		.cfi_endproc
 2508              	.LFE16:
 2510              		.section	.text.xQueuePeek,"ax",%progbits
ARM GAS  /tmp/ccGNfTzm.s 			page 78


 2511              		.align	1
 2512              		.global	xQueuePeek
 2513              		.syntax unified
 2514              		.thumb
 2515              		.thumb_func
 2516              		.fpu fpv5-d16
 2518              	xQueuePeek:
 2519              	.LFB17:
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2520              		.loc 1 1633 1
 2521              		.cfi_startproc
 2522              		@ args = 0, pretend = 0, frame = 56
 2523              		@ frame_needed = 1, uses_anonymous_args = 0
 2524 0000 80B5     		push	{r7, lr}
 2525              	.LCFI60:
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 8EB0     		sub	sp, sp, #56
 2530              	.LCFI61:
 2531              		.cfi_def_cfa_offset 64
 2532 0004 00AF     		add	r7, sp, #0
 2533              	.LCFI62:
 2534              		.cfi_def_cfa_register 7
 2535 0006 F860     		str	r0, [r7, #12]
 2536 0008 B960     		str	r1, [r7, #8]
 2537 000a 7A60     		str	r2, [r7, #4]
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2538              		.loc 1 1634 12
 2539 000c 0023     		movs	r3, #0
 2540 000e 7B63     		str	r3, [r7, #52]
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2541              		.loc 1 1637 17
 2542 0010 FB68     		ldr	r3, [r7, #12]
 2543 0012 3B63     		str	r3, [r7, #48]
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
 2544              		.loc 1 1640 2
 2545 0014 3B6B     		ldr	r3, [r7, #48]
 2546 0016 002B     		cmp	r3, #0
 2547 0018 0CD1     		bne	.L169
 2548              	.LBB167:
 2549              	.LBB168:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2550              		.loc 2 195 2
 2551              		.syntax unified
 2552              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2553 001a 4FF05003 			mov r3, #80												
 2554 001e 72B6     		cpsid i													
 2555 0020 83F31188 		msr basepri, r3											
 2556 0024 BFF36F8F 		isb														
ARM GAS  /tmp/ccGNfTzm.s 			page 79


 2557 0028 BFF34F8F 		dsb														
 2558 002c 62B6     		cpsie i													
 2559              	
 2560              	@ 0 "" 2
 2561              		.thumb
 2562              		.syntax unified
 2563 002e 7B62     		str	r3, [r7, #36]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2564              		.loc 2 205 1
 2565 0030 00BF     		nop
 2566              	.L170:
 2567              	.LBE168:
 2568              	.LBE167:
 2569              		.loc 1 1640 2 discriminator 1
 2570 0032 FEE7     		b	.L170
 2571              	.L169:
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
 2572              		.loc 1 1644 2
 2573 0034 BB68     		ldr	r3, [r7, #8]
 2574 0036 002B     		cmp	r3, #0
 2575 0038 03D1     		bne	.L171
 2576              		.loc 1 1644 2 is_stmt 0 discriminator 2
 2577 003a 3B6B     		ldr	r3, [r7, #48]
 2578 003c 1B6C     		ldr	r3, [r3, #64]
 2579 003e 002B     		cmp	r3, #0
 2580 0040 01D1     		bne	.L172
 2581              	.L171:
 2582              		.loc 1 1644 2 discriminator 3
 2583 0042 0123     		movs	r3, #1
 2584 0044 00E0     		b	.L173
 2585              	.L172:
 2586              		.loc 1 1644 2 discriminator 4
 2587 0046 0023     		movs	r3, #0
 2588              	.L173:
 2589              		.loc 1 1644 2 discriminator 6
 2590 0048 002B     		cmp	r3, #0
 2591 004a 0CD1     		bne	.L174
 2592              	.LBB169:
 2593              	.LBB170:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2594              		.loc 2 195 2 is_stmt 1
 2595              		.syntax unified
 2596              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2597 004c 4FF05003 			mov r3, #80												
 2598 0050 72B6     		cpsid i													
 2599 0052 83F31188 		msr basepri, r3											
 2600 0056 BFF36F8F 		isb														
 2601 005a BFF34F8F 		dsb														
 2602 005e 62B6     		cpsie i													
 2603              	
 2604              	@ 0 "" 2
 2605              		.thumb
 2606              		.syntax unified
 2607 0060 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/ccGNfTzm.s 			page 80


 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2608              		.loc 2 205 1
 2609 0062 00BF     		nop
 2610              	.L175:
 2611              	.LBE170:
 2612              	.LBE169:
 2613              		.loc 1 1644 2 discriminator 2
 2614 0064 FEE7     		b	.L175
 2615              	.L174:
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 2616              		.loc 1 1649 3
 2617 0066 FFF7FEFF 		bl	xTaskGetSchedulerState
 2618 006a 0346     		mov	r3, r0
 2619 006c 002B     		cmp	r3, #0
 2620 006e 02D1     		bne	.L176
 2621              		.loc 1 1649 3 is_stmt 0 discriminator 2
 2622 0070 7B68     		ldr	r3, [r7, #4]
 2623 0072 002B     		cmp	r3, #0
 2624 0074 01D1     		bne	.L177
 2625              	.L176:
 2626              		.loc 1 1649 3 discriminator 3
 2627 0076 0123     		movs	r3, #1
 2628 0078 00E0     		b	.L178
 2629              	.L177:
 2630              		.loc 1 1649 3 discriminator 4
 2631 007a 0023     		movs	r3, #0
 2632              	.L178:
 2633              		.loc 1 1649 3 discriminator 6
 2634 007c 002B     		cmp	r3, #0
 2635 007e 0CD1     		bne	.L179
 2636              	.LBB171:
 2637              	.LBB172:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2638              		.loc 2 195 2 is_stmt 1
 2639              		.syntax unified
 2640              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2641 0080 4FF05003 			mov r3, #80												
 2642 0084 72B6     		cpsid i													
 2643 0086 83F31188 		msr basepri, r3											
 2644 008a BFF36F8F 		isb														
 2645 008e BFF34F8F 		dsb														
 2646 0092 62B6     		cpsie i													
 2647              	
 2648              	@ 0 "" 2
 2649              		.thumb
 2650              		.syntax unified
 2651 0094 FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2652              		.loc 2 205 1
 2653 0096 00BF     		nop
 2654              	.L180:
 2655              	.LBE172:
 2656              	.LBE171:
ARM GAS  /tmp/ccGNfTzm.s 			page 81


 2657              		.loc 1 1649 3 discriminator 3
 2658 0098 FEE7     		b	.L180
 2659              	.L179:
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 2660              		.loc 1 1659 3
 2661 009a FFF7FEFF 		bl	vPortEnterCritical
 2662              	.LBB173:
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2663              		.loc 1 1661 22
 2664 009e 3B6B     		ldr	r3, [r7, #48]
 2665 00a0 9B6B     		ldr	r3, [r3, #56]
 2666 00a2 FB62     		str	r3, [r7, #44]
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2667              		.loc 1 1665 6
 2668 00a4 FB6A     		ldr	r3, [r7, #44]
 2669 00a6 002B     		cmp	r3, #0
 2670 00a8 21D0     		beq	.L181
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
 2671              		.loc 1 1670 28
 2672 00aa 3B6B     		ldr	r3, [r7, #48]
 2673 00ac DB68     		ldr	r3, [r3, #12]
 2674 00ae BB62     		str	r3, [r7, #40]
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 2675              		.loc 1 1672 5
 2676 00b0 B968     		ldr	r1, [r7, #8]
 2677 00b2 386B     		ldr	r0, [r7, #48]
 2678 00b4 FFF7FEFF 		bl	prvCopyDataFromQueue
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2679              		.loc 1 1676 34
 2680 00b8 3B6B     		ldr	r3, [r7, #48]
 2681 00ba BA6A     		ldr	r2, [r7, #40]
 2682 00bc DA60     		str	r2, [r3, #12]
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  /tmp/ccGNfTzm.s 			page 82


 2683              		.loc 1 1680 9
 2684 00be 3B6B     		ldr	r3, [r7, #48]
 2685 00c0 5B6A     		ldr	r3, [r3, #36]
 2686              		.loc 1 1680 7
 2687 00c2 002B     		cmp	r3, #0
 2688 00c4 0FD0     		beq	.L182
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2689              		.loc 1 1682 36
 2690 00c6 3B6B     		ldr	r3, [r7, #48]
 2691 00c8 2433     		adds	r3, r3, #36
 2692              		.loc 1 1682 10
 2693 00ca 1846     		mov	r0, r3
 2694 00cc FFF7FEFF 		bl	xTaskRemoveFromEventList
 2695 00d0 0346     		mov	r3, r0
 2696              		.loc 1 1682 8
 2697 00d2 002B     		cmp	r3, #0
 2698 00d4 07D0     		beq	.L182
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 2699              		.loc 1 1685 7
 2700 00d6 3D4B     		ldr	r3, .L192
 2701 00d8 4FF08052 		mov	r2, #268435456
 2702 00dc 1A60     		str	r2, [r3]
 2703              		.syntax unified
 2704              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2705 00de BFF34F8F 		dsb
 2706              	@ 0 "" 2
 2707              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2708 00e2 BFF36F8F 		isb
 2709              	@ 0 "" 2
 2710              		.thumb
 2711              		.syntax unified
 2712              	.L182:
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 2713              		.loc 1 1697 5
 2714 00e6 FFF7FEFF 		bl	vPortExitCritical
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2715              		.loc 1 1698 12
 2716 00ea 0123     		movs	r3, #1
 2717 00ec 69E0     		b	.L191
 2718              	.L181:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccGNfTzm.s 			page 83


1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 2719              		.loc 1 1702 22
 2720 00ee 7B68     		ldr	r3, [r7, #4]
 2721              		.loc 1 1702 7
 2722 00f0 002B     		cmp	r3, #0
 2723 00f2 03D1     		bne	.L184
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 2724              		.loc 1 1706 6
 2725 00f4 FFF7FEFF 		bl	vPortExitCritical
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2726              		.loc 1 1708 13
 2727 00f8 0023     		movs	r3, #0
 2728 00fa 62E0     		b	.L191
 2729              	.L184:
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 2730              		.loc 1 1710 12
 2731 00fc 7B6B     		ldr	r3, [r7, #52]
 2732 00fe 002B     		cmp	r3, #0
 2733 0100 06D1     		bne	.L185
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 2734              		.loc 1 1715 6
 2735 0102 07F11403 		add	r3, r7, #20
 2736 0106 1846     		mov	r0, r3
 2737 0108 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2738              		.loc 1 1716 20
 2739 010c 0123     		movs	r3, #1
 2740 010e 7B63     		str	r3, [r7, #52]
 2741              	.L185:
 2742              	.LBE173:
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 2743              		.loc 1 1725 3
 2744 0110 FFF7FEFF 		bl	vPortExitCritical
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 2745              		.loc 1 1730 3
 2746 0114 FFF7FEFF 		bl	vTaskSuspendAll
ARM GAS  /tmp/ccGNfTzm.s 			page 84


1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2747              		.loc 1 1731 3
 2748 0118 FFF7FEFF 		bl	vPortEnterCritical
 2749 011c 3B6B     		ldr	r3, [r7, #48]
 2750 011e 93F84430 		ldrb	r3, [r3, #68]
 2751 0122 5BB2     		sxtb	r3, r3
 2752 0124 B3F1FF3F 		cmp	r3, #-1
 2753 0128 03D1     		bne	.L186
 2754              		.loc 1 1731 3 is_stmt 0 discriminator 1
 2755 012a 3B6B     		ldr	r3, [r7, #48]
 2756 012c 0022     		movs	r2, #0
 2757 012e 83F84420 		strb	r2, [r3, #68]
 2758              	.L186:
 2759              		.loc 1 1731 3 discriminator 3
 2760 0132 3B6B     		ldr	r3, [r7, #48]
 2761 0134 93F84530 		ldrb	r3, [r3, #69]
 2762 0138 5BB2     		sxtb	r3, r3
 2763 013a B3F1FF3F 		cmp	r3, #-1
 2764 013e 03D1     		bne	.L187
 2765              		.loc 1 1731 3 discriminator 4
 2766 0140 3B6B     		ldr	r3, [r7, #48]
 2767 0142 0022     		movs	r2, #0
 2768 0144 83F84520 		strb	r2, [r3, #69]
 2769              	.L187:
 2770              		.loc 1 1731 3 discriminator 6
 2771 0148 FFF7FEFF 		bl	vPortExitCritical
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2772              		.loc 1 1734 7 is_stmt 1 discriminator 6
 2773 014c 3A1D     		adds	r2, r7, #4
 2774 014e 07F11403 		add	r3, r7, #20
 2775 0152 1146     		mov	r1, r2
 2776 0154 1846     		mov	r0, r3
 2777 0156 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2778 015a 0346     		mov	r3, r0
 2779              		.loc 1 1734 5 discriminator 6
 2780 015c 002B     		cmp	r3, #0
 2781 015e 23D1     		bne	.L188
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2782              		.loc 1 1738 8
 2783 0160 386B     		ldr	r0, [r7, #48]
 2784 0162 FFF7FEFF 		bl	prvIsQueueEmpty
 2785 0166 0346     		mov	r3, r0
 2786              		.loc 1 1738 6
 2787 0168 002B     		cmp	r3, #0
 2788 016a 17D0     		beq	.L189
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2789              		.loc 1 1741 5
 2790 016c 3B6B     		ldr	r3, [r7, #48]
 2791 016e 2433     		adds	r3, r3, #36
 2792 0170 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccGNfTzm.s 			page 85


 2793 0172 1146     		mov	r1, r2
 2794 0174 1846     		mov	r0, r3
 2795 0176 FFF7FEFF 		bl	vTaskPlaceOnEventList
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2796              		.loc 1 1742 5
 2797 017a 386B     		ldr	r0, [r7, #48]
 2798 017c FFF7FEFF 		bl	prvUnlockQueue
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2799              		.loc 1 1743 9
 2800 0180 FFF7FEFF 		bl	xTaskResumeAll
 2801 0184 0346     		mov	r3, r0
 2802              		.loc 1 1743 7
 2803 0186 002B     		cmp	r3, #0
 2804 0188 87D1     		bne	.L179
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 2805              		.loc 1 1745 6
 2806 018a 104B     		ldr	r3, .L192
 2807 018c 4FF08052 		mov	r2, #268435456
 2808 0190 1A60     		str	r2, [r3]
 2809              		.syntax unified
 2810              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2811 0192 BFF34F8F 		dsb
 2812              	@ 0 "" 2
 2813              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2814 0196 BFF36F8F 		isb
 2815              	@ 0 "" 2
 2816              		.thumb
 2817              		.syntax unified
 2818 019a 7EE7     		b	.L179
 2819              	.L189:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2820              		.loc 1 1756 5
 2821 019c 386B     		ldr	r0, [r7, #48]
 2822 019e FFF7FEFF 		bl	prvUnlockQueue
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2823              		.loc 1 1757 14
 2824 01a2 FFF7FEFF 		bl	xTaskResumeAll
 2825 01a6 78E7     		b	.L179
 2826              	.L188:
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
ARM GAS  /tmp/ccGNfTzm.s 			page 86


 2827              		.loc 1 1764 4
 2828 01a8 386B     		ldr	r0, [r7, #48]
 2829 01aa FFF7FEFF 		bl	prvUnlockQueue
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2830              		.loc 1 1765 13
 2831 01ae FFF7FEFF 		bl	xTaskResumeAll
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2832              		.loc 1 1767 8
 2833 01b2 386B     		ldr	r0, [r7, #48]
 2834 01b4 FFF7FEFF 		bl	prvIsQueueEmpty
 2835 01b8 0346     		mov	r3, r0
 2836              		.loc 1 1767 6
 2837 01ba 002B     		cmp	r3, #0
 2838 01bc 3FF46DAF 		beq	.L179
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2839              		.loc 1 1770 12
 2840 01c0 0023     		movs	r3, #0
 2841              	.L191:
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2842              		.loc 1 1778 1 discriminator 6
 2843 01c2 1846     		mov	r0, r3
 2844 01c4 3837     		adds	r7, r7, #56
 2845              	.LCFI63:
 2846              		.cfi_def_cfa_offset 8
 2847 01c6 BD46     		mov	sp, r7
 2848              	.LCFI64:
 2849              		.cfi_def_cfa_register 13
 2850              		@ sp needed
 2851 01c8 80BD     		pop	{r7, pc}
 2852              	.L193:
 2853 01ca 00BF     		.align	2
 2854              	.L192:
 2855 01cc 04ED00E0 		.word	-536810236
 2856              		.cfi_endproc
 2857              	.LFE17:
 2859              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2860              		.align	1
 2861              		.global	xQueueReceiveFromISR
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2865              		.fpu fpv5-d16
 2867              	xQueueReceiveFromISR:
 2868              	.LFB18:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
ARM GAS  /tmp/ccGNfTzm.s 			page 87


1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2869              		.loc 1 1782 1
 2870              		.cfi_startproc
 2871              		@ args = 0, pretend = 0, frame = 56
 2872              		@ frame_needed = 1, uses_anonymous_args = 0
 2873 0000 80B5     		push	{r7, lr}
 2874              	.LCFI65:
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 7, -8
 2877              		.cfi_offset 14, -4
 2878 0002 8EB0     		sub	sp, sp, #56
 2879              	.LCFI66:
 2880              		.cfi_def_cfa_offset 64
 2881 0004 00AF     		add	r7, sp, #0
 2882              	.LCFI67:
 2883              		.cfi_def_cfa_register 7
 2884 0006 F860     		str	r0, [r7, #12]
 2885 0008 B960     		str	r1, [r7, #8]
 2886 000a 7A60     		str	r2, [r7, #4]
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2887              		.loc 1 1785 17
 2888 000c FB68     		ldr	r3, [r7, #12]
 2889 000e 3B63     		str	r3, [r7, #48]
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 2890              		.loc 1 1787 2
 2891 0010 3B6B     		ldr	r3, [r7, #48]
 2892 0012 002B     		cmp	r3, #0
 2893 0014 0CD1     		bne	.L195
 2894              	.LBB174:
 2895              	.LBB175:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2896              		.loc 2 195 2
 2897              		.syntax unified
 2898              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2899 0016 4FF05003 			mov r3, #80												
 2900 001a 72B6     		cpsid i													
 2901 001c 83F31188 		msr basepri, r3											
 2902 0020 BFF36F8F 		isb														
 2903 0024 BFF34F8F 		dsb														
 2904 0028 62B6     		cpsie i													
 2905              	
 2906              	@ 0 "" 2
 2907              		.thumb
 2908              		.syntax unified
 2909 002a 3B62     		str	r3, [r7, #32]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2910              		.loc 2 205 1
 2911 002c 00BF     		nop
 2912              	.L196:
 2913              	.LBE175:
 2914              	.LBE174:
 2915              		.loc 1 1787 2 discriminator 1
 2916 002e FEE7     		b	.L196
 2917              	.L195:
ARM GAS  /tmp/ccGNfTzm.s 			page 88


1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2918              		.loc 1 1788 2
 2919 0030 BB68     		ldr	r3, [r7, #8]
 2920 0032 002B     		cmp	r3, #0
 2921 0034 03D1     		bne	.L197
 2922              		.loc 1 1788 2 is_stmt 0 discriminator 2
 2923 0036 3B6B     		ldr	r3, [r7, #48]
 2924 0038 1B6C     		ldr	r3, [r3, #64]
 2925 003a 002B     		cmp	r3, #0
 2926 003c 01D1     		bne	.L198
 2927              	.L197:
 2928              		.loc 1 1788 2 discriminator 3
 2929 003e 0123     		movs	r3, #1
 2930 0040 00E0     		b	.L199
 2931              	.L198:
 2932              		.loc 1 1788 2 discriminator 4
 2933 0042 0023     		movs	r3, #0
 2934              	.L199:
 2935              		.loc 1 1788 2 discriminator 6
 2936 0044 002B     		cmp	r3, #0
 2937 0046 0CD1     		bne	.L200
 2938              	.LBB176:
 2939              	.LBB177:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2940              		.loc 2 195 2 is_stmt 1
 2941              		.syntax unified
 2942              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2943 0048 4FF05003 			mov r3, #80												
 2944 004c 72B6     		cpsid i													
 2945 004e 83F31188 		msr basepri, r3											
 2946 0052 BFF36F8F 		isb														
 2947 0056 BFF34F8F 		dsb														
 2948 005a 62B6     		cpsie i													
 2949              	
 2950              	@ 0 "" 2
 2951              		.thumb
 2952              		.syntax unified
 2953 005c FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 2954              		.loc 2 205 1
 2955 005e 00BF     		nop
 2956              	.L201:
 2957              	.LBE177:
 2958              	.LBE176:
 2959              		.loc 1 1788 2 discriminator 2
 2960 0060 FEE7     		b	.L201
 2961              	.L200:
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
ARM GAS  /tmp/ccGNfTzm.s 			page 89


1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2962              		.loc 1 1804 2
 2963 0062 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2964              	.LBB178:
 2965              	.LBB179:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2966              		.loc 2 213 2
 2967              		.syntax unified
 2968              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2969 0066 EFF31182 			mrs r2, basepri											
 2970 006a 4FF05003 		mov r3, #80												
 2971 006e 72B6     		cpsid i													
 2972 0070 83F31188 		msr basepri, r3											
 2973 0074 BFF36F8F 		isb														
 2974 0078 BFF34F8F 		dsb														
 2975 007c 62B6     		cpsie i													
 2976              	
 2977              	@ 0 "" 2
 2978              		.thumb
 2979              		.syntax unified
 2980 007e BA61     		str	r2, [r7, #24]
 2981 0080 7B61     		str	r3, [r7, #20]
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 2982              		.loc 2 227 9
 2983 0082 BB69     		ldr	r3, [r7, #24]
 2984              	.LBE179:
 2985              	.LBE178:
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2986              		.loc 1 1806 27
 2987 0084 FB62     		str	r3, [r7, #44]
 2988              	.LBB180:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2989              		.loc 1 1808 21
 2990 0086 3B6B     		ldr	r3, [r7, #48]
 2991 0088 9B6B     		ldr	r3, [r3, #56]
 2992 008a BB62     		str	r3, [r7, #40]
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2993              		.loc 1 1811 5
 2994 008c BB6A     		ldr	r3, [r7, #40]
 2995 008e 002B     		cmp	r3, #0
 2996 0090 2FD0     		beq	.L203
 2997              	.LBB181:
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
 2998              		.loc 1 1813 17
 2999 0092 3B6B     		ldr	r3, [r7, #48]
 3000 0094 93F84430 		ldrb	r3, [r3, #68]
 3001 0098 87F82730 		strb	r3, [r7, #39]
ARM GAS  /tmp/ccGNfTzm.s 			page 90


1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3002              		.loc 1 1817 4
 3003 009c B968     		ldr	r1, [r7, #8]
 3004 009e 386B     		ldr	r0, [r7, #48]
 3005 00a0 FFF7FEFF 		bl	prvCopyDataFromQueue
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3006              		.loc 1 1818 51
 3007 00a4 BB6A     		ldr	r3, [r7, #40]
 3008 00a6 5A1E     		subs	r2, r3, #1
 3009              		.loc 1 1818 31
 3010 00a8 3B6B     		ldr	r3, [r7, #48]
 3011 00aa 9A63     		str	r2, [r3, #56]
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
 3012              		.loc 1 1824 6
 3013 00ac 97F92730 		ldrsb	r3, [r7, #39]
 3014 00b0 B3F1FF3F 		cmp	r3, #-1
 3015 00b4 12D1     		bne	.L204
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 3016              		.loc 1 1826 9
 3017 00b6 3B6B     		ldr	r3, [r7, #48]
 3018 00b8 1B69     		ldr	r3, [r3, #16]
 3019              		.loc 1 1826 7
 3020 00ba 002B     		cmp	r3, #0
 3021 00bc 16D0     		beq	.L205
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 3022              		.loc 1 1828 36
 3023 00be 3B6B     		ldr	r3, [r7, #48]
 3024 00c0 1033     		adds	r3, r3, #16
 3025              		.loc 1 1828 10
 3026 00c2 1846     		mov	r0, r3
 3027 00c4 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3028 00c8 0346     		mov	r3, r0
 3029              		.loc 1 1828 8
 3030 00ca 002B     		cmp	r3, #0
 3031 00cc 0ED0     		beq	.L205
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 3032              		.loc 1 1832 9
 3033 00ce 7B68     		ldr	r3, [r7, #4]
 3034 00d0 002B     		cmp	r3, #0
 3035 00d2 0BD0     		beq	.L205
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 3036              		.loc 1 1834 35
 3037 00d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccGNfTzm.s 			page 91


 3038 00d6 0122     		movs	r2, #1
 3039 00d8 1A60     		str	r2, [r3]
 3040 00da 07E0     		b	.L205
 3041              	.L204:
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 3042              		.loc 1 1855 45
 3043 00dc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3044 00e0 0133     		adds	r3, r3, #1
 3045 00e2 DBB2     		uxtb	r3, r3
 3046              		.loc 1 1855 24
 3047 00e4 5AB2     		sxtb	r2, r3
 3048              		.loc 1 1855 22
 3049 00e6 3B6B     		ldr	r3, [r7, #48]
 3050 00e8 83F84420 		strb	r2, [r3, #68]
 3051              	.L205:
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 3052              		.loc 1 1858 12
 3053 00ec 0123     		movs	r3, #1
 3054 00ee 7B63     		str	r3, [r7, #52]
 3055              	.LBE181:
 3056 00f0 01E0     		b	.L206
 3057              	.L203:
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 3058              		.loc 1 1862 12
 3059 00f2 0023     		movs	r3, #0
 3060 00f4 7B63     		str	r3, [r7, #52]
 3061              	.L206:
 3062 00f6 FB6A     		ldr	r3, [r7, #44]
 3063 00f8 3B61     		str	r3, [r7, #16]
 3064              	.LBE180:
 3065              	.LBB182:
 3066              	.LBB183:
ARM GAS  /tmp/ccGNfTzm.s 			page 92


 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3067              		.loc 2 233 2
 3068 00fa 3B69     		ldr	r3, [r7, #16]
 3069              		.syntax unified
 3070              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3071 00fc 83F31188 			msr basepri, r3	
 3072              	@ 0 "" 2
 3073              		.loc 2 237 1
 3074              		.thumb
 3075              		.syntax unified
 3076 0100 00BF     		nop
 3077              	.LBE183:
 3078              	.LBE182:
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3079              		.loc 1 1868 9
 3080 0102 7B6B     		ldr	r3, [r7, #52]
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3081              		.loc 1 1869 1
 3082 0104 1846     		mov	r0, r3
 3083 0106 3837     		adds	r7, r7, #56
 3084              	.LCFI68:
 3085              		.cfi_def_cfa_offset 8
 3086 0108 BD46     		mov	sp, r7
 3087              	.LCFI69:
 3088              		.cfi_def_cfa_register 13
 3089              		@ sp needed
 3090 010a 80BD     		pop	{r7, pc}
 3091              		.cfi_endproc
 3092              	.LFE18:
 3094              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3095              		.align	1
 3096              		.global	xQueuePeekFromISR
 3097              		.syntax unified
 3098              		.thumb
 3099              		.thumb_func
 3100              		.fpu fpv5-d16
 3102              	xQueuePeekFromISR:
 3103              	.LFB19:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3104              		.loc 1 1873 1
 3105              		.cfi_startproc
 3106              		@ args = 0, pretend = 0, frame = 48
 3107              		@ frame_needed = 1, uses_anonymous_args = 0
 3108 0000 80B5     		push	{r7, lr}
 3109              	.LCFI70:
 3110              		.cfi_def_cfa_offset 8
 3111              		.cfi_offset 7, -8
 3112              		.cfi_offset 14, -4
 3113 0002 8CB0     		sub	sp, sp, #48
ARM GAS  /tmp/ccGNfTzm.s 			page 93


 3114              	.LCFI71:
 3115              		.cfi_def_cfa_offset 56
 3116 0004 00AF     		add	r7, sp, #0
 3117              	.LCFI72:
 3118              		.cfi_def_cfa_register 7
 3119 0006 7860     		str	r0, [r7, #4]
 3120 0008 3960     		str	r1, [r7]
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3121              		.loc 1 1877 17
 3122 000a 7B68     		ldr	r3, [r7, #4]
 3123 000c BB62     		str	r3, [r7, #40]
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3124              		.loc 1 1879 2
 3125 000e BB6A     		ldr	r3, [r7, #40]
 3126 0010 002B     		cmp	r3, #0
 3127 0012 0CD1     		bne	.L209
 3128              	.LBB184:
 3129              	.LBB185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3130              		.loc 2 195 2
 3131              		.syntax unified
 3132              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3133 0014 4FF05003 			mov r3, #80												
 3134 0018 72B6     		cpsid i													
 3135 001a 83F31188 		msr basepri, r3											
 3136 001e BFF36F8F 		isb														
 3137 0022 BFF34F8F 		dsb														
 3138 0026 62B6     		cpsie i													
 3139              	
 3140              	@ 0 "" 2
 3141              		.thumb
 3142              		.syntax unified
 3143 0028 FB61     		str	r3, [r7, #28]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3144              		.loc 2 205 1
 3145 002a 00BF     		nop
 3146              	.L210:
 3147              	.LBE185:
 3148              	.LBE184:
 3149              		.loc 1 1879 2 discriminator 1
 3150 002c FEE7     		b	.L210
 3151              	.L209:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3152              		.loc 1 1880 2
 3153 002e 3B68     		ldr	r3, [r7]
 3154 0030 002B     		cmp	r3, #0
 3155 0032 03D1     		bne	.L211
 3156              		.loc 1 1880 2 is_stmt 0 discriminator 2
 3157 0034 BB6A     		ldr	r3, [r7, #40]
 3158 0036 1B6C     		ldr	r3, [r3, #64]
 3159 0038 002B     		cmp	r3, #0
 3160 003a 01D1     		bne	.L212
 3161              	.L211:
ARM GAS  /tmp/ccGNfTzm.s 			page 94


 3162              		.loc 1 1880 2 discriminator 3
 3163 003c 0123     		movs	r3, #1
 3164 003e 00E0     		b	.L213
 3165              	.L212:
 3166              		.loc 1 1880 2 discriminator 4
 3167 0040 0023     		movs	r3, #0
 3168              	.L213:
 3169              		.loc 1 1880 2 discriminator 6
 3170 0042 002B     		cmp	r3, #0
 3171 0044 0CD1     		bne	.L214
 3172              	.LBB186:
 3173              	.LBB187:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3174              		.loc 2 195 2 is_stmt 1
 3175              		.syntax unified
 3176              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3177 0046 4FF05003 			mov r3, #80												
 3178 004a 72B6     		cpsid i													
 3179 004c 83F31188 		msr basepri, r3											
 3180 0050 BFF36F8F 		isb														
 3181 0054 BFF34F8F 		dsb														
 3182 0058 62B6     		cpsie i													
 3183              	
 3184              	@ 0 "" 2
 3185              		.thumb
 3186              		.syntax unified
 3187 005a BB61     		str	r3, [r7, #24]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3188              		.loc 2 205 1
 3189 005c 00BF     		nop
 3190              	.L215:
 3191              	.LBE187:
 3192              	.LBE186:
 3193              		.loc 1 1880 2 discriminator 2
 3194 005e FEE7     		b	.L215
 3195              	.L214:
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3196              		.loc 1 1881 2
 3197 0060 BB6A     		ldr	r3, [r7, #40]
 3198 0062 1B6C     		ldr	r3, [r3, #64]
 3199 0064 002B     		cmp	r3, #0
 3200 0066 0CD1     		bne	.L216
 3201              	.LBB188:
 3202              	.LBB189:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3203              		.loc 2 195 2
 3204              		.syntax unified
 3205              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3206 0068 4FF05003 			mov r3, #80												
 3207 006c 72B6     		cpsid i													
 3208 006e 83F31188 		msr basepri, r3											
 3209 0072 BFF36F8F 		isb														
 3210 0076 BFF34F8F 		dsb														
 3211 007a 62B6     		cpsie i													
 3212              	
 3213              	@ 0 "" 2
 3214              		.thumb
ARM GAS  /tmp/ccGNfTzm.s 			page 95


 3215              		.syntax unified
 3216 007c 7B61     		str	r3, [r7, #20]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3217              		.loc 2 205 1
 3218 007e 00BF     		nop
 3219              	.L217:
 3220              	.LBE189:
 3221              	.LBE188:
 3222              		.loc 1 1881 2 discriminator 3
 3223 0080 FEE7     		b	.L217
 3224              	.L216:
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 3225              		.loc 1 1897 2
 3226 0082 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3227              	.LBB190:
 3228              	.LBB191:
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3229              		.loc 2 213 2
 3230              		.syntax unified
 3231              	@ 213 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3232 0086 EFF31182 			mrs r2, basepri											
 3233 008a 4FF05003 		mov r3, #80												
 3234 008e 72B6     		cpsid i													
 3235 0090 83F31188 		msr basepri, r3											
 3236 0094 BFF36F8F 		isb														
 3237 0098 BFF34F8F 		dsb														
 3238 009c 62B6     		cpsie i													
 3239              	
 3240              	@ 0 "" 2
 3241              		.thumb
 3242              		.syntax unified
 3243 009e 3A61     		str	r2, [r7, #16]
 3244 00a0 FB60     		str	r3, [r7, #12]
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 3245              		.loc 2 227 9
 3246 00a2 3B69     		ldr	r3, [r7, #16]
 3247              	.LBE191:
 3248              	.LBE190:
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 3249              		.loc 1 1899 27
 3250 00a4 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccGNfTzm.s 			page 96


1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 3251              		.loc 1 1902 14
 3252 00a6 BB6A     		ldr	r3, [r7, #40]
 3253 00a8 9B6B     		ldr	r3, [r3, #56]
 3254              		.loc 1 1902 5
 3255 00aa 002B     		cmp	r3, #0
 3256 00ac 0CD0     		beq	.L219
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
 3257              		.loc 1 1908 27
 3258 00ae BB6A     		ldr	r3, [r7, #40]
 3259 00b0 DB68     		ldr	r3, [r3, #12]
 3260 00b2 3B62     		str	r3, [r7, #32]
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3261              		.loc 1 1909 4
 3262 00b4 3968     		ldr	r1, [r7]
 3263 00b6 B86A     		ldr	r0, [r7, #40]
 3264 00b8 FFF7FEFF 		bl	prvCopyDataFromQueue
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 3265              		.loc 1 1910 33
 3266 00bc BB6A     		ldr	r3, [r7, #40]
 3267 00be 3A6A     		ldr	r2, [r7, #32]
 3268 00c0 DA60     		str	r2, [r3, #12]
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 3269              		.loc 1 1912 12
 3270 00c2 0123     		movs	r3, #1
 3271 00c4 FB62     		str	r3, [r7, #44]
 3272 00c6 01E0     		b	.L220
 3273              	.L219:
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 3274              		.loc 1 1916 12
 3275 00c8 0023     		movs	r3, #0
 3276 00ca FB62     		str	r3, [r7, #44]
 3277              	.L220:
 3278 00cc 7B6A     		ldr	r3, [r7, #36]
 3279 00ce BB60     		str	r3, [r7, #8]
 3280              	.LBB192:
 3281              	.LBB193:
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3282              		.loc 2 233 2
 3283 00d0 BB68     		ldr	r3, [r7, #8]
 3284              		.syntax unified
 3285              	@ 233 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3286 00d2 83F31188 			msr basepri, r3	
 3287              	@ 0 "" 2
 3288              		.loc 2 237 1
 3289              		.thumb
ARM GAS  /tmp/ccGNfTzm.s 			page 97


 3290              		.syntax unified
 3291 00d6 00BF     		nop
 3292              	.LBE193:
 3293              	.LBE192:
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3294              		.loc 1 1922 9
 3295 00d8 FB6A     		ldr	r3, [r7, #44]
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3296              		.loc 1 1923 1
 3297 00da 1846     		mov	r0, r3
 3298 00dc 3037     		adds	r7, r7, #48
 3299              	.LCFI73:
 3300              		.cfi_def_cfa_offset 8
 3301 00de BD46     		mov	sp, r7
 3302              	.LCFI74:
 3303              		.cfi_def_cfa_register 13
 3304              		@ sp needed
 3305 00e0 80BD     		pop	{r7, pc}
 3306              		.cfi_endproc
 3307              	.LFE19:
 3309              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3310              		.align	1
 3311              		.global	uxQueueMessagesWaiting
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv5-d16
 3317              	uxQueueMessagesWaiting:
 3318              	.LFB20:
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3319              		.loc 1 1927 1
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 16
 3322              		@ frame_needed = 1, uses_anonymous_args = 0
 3323 0000 80B5     		push	{r7, lr}
 3324              	.LCFI75:
 3325              		.cfi_def_cfa_offset 8
 3326              		.cfi_offset 7, -8
 3327              		.cfi_offset 14, -4
 3328 0002 84B0     		sub	sp, sp, #16
 3329              	.LCFI76:
 3330              		.cfi_def_cfa_offset 24
 3331 0004 00AF     		add	r7, sp, #0
 3332              	.LCFI77:
 3333              		.cfi_def_cfa_register 7
 3334 0006 7860     		str	r0, [r7, #4]
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
ARM GAS  /tmp/ccGNfTzm.s 			page 98


 3335              		.loc 1 1930 2
 3336 0008 7B68     		ldr	r3, [r7, #4]
 3337 000a 002B     		cmp	r3, #0
 3338 000c 0CD1     		bne	.L223
 3339              	.LBB194:
 3340              	.LBB195:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3341              		.loc 2 195 2
 3342              		.syntax unified
 3343              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3344 000e 4FF05003 			mov r3, #80												
 3345 0012 72B6     		cpsid i													
 3346 0014 83F31188 		msr basepri, r3											
 3347 0018 BFF36F8F 		isb														
 3348 001c BFF34F8F 		dsb														
 3349 0020 62B6     		cpsie i													
 3350              	
 3351              	@ 0 "" 2
 3352              		.thumb
 3353              		.syntax unified
 3354 0022 BB60     		str	r3, [r7, #8]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3355              		.loc 2 205 1
 3356 0024 00BF     		nop
 3357              	.L224:
 3358              	.LBE195:
 3359              	.LBE194:
 3360              		.loc 1 1930 2 discriminator 1
 3361 0026 FEE7     		b	.L224
 3362              	.L223:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3363              		.loc 1 1932 2
 3364 0028 FFF7FEFF 		bl	vPortEnterCritical
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 3365              		.loc 1 1934 12
 3366 002c 7B68     		ldr	r3, [r7, #4]
 3367 002e 9B6B     		ldr	r3, [r3, #56]
 3368 0030 FB60     		str	r3, [r7, #12]
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3369              		.loc 1 1936 2
 3370 0032 FFF7FEFF 		bl	vPortExitCritical
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3371              		.loc 1 1938 9
 3372 0036 FB68     		ldr	r3, [r7, #12]
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3373              		.loc 1 1939 1
 3374 0038 1846     		mov	r0, r3
 3375 003a 1037     		adds	r7, r7, #16
 3376              	.LCFI78:
 3377              		.cfi_def_cfa_offset 8
 3378 003c BD46     		mov	sp, r7
 3379              	.LCFI79:
 3380              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccGNfTzm.s 			page 99


 3381              		@ sp needed
 3382 003e 80BD     		pop	{r7, pc}
 3383              		.cfi_endproc
 3384              	.LFE20:
 3386              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3387              		.align	1
 3388              		.global	uxQueueSpacesAvailable
 3389              		.syntax unified
 3390              		.thumb
 3391              		.thumb_func
 3392              		.fpu fpv5-d16
 3394              	uxQueueSpacesAvailable:
 3395              	.LFB21:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3396              		.loc 1 1943 1
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 24
 3399              		@ frame_needed = 1, uses_anonymous_args = 0
 3400 0000 80B5     		push	{r7, lr}
 3401              	.LCFI80:
 3402              		.cfi_def_cfa_offset 8
 3403              		.cfi_offset 7, -8
 3404              		.cfi_offset 14, -4
 3405 0002 86B0     		sub	sp, sp, #24
 3406              	.LCFI81:
 3407              		.cfi_def_cfa_offset 32
 3408 0004 00AF     		add	r7, sp, #0
 3409              	.LCFI82:
 3410              		.cfi_def_cfa_register 7
 3411 0006 7860     		str	r0, [r7, #4]
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3412              		.loc 1 1945 17
 3413 0008 7B68     		ldr	r3, [r7, #4]
 3414 000a 7B61     		str	r3, [r7, #20]
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3415              		.loc 1 1947 2
 3416 000c 7B69     		ldr	r3, [r7, #20]
 3417 000e 002B     		cmp	r3, #0
 3418 0010 0CD1     		bne	.L227
 3419              	.LBB196:
 3420              	.LBB197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3421              		.loc 2 195 2
 3422              		.syntax unified
 3423              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3424 0012 4FF05003 			mov r3, #80												
 3425 0016 72B6     		cpsid i													
 3426 0018 83F31188 		msr basepri, r3											
 3427 001c BFF36F8F 		isb														
 3428 0020 BFF34F8F 		dsb														
 3429 0024 62B6     		cpsie i													
 3430              	
ARM GAS  /tmp/ccGNfTzm.s 			page 100


 3431              	@ 0 "" 2
 3432              		.thumb
 3433              		.syntax unified
 3434 0026 FB60     		str	r3, [r7, #12]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3435              		.loc 2 205 1
 3436 0028 00BF     		nop
 3437              	.L228:
 3438              	.LBE197:
 3439              	.LBE196:
 3440              		.loc 1 1947 2 discriminator 1
 3441 002a FEE7     		b	.L228
 3442              	.L227:
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3443              		.loc 1 1949 2
 3444 002c FFF7FEFF 		bl	vPortEnterCritical
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 3445              		.loc 1 1951 21
 3446 0030 7B69     		ldr	r3, [r7, #20]
 3447 0032 DA6B     		ldr	r2, [r3, #60]
 3448              		.loc 1 1951 41
 3449 0034 7B69     		ldr	r3, [r7, #20]
 3450 0036 9B6B     		ldr	r3, [r3, #56]
 3451              		.loc 1 1951 12
 3452 0038 D31A     		subs	r3, r2, r3
 3453 003a 3B61     		str	r3, [r7, #16]
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 3454              		.loc 1 1953 2
 3455 003c FFF7FEFF 		bl	vPortExitCritical
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3456              		.loc 1 1955 9
 3457 0040 3B69     		ldr	r3, [r7, #16]
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3458              		.loc 1 1956 1
 3459 0042 1846     		mov	r0, r3
 3460 0044 1837     		adds	r7, r7, #24
 3461              	.LCFI83:
 3462              		.cfi_def_cfa_offset 8
 3463 0046 BD46     		mov	sp, r7
 3464              	.LCFI84:
 3465              		.cfi_def_cfa_register 13
 3466              		@ sp needed
 3467 0048 80BD     		pop	{r7, pc}
 3468              		.cfi_endproc
 3469              	.LFE21:
 3471              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3472              		.align	1
 3473              		.global	uxQueueMessagesWaitingFromISR
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv5-d16
 3479              	uxQueueMessagesWaitingFromISR:
ARM GAS  /tmp/ccGNfTzm.s 			page 101


 3480              	.LFB22:
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3481              		.loc 1 1960 1
 3482              		.cfi_startproc
 3483              		@ args = 0, pretend = 0, frame = 24
 3484              		@ frame_needed = 1, uses_anonymous_args = 0
 3485              		@ link register save eliminated.
 3486 0000 80B4     		push	{r7}
 3487              	.LCFI85:
 3488              		.cfi_def_cfa_offset 4
 3489              		.cfi_offset 7, -4
 3490 0002 87B0     		sub	sp, sp, #28
 3491              	.LCFI86:
 3492              		.cfi_def_cfa_offset 32
 3493 0004 00AF     		add	r7, sp, #0
 3494              	.LCFI87:
 3495              		.cfi_def_cfa_register 7
 3496 0006 7860     		str	r0, [r7, #4]
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3497              		.loc 1 1962 17
 3498 0008 7B68     		ldr	r3, [r7, #4]
 3499 000a 7B61     		str	r3, [r7, #20]
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3500              		.loc 1 1964 2
 3501 000c 7B69     		ldr	r3, [r7, #20]
 3502 000e 002B     		cmp	r3, #0
 3503 0010 0CD1     		bne	.L231
 3504              	.LBB198:
 3505              	.LBB199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3506              		.loc 2 195 2
 3507              		.syntax unified
 3508              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3509 0012 4FF05003 			mov r3, #80												
 3510 0016 72B6     		cpsid i													
 3511 0018 83F31188 		msr basepri, r3											
 3512 001c BFF36F8F 		isb														
 3513 0020 BFF34F8F 		dsb														
 3514 0024 62B6     		cpsie i													
 3515              	
 3516              	@ 0 "" 2
 3517              		.thumb
 3518              		.syntax unified
 3519 0026 FB60     		str	r3, [r7, #12]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3520              		.loc 2 205 1
 3521 0028 00BF     		nop
 3522              	.L232:
 3523              	.LBE199:
 3524              	.LBE198:
 3525              		.loc 1 1964 2 discriminator 1
 3526 002a FEE7     		b	.L232
ARM GAS  /tmp/ccGNfTzm.s 			page 102


 3527              	.L231:
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3528              		.loc 1 1965 11
 3529 002c 7B69     		ldr	r3, [r7, #20]
 3530 002e 9B6B     		ldr	r3, [r3, #56]
 3531 0030 3B61     		str	r3, [r7, #16]
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
 3532              		.loc 1 1967 9
 3533 0032 3B69     		ldr	r3, [r7, #16]
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3534              		.loc 1 1968 1
 3535 0034 1846     		mov	r0, r3
 3536 0036 1C37     		adds	r7, r7, #28
 3537              	.LCFI88:
 3538              		.cfi_def_cfa_offset 4
 3539 0038 BD46     		mov	sp, r7
 3540              	.LCFI89:
 3541              		.cfi_def_cfa_register 13
 3542              		@ sp needed
 3543 003a 5DF8047B 		ldr	r7, [sp], #4
 3544              	.LCFI90:
 3545              		.cfi_restore 7
 3546              		.cfi_def_cfa_offset 0
 3547 003e 7047     		bx	lr
 3548              		.cfi_endproc
 3549              	.LFE22:
 3551              		.section	.text.vQueueDelete,"ax",%progbits
 3552              		.align	1
 3553              		.global	vQueueDelete
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu fpv5-d16
 3559              	vQueueDelete:
 3560              	.LFB23:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3561              		.loc 1 1972 1
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 16
 3564              		@ frame_needed = 1, uses_anonymous_args = 0
 3565 0000 80B5     		push	{r7, lr}
 3566              	.LCFI91:
 3567              		.cfi_def_cfa_offset 8
 3568              		.cfi_offset 7, -8
 3569              		.cfi_offset 14, -4
 3570 0002 84B0     		sub	sp, sp, #16
 3571              	.LCFI92:
 3572              		.cfi_def_cfa_offset 24
 3573 0004 00AF     		add	r7, sp, #0
 3574              	.LCFI93:
 3575              		.cfi_def_cfa_register 7
 3576 0006 7860     		str	r0, [r7, #4]
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
ARM GAS  /tmp/ccGNfTzm.s 			page 103


 3577              		.loc 1 1973 17
 3578 0008 7B68     		ldr	r3, [r7, #4]
 3579 000a FB60     		str	r3, [r7, #12]
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3580              		.loc 1 1975 2
 3581 000c FB68     		ldr	r3, [r7, #12]
 3582 000e 002B     		cmp	r3, #0
 3583 0010 0CD1     		bne	.L235
 3584              	.LBB200:
 3585              	.LBB201:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 3586              		.loc 2 195 2
 3587              		.syntax unified
 3588              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 3589 0012 4FF05003 			mov r3, #80												
 3590 0016 72B6     		cpsid i													
 3591 0018 83F31188 		msr basepri, r3											
 3592 001c BFF36F8F 		isb														
 3593 0020 BFF34F8F 		dsb														
 3594 0024 62B6     		cpsie i													
 3595              	
 3596              	@ 0 "" 2
 3597              		.thumb
 3598              		.syntax unified
 3599 0026 BB60     		str	r3, [r7, #8]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 3600              		.loc 2 205 1
 3601 0028 00BF     		nop
 3602              	.L236:
 3603              	.LBE201:
 3604              	.LBE200:
 3605              		.loc 1 1975 2 discriminator 1
 3606 002a FEE7     		b	.L236
 3607              	.L235:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 3608              		.loc 1 1980 3
 3609 002c F868     		ldr	r0, [r7, #12]
 3610 002e FFF7FEFF 		bl	vQueueUnregisterQueue
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
ARM GAS  /tmp/ccGNfTzm.s 			page 104


 3611              		.loc 1 1994 14
 3612 0032 FB68     		ldr	r3, [r7, #12]
 3613 0034 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 3614              		.loc 1 1994 5
 3615 0038 002B     		cmp	r3, #0
 3616 003a 02D1     		bne	.L238
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
 3617              		.loc 1 1996 4
 3618 003c F868     		ldr	r0, [r7, #12]
 3619 003e FFF7FEFF 		bl	vPortFree
 3620              	.L238:
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3621              		.loc 1 2010 1
 3622 0042 00BF     		nop
 3623 0044 1037     		adds	r7, r7, #16
 3624              	.LCFI94:
 3625              		.cfi_def_cfa_offset 8
 3626 0046 BD46     		mov	sp, r7
 3627              	.LCFI95:
 3628              		.cfi_def_cfa_register 13
 3629              		@ sp needed
 3630 0048 80BD     		pop	{r7, pc}
 3631              		.cfi_endproc
 3632              	.LFE23:
 3634              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
 3635              		.align	1
 3636              		.syntax unified
 3637              		.thumb
 3638              		.thumb_func
 3639              		.fpu fpv5-d16
 3641              	prvGetDisinheritPriorityAfterTimeout:
 3642              	.LFB24:
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccGNfTzm.s 			page 105


2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3643              		.loc 1 2046 2
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 16
 3646              		@ frame_needed = 1, uses_anonymous_args = 0
 3647              		@ link register save eliminated.
 3648 0000 80B4     		push	{r7}
 3649              	.LCFI96:
 3650              		.cfi_def_cfa_offset 4
 3651              		.cfi_offset 7, -4
 3652 0002 85B0     		sub	sp, sp, #20
 3653              	.LCFI97:
 3654              		.cfi_def_cfa_offset 24
 3655 0004 00AF     		add	r7, sp, #0
 3656              	.LCFI98:
 3657              		.cfi_def_cfa_register 7
 3658 0006 7860     		str	r0, [r7, #4]
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 3659              		.loc 1 2055 7
 3660 0008 7B68     		ldr	r3, [r7, #4]
 3661 000a 5B6A     		ldr	r3, [r3, #36]
 3662              		.loc 1 2055 5
 3663 000c 002B     		cmp	r3, #0
 3664 000e 06D0     		beq	.L240
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccGNfTzm.s 			page 106


2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
 3665              		.loc 1 2057 93
 3666 0010 7B68     		ldr	r3, [r7, #4]
 3667 0012 1B6B     		ldr	r3, [r3, #48]
 3668 0014 1B68     		ldr	r3, [r3]
 3669              		.loc 1 2057 36
 3670 0016 C3F10703 		rsb	r3, r3, #7
 3671 001a FB60     		str	r3, [r7, #12]
 3672 001c 01E0     		b	.L241
 3673              	.L240:
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
 3674              		.loc 1 2061 36
 3675 001e 0023     		movs	r3, #0
 3676 0020 FB60     		str	r3, [r7, #12]
 3677              	.L241:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
 3678              		.loc 1 2064 10
 3679 0022 FB68     		ldr	r3, [r7, #12]
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3680              		.loc 1 2065 2
 3681 0024 1846     		mov	r0, r3
 3682 0026 1437     		adds	r7, r7, #20
 3683              	.LCFI99:
 3684              		.cfi_def_cfa_offset 4
 3685 0028 BD46     		mov	sp, r7
 3686              	.LCFI100:
 3687              		.cfi_def_cfa_register 13
 3688              		@ sp needed
 3689 002a 5DF8047B 		ldr	r7, [sp], #4
 3690              	.LCFI101:
 3691              		.cfi_restore 7
 3692              		.cfi_def_cfa_offset 0
 3693 002e 7047     		bx	lr
 3694              		.cfi_endproc
 3695              	.LFE24:
 3697              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 3698              		.align	1
 3699              		.syntax unified
 3700              		.thumb
 3701              		.thumb_func
 3702              		.fpu fpv5-d16
 3704              	prvCopyDataToQueue:
 3705              	.LFB25:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3706              		.loc 1 2071 1
 3707              		.cfi_startproc
 3708              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccGNfTzm.s 			page 107


 3709              		@ frame_needed = 1, uses_anonymous_args = 0
 3710 0000 80B5     		push	{r7, lr}
 3711              	.LCFI102:
 3712              		.cfi_def_cfa_offset 8
 3713              		.cfi_offset 7, -8
 3714              		.cfi_offset 14, -4
 3715 0002 86B0     		sub	sp, sp, #24
 3716              	.LCFI103:
 3717              		.cfi_def_cfa_offset 32
 3718 0004 00AF     		add	r7, sp, #0
 3719              	.LCFI104:
 3720              		.cfi_def_cfa_register 7
 3721 0006 F860     		str	r0, [r7, #12]
 3722 0008 B960     		str	r1, [r7, #8]
 3723 000a 7A60     		str	r2, [r7, #4]
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 3724              		.loc 1 2072 12
 3725 000c 0023     		movs	r3, #0
 3726 000e 7B61     		str	r3, [r7, #20]
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 3727              		.loc 1 2077 20
 3728 0010 FB68     		ldr	r3, [r7, #12]
 3729 0012 9B6B     		ldr	r3, [r3, #56]
 3730 0014 3B61     		str	r3, [r7, #16]
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 3731              		.loc 1 2079 13
 3732 0016 FB68     		ldr	r3, [r7, #12]
 3733 0018 1B6C     		ldr	r3, [r3, #64]
 3734              		.loc 1 2079 4
 3735 001a 002B     		cmp	r3, #0
 3736 001c 0DD1     		bne	.L244
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 3737              		.loc 1 2083 15
 3738 001e FB68     		ldr	r3, [r7, #12]
 3739 0020 1B68     		ldr	r3, [r3]
 3740              		.loc 1 2083 6
 3741 0022 002B     		cmp	r3, #0
 3742 0024 4DD1     		bne	.L245
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 3743              		.loc 1 2086 15
 3744 0026 FB68     		ldr	r3, [r7, #12]
 3745 0028 9B68     		ldr	r3, [r3, #8]
 3746 002a 1846     		mov	r0, r3
 3747 002c FFF7FEFF 		bl	xTaskPriorityDisinherit
 3748 0030 7861     		str	r0, [r7, #20]
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 3749              		.loc 1 2087 40
ARM GAS  /tmp/ccGNfTzm.s 			page 108


 3750 0032 FB68     		ldr	r3, [r7, #12]
 3751 0034 0022     		movs	r2, #0
 3752 0036 9A60     		str	r2, [r3, #8]
 3753 0038 43E0     		b	.L245
 3754              	.L244:
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 3755              		.loc 1 2096 9
 3756 003a 7B68     		ldr	r3, [r7, #4]
 3757 003c 002B     		cmp	r3, #0
 3758 003e 19D1     		bne	.L246
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 3759              		.loc 1 2098 38
 3760 0040 FB68     		ldr	r3, [r7, #12]
 3761 0042 5868     		ldr	r0, [r3, #4]
 3762              		.loc 1 2098 84
 3763 0044 FB68     		ldr	r3, [r7, #12]
 3764 0046 1B6C     		ldr	r3, [r3, #64]
 3765              		.loc 1 2098 12
 3766 0048 1A46     		mov	r2, r3
 3767 004a B968     		ldr	r1, [r7, #8]
 3768 004c FFF7FEFF 		bl	memcpy
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 3769              		.loc 1 2099 22
 3770 0050 FB68     		ldr	r3, [r7, #12]
 3771 0052 5A68     		ldr	r2, [r3, #4]
 3772              		.loc 1 2099 32
 3773 0054 FB68     		ldr	r3, [r7, #12]
 3774 0056 1B6C     		ldr	r3, [r3, #64]
 3775              		.loc 1 2099 22
 3776 0058 1A44     		add	r2, r2, r3
 3777 005a FB68     		ldr	r3, [r7, #12]
 3778 005c 5A60     		str	r2, [r3, #4]
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 3779              		.loc 1 2100 14
 3780 005e FB68     		ldr	r3, [r7, #12]
 3781 0060 5A68     		ldr	r2, [r3, #4]
 3782              		.loc 1 2100 46
 3783 0062 FB68     		ldr	r3, [r7, #12]
 3784 0064 9B68     		ldr	r3, [r3, #8]
 3785              		.loc 1 2100 5
 3786 0066 9A42     		cmp	r2, r3
 3787 0068 2BD3     		bcc	.L245
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 3788              		.loc 1 2102 32
 3789 006a FB68     		ldr	r3, [r7, #12]
 3790 006c 1A68     		ldr	r2, [r3]
 3791              		.loc 1 2102 23
ARM GAS  /tmp/ccGNfTzm.s 			page 109


 3792 006e FB68     		ldr	r3, [r7, #12]
 3793 0070 5A60     		str	r2, [r3, #4]
 3794 0072 26E0     		b	.L245
 3795              	.L246:
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
 3796              		.loc 1 2111 48
 3797 0074 FB68     		ldr	r3, [r7, #12]
 3798 0076 D868     		ldr	r0, [r3, #12]
 3799              		.loc 1 2111 94
 3800 0078 FB68     		ldr	r3, [r7, #12]
 3801 007a 1B6C     		ldr	r3, [r3, #64]
 3802              		.loc 1 2111 12
 3803 007c 1A46     		mov	r2, r3
 3804 007e B968     		ldr	r1, [r7, #8]
 3805 0080 FFF7FEFF 		bl	memcpy
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 3806              		.loc 1 2112 32
 3807 0084 FB68     		ldr	r3, [r7, #12]
 3808 0086 DA68     		ldr	r2, [r3, #12]
 3809              		.loc 1 2112 42
 3810 0088 FB68     		ldr	r3, [r7, #12]
 3811 008a 1B6C     		ldr	r3, [r3, #64]
 3812              		.loc 1 2112 32
 3813 008c 5B42     		rsbs	r3, r3, #0
 3814 008e 1A44     		add	r2, r2, r3
 3815 0090 FB68     		ldr	r3, [r7, #12]
 3816 0092 DA60     		str	r2, [r3, #12]
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 3817              		.loc 1 2113 24
 3818 0094 FB68     		ldr	r3, [r7, #12]
 3819 0096 DA68     		ldr	r2, [r3, #12]
 3820              		.loc 1 2113 45
 3821 0098 FB68     		ldr	r3, [r7, #12]
 3822 009a 1B68     		ldr	r3, [r3]
 3823              		.loc 1 2113 5
 3824 009c 9A42     		cmp	r2, r3
 3825 009e 07D2     		bcs	.L247
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 3826              		.loc 1 2115 54
 3827 00a0 FB68     		ldr	r3, [r7, #12]
 3828 00a2 9A68     		ldr	r2, [r3, #8]
 3829              		.loc 1 2115 71
 3830 00a4 FB68     		ldr	r3, [r7, #12]
 3831 00a6 1B6C     		ldr	r3, [r3, #64]
 3832              		.loc 1 2115 62
 3833 00a8 5B42     		rsbs	r3, r3, #0
 3834 00aa 1A44     		add	r2, r2, r3
 3835              		.loc 1 2115 33
ARM GAS  /tmp/ccGNfTzm.s 			page 110


 3836 00ac FB68     		ldr	r3, [r7, #12]
 3837 00ae DA60     		str	r2, [r3, #12]
 3838              	.L247:
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
 3839              		.loc 1 2122 5
 3840 00b0 7B68     		ldr	r3, [r7, #4]
 3841 00b2 022B     		cmp	r3, #2
 3842 00b4 05D1     		bne	.L245
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 3843              		.loc 1 2124 6
 3844 00b6 3B69     		ldr	r3, [r7, #16]
 3845 00b8 002B     		cmp	r3, #0
 3846 00ba 02D0     		beq	.L245
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
 3847              		.loc 1 2130 5
 3848 00bc 3B69     		ldr	r3, [r7, #16]
 3849 00be 013B     		subs	r3, r3, #1
 3850 00c0 3B61     		str	r3, [r7, #16]
 3851              	.L245:
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 3852              		.loc 1 2143 49
 3853 00c2 3B69     		ldr	r3, [r7, #16]
 3854 00c4 5A1C     		adds	r2, r3, #1
 3855              		.loc 1 2143 29
 3856 00c6 FB68     		ldr	r3, [r7, #12]
 3857 00c8 9A63     		str	r2, [r3, #56]
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 3858              		.loc 1 2145 9
 3859 00ca 7B69     		ldr	r3, [r7, #20]
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3860              		.loc 1 2146 1
 3861 00cc 1846     		mov	r0, r3
ARM GAS  /tmp/ccGNfTzm.s 			page 111


 3862 00ce 1837     		adds	r7, r7, #24
 3863              	.LCFI105:
 3864              		.cfi_def_cfa_offset 8
 3865 00d0 BD46     		mov	sp, r7
 3866              	.LCFI106:
 3867              		.cfi_def_cfa_register 13
 3868              		@ sp needed
 3869 00d2 80BD     		pop	{r7, pc}
 3870              		.cfi_endproc
 3871              	.LFE25:
 3873              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 3874              		.align	1
 3875              		.syntax unified
 3876              		.thumb
 3877              		.thumb_func
 3878              		.fpu fpv5-d16
 3880              	prvCopyDataFromQueue:
 3881              	.LFB26:
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3882              		.loc 1 2150 1
 3883              		.cfi_startproc
 3884              		@ args = 0, pretend = 0, frame = 8
 3885              		@ frame_needed = 1, uses_anonymous_args = 0
 3886 0000 80B5     		push	{r7, lr}
 3887              	.LCFI107:
 3888              		.cfi_def_cfa_offset 8
 3889              		.cfi_offset 7, -8
 3890              		.cfi_offset 14, -4
 3891 0002 82B0     		sub	sp, sp, #8
 3892              	.LCFI108:
 3893              		.cfi_def_cfa_offset 16
 3894 0004 00AF     		add	r7, sp, #0
 3895              	.LCFI109:
 3896              		.cfi_def_cfa_register 7
 3897 0006 7860     		str	r0, [r7, #4]
 3898 0008 3960     		str	r1, [r7]
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 3899              		.loc 1 2151 13
 3900 000a 7B68     		ldr	r3, [r7, #4]
 3901 000c 1B6C     		ldr	r3, [r3, #64]
 3902              		.loc 1 2151 4
 3903 000e 002B     		cmp	r3, #0
 3904 0010 18D0     		beq	.L252
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
 3905              		.loc 1 2153 32
 3906 0012 7B68     		ldr	r3, [r7, #4]
 3907 0014 DA68     		ldr	r2, [r3, #12]
 3908              		.loc 1 2153 42
 3909 0016 7B68     		ldr	r3, [r7, #4]
 3910 0018 1B6C     		ldr	r3, [r3, #64]
 3911              		.loc 1 2153 32
 3912 001a 1A44     		add	r2, r2, r3
 3913 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccGNfTzm.s 			page 112


 3914 001e DA60     		str	r2, [r3, #12]
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 3915              		.loc 1 2154 24
 3916 0020 7B68     		ldr	r3, [r7, #4]
 3917 0022 DA68     		ldr	r2, [r3, #12]
 3918              		.loc 1 2154 56
 3919 0024 7B68     		ldr	r3, [r7, #4]
 3920 0026 9B68     		ldr	r3, [r3, #8]
 3921              		.loc 1 2154 5
 3922 0028 9A42     		cmp	r2, r3
 3923 002a 03D3     		bcc	.L251
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 3924              		.loc 1 2156 42
 3925 002c 7B68     		ldr	r3, [r7, #4]
 3926 002e 1A68     		ldr	r2, [r3]
 3927              		.loc 1 2156 33
 3928 0030 7B68     		ldr	r3, [r7, #4]
 3929 0032 DA60     		str	r2, [r3, #12]
 3930              	.L251:
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
 3931              		.loc 1 2162 69
 3932 0034 7B68     		ldr	r3, [r7, #4]
 3933 0036 D968     		ldr	r1, [r3, #12]
 3934              		.loc 1 2162 100
 3935 0038 7B68     		ldr	r3, [r7, #4]
 3936 003a 1B6C     		ldr	r3, [r3, #64]
 3937              		.loc 1 2162 12
 3938 003c 1A46     		mov	r2, r3
 3939 003e 3868     		ldr	r0, [r7]
 3940 0040 FFF7FEFF 		bl	memcpy
 3941              	.L252:
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 3942              		.loc 1 2164 1
 3943 0044 00BF     		nop
 3944 0046 0837     		adds	r7, r7, #8
 3945              	.LCFI110:
 3946              		.cfi_def_cfa_offset 8
 3947 0048 BD46     		mov	sp, r7
 3948              	.LCFI111:
 3949              		.cfi_def_cfa_register 13
 3950              		@ sp needed
 3951 004a 80BD     		pop	{r7, pc}
 3952              		.cfi_endproc
 3953              	.LFE26:
 3955              		.section	.text.prvUnlockQueue,"ax",%progbits
 3956              		.align	1
 3957              		.syntax unified
 3958              		.thumb
 3959              		.thumb_func
 3960              		.fpu fpv5-d16
ARM GAS  /tmp/ccGNfTzm.s 			page 113


 3962              	prvUnlockQueue:
 3963              	.LFB27:
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3964              		.loc 1 2168 1
 3965              		.cfi_startproc
 3966              		@ args = 0, pretend = 0, frame = 16
 3967              		@ frame_needed = 1, uses_anonymous_args = 0
 3968 0000 80B5     		push	{r7, lr}
 3969              	.LCFI112:
 3970              		.cfi_def_cfa_offset 8
 3971              		.cfi_offset 7, -8
 3972              		.cfi_offset 14, -4
 3973 0002 84B0     		sub	sp, sp, #16
 3974              	.LCFI113:
 3975              		.cfi_def_cfa_offset 24
 3976 0004 00AF     		add	r7, sp, #0
 3977              	.LCFI114:
 3978              		.cfi_def_cfa_register 7
 3979 0006 7860     		str	r0, [r7, #4]
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 3980              		.loc 1 2175 2
 3981 0008 FFF7FEFF 		bl	vPortEnterCritical
 3982              	.LBB202:
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
 3983              		.loc 1 2177 10
 3984 000c 7B68     		ldr	r3, [r7, #4]
 3985 000e 93F84530 		ldrb	r3, [r3, #69]
 3986 0012 FB73     		strb	r3, [r7, #15]
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
 3987              		.loc 1 2180 8
 3988 0014 11E0     		b	.L254
 3989              	.L258:
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
ARM GAS  /tmp/ccGNfTzm.s 			page 114


2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 3990              		.loc 1 2228 9
 3991 0016 7B68     		ldr	r3, [r7, #4]
 3992 0018 5B6A     		ldr	r3, [r3, #36]
 3993              		.loc 1 2228 7
 3994 001a 002B     		cmp	r3, #0
 3995 001c 12D0     		beq	.L264
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 3996              		.loc 1 2230 36
 3997 001e 7B68     		ldr	r3, [r7, #4]
 3998 0020 2433     		adds	r3, r3, #36
 3999              		.loc 1 2230 10
 4000 0022 1846     		mov	r0, r3
 4001 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 4002 0028 0346     		mov	r3, r0
 4003              		.loc 1 2230 8
 4004 002a 002B     		cmp	r3, #0
 4005 002c 01D0     		beq	.L256
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
ARM GAS  /tmp/ccGNfTzm.s 			page 115


 4006              		.loc 1 2234 7
 4007 002e FFF7FEFF 		bl	vTaskMissedYield
 4008              	.L256:
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
 4009              		.loc 1 2248 4
 4010 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4011 0034 013B     		subs	r3, r3, #1
 4012 0036 DBB2     		uxtb	r3, r3
 4013 0038 FB73     		strb	r3, [r7, #15]
 4014              	.L254:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4015              		.loc 1 2180 8
 4016 003a 97F90F30 		ldrsb	r3, [r7, #15]
 4017 003e 002B     		cmp	r3, #0
 4018 0040 E9DC     		bgt	.L258
 4019 0042 00E0     		b	.L257
 4020              	.L264:
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 4021              		.loc 1 2243 6
 4022 0044 00BF     		nop
 4023              	.L257:
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 4024              		.loc 1 2251 20
 4025 0046 7B68     		ldr	r3, [r7, #4]
 4026 0048 FF22     		movs	r2, #255
 4027 004a 83F84520 		strb	r2, [r3, #69]
 4028              	.LBE202:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 4029              		.loc 1 2253 2
 4030 004e FFF7FEFF 		bl	vPortExitCritical
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 4031              		.loc 1 2256 2
 4032 0052 FFF7FEFF 		bl	vPortEnterCritical
 4033              	.LBB203:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
 4034              		.loc 1 2258 10
 4035 0056 7B68     		ldr	r3, [r7, #4]
 4036 0058 93F84430 		ldrb	r3, [r3, #68]
ARM GAS  /tmp/ccGNfTzm.s 			page 116


 4037 005c BB73     		strb	r3, [r7, #14]
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
 4038              		.loc 1 2260 8
 4039 005e 11E0     		b	.L259
 4040              	.L263:
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 4041              		.loc 1 2262 8
 4042 0060 7B68     		ldr	r3, [r7, #4]
 4043 0062 1B69     		ldr	r3, [r3, #16]
 4044              		.loc 1 2262 6
 4045 0064 002B     		cmp	r3, #0
 4046 0066 12D0     		beq	.L265
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 4047              		.loc 1 2264 35
 4048 0068 7B68     		ldr	r3, [r7, #4]
 4049 006a 1033     		adds	r3, r3, #16
 4050              		.loc 1 2264 9
 4051 006c 1846     		mov	r0, r3
 4052 006e FFF7FEFF 		bl	xTaskRemoveFromEventList
 4053 0072 0346     		mov	r3, r0
 4054              		.loc 1 2264 7
 4055 0074 002B     		cmp	r3, #0
 4056 0076 01D0     		beq	.L261
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
 4057              		.loc 1 2266 6
 4058 0078 FFF7FEFF 		bl	vTaskMissedYield
 4059              	.L261:
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
 4060              		.loc 1 2273 5
 4061 007c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4062 007e 013B     		subs	r3, r3, #1
 4063 0080 DBB2     		uxtb	r3, r3
 4064 0082 BB73     		strb	r3, [r7, #14]
 4065              	.L259:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4066              		.loc 1 2260 8
 4067 0084 97F90E30 		ldrsb	r3, [r7, #14]
 4068 0088 002B     		cmp	r3, #0
 4069 008a E9DC     		bgt	.L263
 4070 008c 00E0     		b	.L262
 4071              	.L265:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4072              		.loc 1 2277 5
 4073 008e 00BF     		nop
ARM GAS  /tmp/ccGNfTzm.s 			page 117


 4074              	.L262:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 4075              		.loc 1 2281 20
 4076 0090 7B68     		ldr	r3, [r7, #4]
 4077 0092 FF22     		movs	r2, #255
 4078 0094 83F84420 		strb	r2, [r3, #68]
 4079              	.LBE203:
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 4080              		.loc 1 2283 2
 4081 0098 FFF7FEFF 		bl	vPortExitCritical
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 4082              		.loc 1 2284 1
 4083 009c 00BF     		nop
 4084 009e 1037     		adds	r7, r7, #16
 4085              	.LCFI115:
 4086              		.cfi_def_cfa_offset 8
 4087 00a0 BD46     		mov	sp, r7
 4088              	.LCFI116:
 4089              		.cfi_def_cfa_register 13
 4090              		@ sp needed
 4091 00a2 80BD     		pop	{r7, pc}
 4092              		.cfi_endproc
 4093              	.LFE27:
 4095              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 4096              		.align	1
 4097              		.syntax unified
 4098              		.thumb
 4099              		.thumb_func
 4100              		.fpu fpv5-d16
 4102              	prvIsQueueEmpty:
 4103              	.LFB28:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 4104              		.loc 1 2288 1
 4105              		.cfi_startproc
 4106              		@ args = 0, pretend = 0, frame = 16
 4107              		@ frame_needed = 1, uses_anonymous_args = 0
 4108 0000 80B5     		push	{r7, lr}
 4109              	.LCFI117:
 4110              		.cfi_def_cfa_offset 8
 4111              		.cfi_offset 7, -8
 4112              		.cfi_offset 14, -4
 4113 0002 84B0     		sub	sp, sp, #16
 4114              	.LCFI118:
 4115              		.cfi_def_cfa_offset 24
 4116 0004 00AF     		add	r7, sp, #0
 4117              	.LCFI119:
 4118              		.cfi_def_cfa_register 7
 4119 0006 7860     		str	r0, [r7, #4]
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccGNfTzm.s 			page 118


2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 4120              		.loc 1 2291 2
 4121 0008 FFF7FEFF 		bl	vPortEnterCritical
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 4122              		.loc 1 2293 14
 4123 000c 7B68     		ldr	r3, [r7, #4]
 4124 000e 9B6B     		ldr	r3, [r3, #56]
 4125              		.loc 1 2293 5
 4126 0010 002B     		cmp	r3, #0
 4127 0012 02D1     		bne	.L267
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 4128              		.loc 1 2295 12
 4129 0014 0123     		movs	r3, #1
 4130 0016 FB60     		str	r3, [r7, #12]
 4131 0018 01E0     		b	.L268
 4132              	.L267:
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
 4133              		.loc 1 2299 12
 4134 001a 0023     		movs	r3, #0
 4135 001c FB60     		str	r3, [r7, #12]
 4136              	.L268:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 4137              		.loc 1 2302 2
 4138 001e FFF7FEFF 		bl	vPortExitCritical
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 4139              		.loc 1 2304 9
 4140 0022 FB68     		ldr	r3, [r7, #12]
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 4141              		.loc 1 2305 1
 4142 0024 1846     		mov	r0, r3
 4143 0026 1037     		adds	r7, r7, #16
 4144              	.LCFI120:
 4145              		.cfi_def_cfa_offset 8
 4146 0028 BD46     		mov	sp, r7
 4147              	.LCFI121:
 4148              		.cfi_def_cfa_register 13
 4149              		@ sp needed
 4150 002a 80BD     		pop	{r7, pc}
 4151              		.cfi_endproc
 4152              	.LFE28:
 4154              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 4155              		.align	1
 4156              		.global	xQueueIsQueueEmptyFromISR
 4157              		.syntax unified
 4158              		.thumb
 4159              		.thumb_func
 4160              		.fpu fpv5-d16
 4162              	xQueueIsQueueEmptyFromISR:
 4163              	.LFB29:
ARM GAS  /tmp/ccGNfTzm.s 			page 119


2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 4164              		.loc 1 2309 1
 4165              		.cfi_startproc
 4166              		@ args = 0, pretend = 0, frame = 24
 4167              		@ frame_needed = 1, uses_anonymous_args = 0
 4168              		@ link register save eliminated.
 4169 0000 80B4     		push	{r7}
 4170              	.LCFI122:
 4171              		.cfi_def_cfa_offset 4
 4172              		.cfi_offset 7, -4
 4173 0002 87B0     		sub	sp, sp, #28
 4174              	.LCFI123:
 4175              		.cfi_def_cfa_offset 32
 4176 0004 00AF     		add	r7, sp, #0
 4177              	.LCFI124:
 4178              		.cfi_def_cfa_register 7
 4179 0006 7860     		str	r0, [r7, #4]
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4180              		.loc 1 2311 17
 4181 0008 7B68     		ldr	r3, [r7, #4]
 4182 000a 3B61     		str	r3, [r7, #16]
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 4183              		.loc 1 2313 2
 4184 000c 3B69     		ldr	r3, [r7, #16]
 4185 000e 002B     		cmp	r3, #0
 4186 0010 0CD1     		bne	.L271
 4187              	.LBB204:
 4188              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 4189              		.loc 2 195 2
 4190              		.syntax unified
 4191              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 4192 0012 4FF05003 			mov r3, #80												
 4193 0016 72B6     		cpsid i													
 4194 0018 83F31188 		msr basepri, r3											
 4195 001c BFF36F8F 		isb														
 4196 0020 BFF34F8F 		dsb														
 4197 0024 62B6     		cpsie i													
 4198              	
 4199              	@ 0 "" 2
 4200              		.thumb
 4201              		.syntax unified
 4202 0026 FB60     		str	r3, [r7, #12]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4203              		.loc 2 205 1
 4204 0028 00BF     		nop
 4205              	.L272:
 4206              	.LBE205:
 4207              	.LBE204:
 4208              		.loc 1 2313 2 discriminator 1
 4209 002a FEE7     		b	.L272
 4210              	.L271:
ARM GAS  /tmp/ccGNfTzm.s 			page 120


2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4211              		.loc 1 2314 13
 4212 002c 3B69     		ldr	r3, [r7, #16]
 4213 002e 9B6B     		ldr	r3, [r3, #56]
 4214              		.loc 1 2314 4
 4215 0030 002B     		cmp	r3, #0
 4216 0032 02D1     		bne	.L273
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 4217              		.loc 1 2316 11
 4218 0034 0123     		movs	r3, #1
 4219 0036 7B61     		str	r3, [r7, #20]
 4220 0038 01E0     		b	.L274
 4221              	.L273:
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 4222              		.loc 1 2320 11
 4223 003a 0023     		movs	r3, #0
 4224 003c 7B61     		str	r3, [r7, #20]
 4225              	.L274:
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 4226              		.loc 1 2323 9
 4227 003e 7B69     		ldr	r3, [r7, #20]
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4228              		.loc 1 2324 1
 4229 0040 1846     		mov	r0, r3
 4230 0042 1C37     		adds	r7, r7, #28
 4231              	.LCFI125:
 4232              		.cfi_def_cfa_offset 4
 4233 0044 BD46     		mov	sp, r7
 4234              	.LCFI126:
 4235              		.cfi_def_cfa_register 13
 4236              		@ sp needed
 4237 0046 5DF8047B 		ldr	r7, [sp], #4
 4238              	.LCFI127:
 4239              		.cfi_restore 7
 4240              		.cfi_def_cfa_offset 0
 4241 004a 7047     		bx	lr
 4242              		.cfi_endproc
 4243              	.LFE29:
 4245              		.section	.text.prvIsQueueFull,"ax",%progbits
 4246              		.align	1
 4247              		.syntax unified
 4248              		.thumb
 4249              		.thumb_func
 4250              		.fpu fpv5-d16
 4252              	prvIsQueueFull:
 4253              	.LFB30:
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 4254              		.loc 1 2328 1
ARM GAS  /tmp/ccGNfTzm.s 			page 121


 4255              		.cfi_startproc
 4256              		@ args = 0, pretend = 0, frame = 16
 4257              		@ frame_needed = 1, uses_anonymous_args = 0
 4258 0000 80B5     		push	{r7, lr}
 4259              	.LCFI128:
 4260              		.cfi_def_cfa_offset 8
 4261              		.cfi_offset 7, -8
 4262              		.cfi_offset 14, -4
 4263 0002 84B0     		sub	sp, sp, #16
 4264              	.LCFI129:
 4265              		.cfi_def_cfa_offset 24
 4266 0004 00AF     		add	r7, sp, #0
 4267              	.LCFI130:
 4268              		.cfi_def_cfa_register 7
 4269 0006 7860     		str	r0, [r7, #4]
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 4270              		.loc 1 2331 2
 4271 0008 FFF7FEFF 		bl	vPortEnterCritical
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4272              		.loc 1 2333 14
 4273 000c 7B68     		ldr	r3, [r7, #4]
 4274 000e 9A6B     		ldr	r2, [r3, #56]
 4275              		.loc 1 2333 44
 4276 0010 7B68     		ldr	r3, [r7, #4]
 4277 0012 DB6B     		ldr	r3, [r3, #60]
 4278              		.loc 1 2333 5
 4279 0014 9A42     		cmp	r2, r3
 4280 0016 02D1     		bne	.L277
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
 4281              		.loc 1 2335 12
 4282 0018 0123     		movs	r3, #1
 4283 001a FB60     		str	r3, [r7, #12]
 4284 001c 01E0     		b	.L278
 4285              	.L277:
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
 4286              		.loc 1 2339 12
 4287 001e 0023     		movs	r3, #0
 4288 0020 FB60     		str	r3, [r7, #12]
 4289              	.L278:
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 4290              		.loc 1 2342 2
 4291 0022 FFF7FEFF 		bl	vPortExitCritical
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 4292              		.loc 1 2344 9
 4293 0026 FB68     		ldr	r3, [r7, #12]
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 4294              		.loc 1 2345 1
ARM GAS  /tmp/ccGNfTzm.s 			page 122


 4295 0028 1846     		mov	r0, r3
 4296 002a 1037     		adds	r7, r7, #16
 4297              	.LCFI131:
 4298              		.cfi_def_cfa_offset 8
 4299 002c BD46     		mov	sp, r7
 4300              	.LCFI132:
 4301              		.cfi_def_cfa_register 13
 4302              		@ sp needed
 4303 002e 80BD     		pop	{r7, pc}
 4304              		.cfi_endproc
 4305              	.LFE30:
 4307              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 4308              		.align	1
 4309              		.global	xQueueIsQueueFullFromISR
 4310              		.syntax unified
 4311              		.thumb
 4312              		.thumb_func
 4313              		.fpu fpv5-d16
 4315              	xQueueIsQueueFullFromISR:
 4316              	.LFB31:
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 4317              		.loc 1 2349 1
 4318              		.cfi_startproc
 4319              		@ args = 0, pretend = 0, frame = 24
 4320              		@ frame_needed = 1, uses_anonymous_args = 0
 4321              		@ link register save eliminated.
 4322 0000 80B4     		push	{r7}
 4323              	.LCFI133:
 4324              		.cfi_def_cfa_offset 4
 4325              		.cfi_offset 7, -4
 4326 0002 87B0     		sub	sp, sp, #28
 4327              	.LCFI134:
 4328              		.cfi_def_cfa_offset 32
 4329 0004 00AF     		add	r7, sp, #0
 4330              	.LCFI135:
 4331              		.cfi_def_cfa_register 7
 4332 0006 7860     		str	r0, [r7, #4]
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4333              		.loc 1 2351 17
 4334 0008 7B68     		ldr	r3, [r7, #4]
 4335 000a 3B61     		str	r3, [r7, #16]
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 4336              		.loc 1 2353 2
 4337 000c 3B69     		ldr	r3, [r7, #16]
 4338 000e 002B     		cmp	r3, #0
 4339 0010 0CD1     		bne	.L281
 4340              	.LBB206:
 4341              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 4342              		.loc 2 195 2
 4343              		.syntax unified
 4344              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  /tmp/ccGNfTzm.s 			page 123


 4345 0012 4FF05003 			mov r3, #80												
 4346 0016 72B6     		cpsid i													
 4347 0018 83F31188 		msr basepri, r3											
 4348 001c BFF36F8F 		isb														
 4349 0020 BFF34F8F 		dsb														
 4350 0024 62B6     		cpsie i													
 4351              	
 4352              	@ 0 "" 2
 4353              		.thumb
 4354              		.syntax unified
 4355 0026 FB60     		str	r3, [r7, #12]
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 4356              		.loc 2 205 1
 4357 0028 00BF     		nop
 4358              	.L282:
 4359              	.LBE207:
 4360              	.LBE206:
 4361              		.loc 1 2353 2 discriminator 1
 4362 002a FEE7     		b	.L282
 4363              	.L281:
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4364              		.loc 1 2354 13
 4365 002c 3B69     		ldr	r3, [r7, #16]
 4366 002e 9A6B     		ldr	r2, [r3, #56]
 4367              		.loc 1 2354 43
 4368 0030 3B69     		ldr	r3, [r7, #16]
 4369 0032 DB6B     		ldr	r3, [r3, #60]
 4370              		.loc 1 2354 4
 4371 0034 9A42     		cmp	r2, r3
 4372 0036 02D1     		bne	.L283
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 4373              		.loc 1 2356 11
 4374 0038 0123     		movs	r3, #1
 4375 003a 7B61     		str	r3, [r7, #20]
 4376 003c 01E0     		b	.L284
 4377              	.L283:
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 4378              		.loc 1 2360 11
 4379 003e 0023     		movs	r3, #0
 4380 0040 7B61     		str	r3, [r7, #20]
 4381              	.L284:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
 4382              		.loc 1 2363 9
 4383 0042 7B69     		ldr	r3, [r7, #20]
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4384              		.loc 1 2364 1
 4385 0044 1846     		mov	r0, r3
 4386 0046 1C37     		adds	r7, r7, #28
 4387              	.LCFI136:
 4388              		.cfi_def_cfa_offset 4
 4389 0048 BD46     		mov	sp, r7
ARM GAS  /tmp/ccGNfTzm.s 			page 124


 4390              	.LCFI137:
 4391              		.cfi_def_cfa_register 13
 4392              		@ sp needed
 4393 004a 5DF8047B 		ldr	r7, [sp], #4
 4394              	.LCFI138:
 4395              		.cfi_restore 7
 4396              		.cfi_def_cfa_offset 0
 4397 004e 7047     		bx	lr
 4398              		.cfi_endproc
 4399              	.LFE31:
 4401              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 4402              		.align	1
 4403              		.global	vQueueAddToRegistry
 4404              		.syntax unified
 4405              		.thumb
 4406              		.thumb_func
 4407              		.fpu fpv5-d16
 4409              	vQueueAddToRegistry:
 4410              	.LFB32:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
ARM GAS  /tmp/ccGNfTzm.s 			page 125


2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
ARM GAS  /tmp/ccGNfTzm.s 			page 126


2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  /tmp/ccGNfTzm.s 			page 127


2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccGNfTzm.s 			page 128


2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccGNfTzm.s 			page 129


2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4411              		.loc 1 2645 2
 4412              		.cfi_startproc
 4413              		@ args = 0, pretend = 0, frame = 16
 4414              		@ frame_needed = 1, uses_anonymous_args = 0
 4415              		@ link register save eliminated.
 4416 0000 80B4     		push	{r7}
 4417              	.LCFI139:
 4418              		.cfi_def_cfa_offset 4
 4419              		.cfi_offset 7, -4
 4420 0002 85B0     		sub	sp, sp, #20
 4421              	.LCFI140:
 4422              		.cfi_def_cfa_offset 24
 4423 0004 00AF     		add	r7, sp, #0
 4424              	.LCFI141:
 4425              		.cfi_def_cfa_register 7
 4426 0006 7860     		str	r0, [r7, #4]
 4427 0008 3960     		str	r1, [r7]
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4428              		.loc 1 2650 11
 4429 000a 0023     		movs	r3, #0
 4430 000c FB60     		str	r3, [r7, #12]
 4431              		.loc 1 2650 3
 4432 000e 14E0     		b	.L287
 4433              	.L290:
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 4434              		.loc 1 2652 28
 4435 0010 0F4A     		ldr	r2, .L291
 4436 0012 FB68     		ldr	r3, [r7, #12]
 4437 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]
 4438              		.loc 1 2652 6
 4439 0018 002B     		cmp	r3, #0
 4440 001a 0BD1     		bne	.L288
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 4441              		.loc 1 2655 38
 4442 001c 0C49     		ldr	r1, .L291
ARM GAS  /tmp/ccGNfTzm.s 			page 130


 4443 001e FB68     		ldr	r3, [r7, #12]
 4444 0020 3A68     		ldr	r2, [r7]
 4445 0022 41F83320 		str	r2, [r1, r3, lsl #3]
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4446              		.loc 1 2656 34
 4447 0026 0A4A     		ldr	r2, .L291
 4448 0028 FB68     		ldr	r3, [r7, #12]
 4449 002a DB00     		lsls	r3, r3, #3
 4450 002c 1344     		add	r3, r3, r2
 4451 002e 7A68     		ldr	r2, [r7, #4]
 4452 0030 5A60     		str	r2, [r3, #4]
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4453              		.loc 1 2659 5
 4454 0032 06E0     		b	.L289
 4455              	.L288:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4456              		.loc 1 2650 83 discriminator 2
 4457 0034 FB68     		ldr	r3, [r7, #12]
 4458 0036 0133     		adds	r3, r3, #1
 4459 0038 FB60     		str	r3, [r7, #12]
 4460              	.L287:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4461              		.loc 1 2650 3 discriminator 1
 4462 003a FB68     		ldr	r3, [r7, #12]
 4463 003c 072B     		cmp	r3, #7
 4464 003e E7D9     		bls	.L290
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4465              		.loc 1 2666 2
 4466 0040 00BF     		nop
 4467              	.L289:
 4468 0042 00BF     		nop
 4469 0044 1437     		adds	r7, r7, #20
 4470              	.LCFI142:
 4471              		.cfi_def_cfa_offset 4
 4472 0046 BD46     		mov	sp, r7
 4473              	.LCFI143:
 4474              		.cfi_def_cfa_register 13
 4475              		@ sp needed
 4476 0048 5DF8047B 		ldr	r7, [sp], #4
 4477              	.LCFI144:
 4478              		.cfi_restore 7
 4479              		.cfi_def_cfa_offset 0
 4480 004c 7047     		bx	lr
 4481              	.L292:
 4482 004e 00BF     		.align	2
 4483              	.L291:
 4484 0050 00000000 		.word	xQueueRegistry
 4485              		.cfi_endproc
 4486              	.LFE32:
ARM GAS  /tmp/ccGNfTzm.s 			page 131


 4488              		.section	.text.pcQueueGetName,"ax",%progbits
 4489              		.align	1
 4490              		.global	pcQueueGetName
 4491              		.syntax unified
 4492              		.thumb
 4493              		.thumb_func
 4494              		.fpu fpv5-d16
 4496              	pcQueueGetName:
 4497              	.LFB33:
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4498              		.loc 1 2674 2
 4499              		.cfi_startproc
 4500              		@ args = 0, pretend = 0, frame = 16
 4501              		@ frame_needed = 1, uses_anonymous_args = 0
 4502              		@ link register save eliminated.
 4503 0000 80B4     		push	{r7}
 4504              	.LCFI145:
 4505              		.cfi_def_cfa_offset 4
 4506              		.cfi_offset 7, -4
 4507 0002 85B0     		sub	sp, sp, #20
 4508              	.LCFI146:
 4509              		.cfi_def_cfa_offset 24
 4510 0004 00AF     		add	r7, sp, #0
 4511              	.LCFI147:
 4512              		.cfi_def_cfa_register 7
 4513 0006 7860     		str	r0, [r7, #4]
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 4514              		.loc 1 2676 14
 4515 0008 0023     		movs	r3, #0
 4516 000a BB60     		str	r3, [r7, #8]
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4517              		.loc 1 2680 11
 4518 000c 0023     		movs	r3, #0
 4519 000e FB60     		str	r3, [r7, #12]
 4520              		.loc 1 2680 3
 4521 0010 10E0     		b	.L294
 4522              	.L297:
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4523              		.loc 1 2682 28
 4524 0012 0D4A     		ldr	r2, .L299
 4525 0014 FB68     		ldr	r3, [r7, #12]
 4526 0016 DB00     		lsls	r3, r3, #3
 4527 0018 1344     		add	r3, r3, r2
 4528 001a 5B68     		ldr	r3, [r3, #4]
 4529              		.loc 1 2682 6
ARM GAS  /tmp/ccGNfTzm.s 			page 132


 4530 001c 7A68     		ldr	r2, [r7, #4]
 4531 001e 9A42     		cmp	r2, r3
 4532 0020 05D1     		bne	.L295
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 4533              		.loc 1 2684 14
 4534 0022 094A     		ldr	r2, .L299
 4535 0024 FB68     		ldr	r3, [r7, #12]
 4536 0026 52F83330 		ldr	r3, [r2, r3, lsl #3]
 4537 002a BB60     		str	r3, [r7, #8]
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4538              		.loc 1 2685 5
 4539 002c 05E0     		b	.L296
 4540              	.L295:
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4541              		.loc 1 2680 83 discriminator 2
 4542 002e FB68     		ldr	r3, [r7, #12]
 4543 0030 0133     		adds	r3, r3, #1
 4544 0032 FB60     		str	r3, [r7, #12]
 4545              	.L294:
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4546              		.loc 1 2680 3 discriminator 1
 4547 0034 FB68     		ldr	r3, [r7, #12]
 4548 0036 072B     		cmp	r3, #7
 4549 0038 EBD9     		bls	.L297
 4550              	.L296:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
 4551              		.loc 1 2693 10
 4552 003a BB68     		ldr	r3, [r7, #8]
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4553              		.loc 1 2694 2
 4554 003c 1846     		mov	r0, r3
 4555 003e 1437     		adds	r7, r7, #20
 4556              	.LCFI148:
 4557              		.cfi_def_cfa_offset 4
 4558 0040 BD46     		mov	sp, r7
 4559              	.LCFI149:
 4560              		.cfi_def_cfa_register 13
 4561              		@ sp needed
 4562 0042 5DF8047B 		ldr	r7, [sp], #4
 4563              	.LCFI150:
 4564              		.cfi_restore 7
 4565              		.cfi_def_cfa_offset 0
 4566 0046 7047     		bx	lr
 4567              	.L300:
 4568              		.align	2
 4569              	.L299:
 4570 0048 00000000 		.word	xQueueRegistry
 4571              		.cfi_endproc
 4572              	.LFE33:
ARM GAS  /tmp/ccGNfTzm.s 			page 133


 4574              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4575              		.align	1
 4576              		.global	vQueueUnregisterQueue
 4577              		.syntax unified
 4578              		.thumb
 4579              		.thumb_func
 4580              		.fpu fpv5-d16
 4582              	vQueueUnregisterQueue:
 4583              	.LFB34:
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4584              		.loc 1 2702 2
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 16
 4587              		@ frame_needed = 1, uses_anonymous_args = 0
 4588              		@ link register save eliminated.
 4589 0000 80B4     		push	{r7}
 4590              	.LCFI151:
 4591              		.cfi_def_cfa_offset 4
 4592              		.cfi_offset 7, -4
 4593 0002 85B0     		sub	sp, sp, #20
 4594              	.LCFI152:
 4595              		.cfi_def_cfa_offset 24
 4596 0004 00AF     		add	r7, sp, #0
 4597              	.LCFI153:
 4598              		.cfi_def_cfa_register 7
 4599 0006 7860     		str	r0, [r7, #4]
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4600              		.loc 1 2707 11
 4601 0008 0023     		movs	r3, #0
 4602 000a FB60     		str	r3, [r7, #12]
 4603              		.loc 1 2707 3
 4604 000c 16E0     		b	.L302
 4605              	.L305:
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4606              		.loc 1 2709 28
 4607 000e 104A     		ldr	r2, .L306
 4608 0010 FB68     		ldr	r3, [r7, #12]
 4609 0012 DB00     		lsls	r3, r3, #3
 4610 0014 1344     		add	r3, r3, r2
 4611 0016 5B68     		ldr	r3, [r3, #4]
 4612              		.loc 1 2709 6
 4613 0018 7A68     		ldr	r2, [r7, #4]
 4614 001a 9A42     		cmp	r2, r3
 4615 001c 0BD1     		bne	.L303
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccGNfTzm.s 			page 134


2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4616              		.loc 1 2712 38
 4617 001e 0C4A     		ldr	r2, .L306
 4618 0020 FB68     		ldr	r3, [r7, #12]
 4619 0022 0021     		movs	r1, #0
 4620 0024 42F83310 		str	r1, [r2, r3, lsl #3]
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4621              		.loc 1 2717 34
 4622 0028 094A     		ldr	r2, .L306
 4623 002a FB68     		ldr	r3, [r7, #12]
 4624 002c DB00     		lsls	r3, r3, #3
 4625 002e 1344     		add	r3, r3, r2
 4626 0030 0022     		movs	r2, #0
 4627 0032 5A60     		str	r2, [r3, #4]
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4628              		.loc 1 2718 5
 4629 0034 06E0     		b	.L304
 4630              	.L303:
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4631              		.loc 1 2707 83 discriminator 2
 4632 0036 FB68     		ldr	r3, [r7, #12]
 4633 0038 0133     		adds	r3, r3, #1
 4634 003a FB60     		str	r3, [r7, #12]
 4635              	.L302:
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4636              		.loc 1 2707 3 discriminator 1
 4637 003c FB68     		ldr	r3, [r7, #12]
 4638 003e 072B     		cmp	r3, #7
 4639 0040 E5D9     		bls	.L305
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4640              		.loc 1 2726 2
 4641 0042 00BF     		nop
 4642              	.L304:
 4643 0044 00BF     		nop
 4644 0046 1437     		adds	r7, r7, #20
 4645              	.LCFI154:
 4646              		.cfi_def_cfa_offset 4
 4647 0048 BD46     		mov	sp, r7
 4648              	.LCFI155:
 4649              		.cfi_def_cfa_register 13
 4650              		@ sp needed
 4651 004a 5DF8047B 		ldr	r7, [sp], #4
 4652              	.LCFI156:
 4653              		.cfi_restore 7
 4654              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccGNfTzm.s 			page 135


 4655 004e 7047     		bx	lr
 4656              	.L307:
 4657              		.align	2
 4658              	.L306:
 4659 0050 00000000 		.word	xQueueRegistry
 4660              		.cfi_endproc
 4661              	.LFE34:
 4663              		.text
 4664              	.Letext0:
 4665              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4666              		.file 4 "/usr/include/newlib/sys/_types.h"
 4667              		.file 5 "/usr/include/newlib/sys/reent.h"
 4668              		.file 6 "/usr/include/newlib/sys/lock.h"
 4669              		.file 7 "/usr/include/newlib/stdlib.h"
 4670              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4671              		.file 9 "Core/Inc/FreeRTOSConfig.h"
 4672              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4673              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4674              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4675              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
ARM GAS  /tmp/ccGNfTzm.s 			page 136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccGNfTzm.s:18     .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccGNfTzm.s:26     .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccGNfTzm.s:195    .text.xQueueGenericReset:00000000000000d0 $d
     /tmp/ccGNfTzm.s:200    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccGNfTzm.s:207    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccGNfTzm.s:566    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccGNfTzm.s:442    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccGNfTzm.s:449    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccGNfTzm.s:560    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccGNfTzm.s:628    .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccGNfTzm.s:634    .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccGNfTzm.s:815    .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccGNfTzm.s:689    .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccGNfTzm.s:696    .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccGNfTzm.s:747    .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccGNfTzm.s:754    .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccGNfTzm.s:808    .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccGNfTzm.s:3704   .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccGNfTzm.s:4252   .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccGNfTzm.s:3962   .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccGNfTzm.s:1207   .text.xQueueGenericSend:0000000000000208 $d
     /tmp/ccGNfTzm.s:1212   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:1219   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccGNfTzm.s:1492   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:1499   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccGNfTzm.s:1755   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccGNfTzm.s:1762   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccGNfTzm.s:3880   .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccGNfTzm.s:4102   .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccGNfTzm.s:2097   .text.xQueueReceive:00000000000001c8 $d
     /tmp/ccGNfTzm.s:2102   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccGNfTzm.s:2109   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccGNfTzm.s:3641   .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccGNfTzm.s:2506   .text.xQueueSemaphoreTake:0000000000000224 $d
     /tmp/ccGNfTzm.s:2511   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccGNfTzm.s:2518   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccGNfTzm.s:2855   .text.xQueuePeek:00000000000001cc $d
     /tmp/ccGNfTzm.s:2860   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:2867   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccGNfTzm.s:3095   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:3102   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccGNfTzm.s:3310   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccGNfTzm.s:3317   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccGNfTzm.s:3387   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccGNfTzm.s:3394   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccGNfTzm.s:3472   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:3479   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccGNfTzm.s:3552   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccGNfTzm.s:3559   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccGNfTzm.s:4582   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccGNfTzm.s:3635   .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccGNfTzm.s:3698   .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccGNfTzm.s:3874   .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccGNfTzm.s:3956   .text.prvUnlockQueue:0000000000000000 $t
ARM GAS  /tmp/ccGNfTzm.s 			page 137


     /tmp/ccGNfTzm.s:4096   .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccGNfTzm.s:4155   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:4162   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccGNfTzm.s:4246   .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccGNfTzm.s:4308   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccGNfTzm.s:4315   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccGNfTzm.s:4402   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccGNfTzm.s:4409   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccGNfTzm.s:4484   .text.vQueueAddToRegistry:0000000000000050 $d
     /tmp/ccGNfTzm.s:4489   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccGNfTzm.s:4496   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccGNfTzm.s:4570   .text.pcQueueGetName:0000000000000048 $d
     /tmp/ccGNfTzm.s:4575   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccGNfTzm.s:4659   .text.vQueueUnregisterQueue:0000000000000050 $d

UNDEFINED SYMBOLS
vPortEnterCritical
xTaskRemoveFromEventList
vListInitialise
vPortExitCritical
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
