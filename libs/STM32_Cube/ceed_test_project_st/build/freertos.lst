ARM GAS  /tmp/ccPoVWla.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"freertos.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
  17              		.align	2
  20              	xIdleTaskTCBBuffer:
  21 0000 00000000 		.space	84
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.bss.xIdleStack,"aw",%nobits
  23              		.align	2
  26              	xIdleStack:
  27 0000 00000000 		.space	512
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  29              		.align	1
  30              		.global	vApplicationGetIdleTaskMemory
  31              		.arch armv7e-m
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv5-d16
  37              	vApplicationGetIdleTaskMemory:
  38              	.LFB146:
  39              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
ARM GAS  /tmp/ccPoVWla.s 			page 2


  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  57:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  60:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  61:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  64:Core/Src/freertos.c **** {
  40              		.loc 1 64 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 16
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44              		@ link register save eliminated.
  45 0000 80B4     		push	{r7}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccPoVWla.s 			page 3


  48              		.cfi_offset 7, -4
  49 0002 85B0     		sub	sp, sp, #20
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 24
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 F860     		str	r0, [r7, #12]
  56 0008 B960     		str	r1, [r7, #8]
  57 000a 7A60     		str	r2, [r7, #4]
  65:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  58              		.loc 1 65 25
  59 000c FB68     		ldr	r3, [r7, #12]
  60 000e 074A     		ldr	r2, .L2
  61 0010 1A60     		str	r2, [r3]
  66:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  62              		.loc 1 66 27
  63 0012 BB68     		ldr	r3, [r7, #8]
  64 0014 064A     		ldr	r2, .L2+4
  65 0016 1A60     		str	r2, [r3]
  67:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  66              		.loc 1 67 25
  67 0018 7B68     		ldr	r3, [r7, #4]
  68 001a 8022     		movs	r2, #128
  69 001c 1A60     		str	r2, [r3]
  68:Core/Src/freertos.c ****   /* place for user code */
  69:Core/Src/freertos.c **** }
  70              		.loc 1 69 1
  71 001e 00BF     		nop
  72 0020 1437     		adds	r7, r7, #20
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 0022 BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0024 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 0028 7047     		bx	lr
  84              	.L3:
  85 002a 00BF     		.align	2
  86              	.L2:
  87 002c 00000000 		.word	xIdleTaskTCBBuffer
  88 0030 00000000 		.word	xIdleStack
  89              		.cfi_endproc
  90              	.LFE146:
  92              		.text
  93              	.Letext0:
  94              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
  95              		.file 3 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
  96              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
  97              		.file 5 "Core/Inc/FreeRTOSConfig.h"
  98              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
  99              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 100              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccPoVWla.s 			page 4


ARM GAS  /tmp/ccPoVWla.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccPoVWla.s:17     .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccPoVWla.s:20     .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer
     /tmp/ccPoVWla.s:23     .bss.xIdleStack:0000000000000000 $d
     /tmp/ccPoVWla.s:26     .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccPoVWla.s:29     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccPoVWla.s:37     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccPoVWla.s:87     .text.vApplicationGetIdleTaskMemory:000000000000002c $d

NO UNDEFINED SYMBOLS
